{"version":3,"file":"pages/api/ens-avatar.js","mappings":"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GAAA,IAAA8H,EAAAI,EAAAhB,EAAA,CAAAgB,EAAAf,EAAA,CAAAe,EAAAtb,CAAA,CAAAsb,EAAAxO,CAAA,EACV,MAAAwO,EAAAvT,IAAA,EACAqL,CAAAA,GAAA,IACA,CAGA,OAAAA,CAAA,EAKA,IAAAmI,EAAA,CACA,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,SACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,oBAGAC,EAAA,CACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,mBAGAC,EAAA,CACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,+BAYA,SAAAC,EAAArM,CAAA,EACA,K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AAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B,GAAAmG,IAAA,CAAAr9B,KAAAA,EAAA,WACAk3B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","sources":["webpack://_N_E/./node_modules/camelize/index.js","webpack://_N_E/./node_modules/css-background-parser/index.js","webpack://_N_E/./node_modules/css-box-shadow/index.js","webpack://_N_E/./node_modules/css-color-keywords/index.js","webpack://_N_E/./node_modules/css-to-react-native/index.js","webpack://_N_E/./node_modules/@shuding/opentype.js/dist/opentype.module.js","webpack://_N_E/./node_modules/emoji-regex/index.mjs","webpack://_N_E/./node_modules/satori/dist/index.wasm.js","webpack://_N_E/./node_modules/yoga-wasm-web/dist/entry.js","webpack://_N_E/./node_modules/yoga-wasm-web/dist/yoga.mjs","webpack://_N_E/./node_modules/yoga-wasm-web/dist/index.js","webpack://_N_E/./node_modules/@resvg/resvg-wasm/index.mjs","webpack://_N_E/./node_modules/@vercel/og/dist/index.js","webpack://_N_E/./src/pages/api/ens-avatar.tsx","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/","webpack://_N_E/./node_modules/@vercel/og/vendor/noto-sans-v27-latin-regular.ttf","webpack://_N_E/./src/assets/PlusJakartaSans-Bold.ttf","webpack://_N_E/./node_modules/@vercel/og/vendor/resvg.simd.wasm","webpack://_N_E/./node_modules/@vercel/og/vendor/yoga.wasm","webpack://_N_E/./node_modules/postcss-value-parser/lib/index.js","webpack://_N_E/./node_modules/postcss-value-parser/lib/parse.js","webpack://_N_E/./node_modules/postcss-value-parser/lib/stringify.js","webpack://_N_E/./node_modules/postcss-value-parser/lib/unit.js","webpack://_N_E/./node_modules/postcss-value-parser/lib/walk.js","webpack://_N_E/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://_N_E/./node_modules/react/cjs/react.production.min.js","webpack://_N_E/./node_modules/react/index.js","webpack://_N_E/./node_modules/react/jsx-runtime.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict';\n\nmodule.exports = function (obj) {\n\tif (typeof obj === 'string') { return camelCase(obj); }\n\treturn walk(obj);\n};\n\nfunction walk(obj) {\n\tif (!obj || typeof obj !== 'object') { return obj; }\n\tif (isDate(obj) || isRegex(obj)) { return obj; }\n\tif (isArray(obj)) { return map(obj, walk); }\n\treturn reduce(objectKeys(obj), function (acc, key) {\n\t\tvar camel = camelCase(key);\n\t\tacc[camel] = walk(obj[key]);\n\t\treturn acc;\n\t}, {});\n}\n\nfunction camelCase(str) {\n\treturn str.replace(/[_.-](\\w|$)/g, function (_, x) {\n\t\treturn x.toUpperCase();\n\t});\n}\n\nvar isArray = Array.isArray || function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nvar isDate = function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n};\n\nvar isRegex = function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar has = Object.prototype.hasOwnProperty;\nvar objectKeys = Object.keys || function (obj) {\n\tvar keys = [];\n\tfor (var key in obj) {\n\t\tif (has.call(obj, key)) { keys.push(key); }\n\t}\n\treturn keys;\n};\n\nfunction map(xs, f) {\n\tif (xs.map) { return xs.map(f); }\n\tvar res = [];\n\tfor (var i = 0; i < xs.length; i++) {\n\t\tres.push(f(xs[i], i));\n\t}\n\treturn res;\n}\n\nfunction reduce(xs, f, acc) {\n\tif (xs.reduce) { return xs.reduce(f, acc); }\n\tfor (var i = 0; i < xs.length; i++) {\n\t\tacc = f(acc, xs[i], i);\n\t}\n\treturn acc;\n}\n","/*!\n * https://github.com/gilmoreorless/css-background-parser\n * Copyright © 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/\n */\n(function (exports) {\n\n    function BackgroundList(backgrounds) {\n        if (!(this instanceof BackgroundList)) {\n            return new BackgroundList();\n        }\n        this.backgrounds = backgrounds || [];\n    }\n\n    BackgroundList.prototype.toString = function () {\n        return this.backgrounds.join(', ');\n    };\n\n\n    function Background(props) {\n        if (!(this instanceof Background)) {\n            return new Background(props);\n        }\n        props = props || {};\n        var bg = this;\n\n        function defprop(name, defaultValue) {\n            bg[name] = (name in props) ? props[name] : defaultValue;\n        }\n\n        // http://www.w3.org/TR/css3-background/#backgrounds\n        defprop('color', '');\n        defprop('image', 'none');\n        defprop('attachment', 'scroll');\n        defprop('clip', 'border-box');\n        defprop('origin', 'padding-box');\n        defprop('position', '0% 0%');\n        defprop('repeat', 'repeat');\n        defprop('size', 'auto');\n    }\n\n    Background.prototype.toString = function () {\n        var list = [\n            this.image,\n            this.repeat,\n            this.attachment,\n            this.position + ' / ' + this.size,\n            this.origin,\n            this.clip\n        ];\n        if (this.color) {\n            list.unshift(this.color);\n        }\n        return list.join(' ');\n    };\n\n    exports.BackgroundList = BackgroundList;\n    exports.Background = Background;\n\n\n    function parseImages(cssText) {\n        var images = [];\n        var tokens = /[,\\(\\)]/;\n        var parens = 0;\n        var buffer = '';\n\n        if (cssText == null) {\n            return images;\n        }\n\n        while (cssText.length) {\n            var match = tokens.exec(cssText);\n            if (!match) {\n                break;\n            }\n            var char = match[0];\n            var ignoreChar = false;\n            switch (char) {\n                case ',':\n                    if (!parens) {\n                        images.push(buffer.trim());\n                        buffer = '';\n                        ignoreChar = true;\n                    }\n                    break;\n                case '(':\n                    parens++;\n                    break;\n                case ')':\n                    parens--;\n                    break;\n            }\n\n            var index = match.index + 1;\n            buffer += cssText.slice(0, ignoreChar ? index - 1 : index);\n            cssText = cssText.slice(index);\n        }\n\n        if (buffer.length || cssText.length) {\n            images.push((buffer + cssText).trim());\n        }\n\n        return images;\n    }\n\n    // Helper for .map()\n    function trim(str) {\n        return str.trim();\n    }\n\n    function parseSimpleList(cssText) {\n        return (cssText || '').split(',').map(trim);\n    }\n\n    exports.parseElementStyle = function (styleObject) {\n        var list = new BackgroundList();\n        if (styleObject == null) {\n            return list;\n        }\n\n        var bgImage = parseImages(styleObject.backgroundImage);\n        var bgColor = styleObject.backgroundColor;\n        var bgAttachment = parseSimpleList(styleObject.backgroundAttachment);\n        var bgClip       = parseSimpleList(styleObject.backgroundClip);\n        var bgOrigin     = parseSimpleList(styleObject.backgroundOrigin);\n        var bgPosition   = parseSimpleList(styleObject.backgroundPosition);\n        var bgRepeat     = parseSimpleList(styleObject.backgroundRepeat);\n        var bgSize       = parseSimpleList(styleObject.backgroundSize);\n        var background;\n\n        for (var i = 0, ii = bgImage.length; i < ii; i++) {\n            background = new Background({\n                image:      bgImage[i],\n                attachment: bgAttachment[i % bgAttachment.length],\n                clip:       bgClip[i % bgClip.length],\n                origin:     bgOrigin[i % bgOrigin.length],\n                position:   bgPosition[i % bgPosition.length],\n                repeat:     bgRepeat[i % bgRepeat.length],\n                size:       bgSize[i % bgSize.length]\n            });\n            if (i === ii - 1) {\n                background.color = bgColor;\n            }\n            list.backgrounds.push(background);\n        }\n\n        return list;\n    };\n\n    // exports.parseCssString = function (cssString) {\n    //     return new Background();\n    // };\n\n    // exports.parseBackgroundValue = function (cssString) {\n    //     return new Background();\n    // };\n\n})((function (root) {\n    // CommonJS\n    if (typeof module !== 'undefined' && module.exports !== undefined) return module.exports;\n    // Global `cssBgParser`\n    return (root.cssBgParser = {});\n})(this));\n","const VALUES_REG = /,(?![^\\(]*\\))/\nconst PARTS_REG = /\\s(?![^(]*\\))/\nconst LENGTH_REG = /^[0-9]+[a-zA-Z%]+?$/\n\nconst parseValue = str => {\n  const parts = str.split(PARTS_REG)\n  const inset = parts.includes('inset')\n  const last = parts.slice(-1)[0]\n  const color = !isLength(last) ? last : undefined\n\n  const nums = parts\n    .filter(n => n !== 'inset')\n    .filter(n => n !== color)\n    .map(toNum)\n  const [ offsetX, offsetY, blurRadius, spreadRadius ] = nums\n\n  return {\n    inset,\n    offsetX,\n    offsetY,\n    blurRadius,\n    spreadRadius,\n    color\n  }\n}\n\nconst stringifyValue = obj => {\n  const {\n    inset,\n    offsetX = 0,\n    offsetY = 0,\n    blurRadius = 0,\n    spreadRadius,\n    color\n  } = obj || {}\n\n  return [\n    (inset ? 'inset' : null),\n    offsetX,\n    offsetY,\n    blurRadius ,\n    spreadRadius,\n    color\n  ].filter(v => v !== null && v !== undefined)\n    .map(toPx)\n    .map(s => ('' + s).trim())\n    .join(' ')\n}\n\nconst isLength = v => v === '0' || LENGTH_REG.test(v)\nconst toNum = v => {\n  if (!/px$/.test(v) && v !== '0') return v\n  const n = parseFloat(v)\n  return !isNaN(n) ? n : v\n}\nconst toPx = n => typeof n === 'number' && n !== 0 ? (n + 'px') : n\n\nconst parse = str => str.split(VALUES_REG).map(s => s.trim()).map(parseValue)\nconst stringify = arr => arr.map(stringifyValue).join(', ')\n\nmodule.exports = {\n  parse,\n  stringify\n}\n","'use strict'\n\nmodule.exports = require('./colors.json')\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar parse = require('postcss-value-parser');\n\nvar parse__default = _interopDefault(parse);\n\nvar camelizeStyleName = _interopDefault(require('camelize'));\n\nvar cssColorKeywords = _interopDefault(require('css-color-keywords'));\n\nvar matchString = function matchString(node) {\n  if (node.type !== 'string') return null;\n  return node.value.replace(/\\\\([0-9a-f]{1,6})(?:\\s|$)/gi, function (match, charCode) {\n    return String.fromCharCode(parseInt(charCode, 16));\n  }).replace(/\\\\/g, '');\n};\n\nvar hexColorRe = /^(#(?:[0-9a-f]{3,4}){1,2})$/i;\nvar cssFunctionNameRe = /^(rgba?|hsla?|hwb|lab|lch|gray|color)$/;\n\nvar matchColor = function matchColor(node) {\n  if (node.type === 'word' && (hexColorRe.test(node.value) || node.value in cssColorKeywords || node.value === 'transparent')) {\n    return node.value;\n  } else if (node.type === 'function' && cssFunctionNameRe.test(node.value)) {\n    return parse.stringify(node);\n  }\n\n  return null;\n};\n\nvar noneRe = /^(none)$/i;\nvar autoRe = /^(auto)$/i;\nvar identRe = /(^-?[_a-z][_a-z0-9-]*$)/i; // Note if these are wrong, you'll need to change index.js too\n\nvar numberRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)$/i; // Note lengthRe is sneaky: you can omit units for 0\n\nvar lengthRe = /^(0$|(?:[+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)(?=px$))/i;\nvar unsupportedUnitRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?(ch|em|ex|rem|vh|vw|vmin|vmax|cm|mm|in|pc|pt))$/i;\nvar angleRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?(?:deg|rad))$/i;\nvar percentRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?%)$/i;\n\nvar noopToken = function noopToken(predicate) {\n  return function (node) {\n    return predicate(node) ? '<token>' : null;\n  };\n};\n\nvar valueForTypeToken = function valueForTypeToken(type) {\n  return function (node) {\n    return node.type === type ? node.value : null;\n  };\n};\n\nvar regExpToken = function regExpToken(regExp, transform) {\n  if (transform === void 0) {\n    transform = String;\n  }\n\n  return function (node) {\n    if (node.type !== 'word') return null;\n    var match = node.value.match(regExp);\n    if (match === null) return null;\n    var value = transform(match[1]);\n    return value;\n  };\n};\n\nvar SPACE = noopToken(function (node) {\n  return node.type === 'space';\n});\nvar SLASH = noopToken(function (node) {\n  return node.type === 'div' && node.value === '/';\n});\nvar COMMA = noopToken(function (node) {\n  return node.type === 'div' && node.value === ',';\n});\nvar WORD = valueForTypeToken('word');\nvar NONE = regExpToken(noneRe);\nvar AUTO = regExpToken(autoRe);\nvar NUMBER = regExpToken(numberRe, Number);\nvar LENGTH = regExpToken(lengthRe, Number);\nvar UNSUPPORTED_LENGTH_UNIT = regExpToken(unsupportedUnitRe);\nvar ANGLE = regExpToken(angleRe, function (angle) {\n  return angle.toLowerCase();\n});\nvar PERCENT = regExpToken(percentRe);\nvar IDENT = regExpToken(identRe);\nvar STRING = matchString;\nvar COLOR = matchColor;\nvar LINE = regExpToken(/^(none|underline|line-through)$/i);\nvar BORDER_STYLE = regExpToken(/^(solid|dashed|dotted)$/);\nvar defaultBorderWidth = 1;\nvar defaultBorderColor = 'black';\nvar defaultBorderStyle = 'solid';\n\nvar border = function border(tokenStream) {\n  var borderWidth;\n  var borderColor;\n  var borderStyle;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      borderWidth: 0,\n      borderColor: 'black',\n      borderStyle: 'solid'\n    };\n  }\n\n  var partsParsed = 0;\n\n  while (partsParsed < 3 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (borderWidth === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n      borderWidth = tokenStream.lastValue;\n    } else if (borderColor === undefined && tokenStream.matches(COLOR)) {\n      borderColor = tokenStream.lastValue;\n    } else if (borderStyle === undefined && tokenStream.matches(BORDER_STYLE)) {\n      borderStyle = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (borderWidth === undefined) borderWidth = defaultBorderWidth;\n  if (borderColor === undefined) borderColor = defaultBorderColor;\n  if (borderStyle === undefined) borderStyle = defaultBorderStyle;\n  return {\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    borderStyle: borderStyle\n  };\n};\n\nvar directionFactory = function directionFactory(_ref) {\n  var _ref$types = _ref.types,\n      types = _ref$types === void 0 ? [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT] : _ref$types,\n      _ref$directions = _ref.directions,\n      directions = _ref$directions === void 0 ? ['Top', 'Right', 'Bottom', 'Left'] : _ref$directions,\n      _ref$prefix = _ref.prefix,\n      prefix = _ref$prefix === void 0 ? '' : _ref$prefix,\n      _ref$suffix = _ref.suffix,\n      suffix = _ref$suffix === void 0 ? '' : _ref$suffix;\n  return function (tokenStream) {\n    var _ref2;\n\n    var values = []; // borderWidth doesn't currently allow a percent value, but may do in the future\n\n    values.push(tokenStream.expect.apply(tokenStream, types));\n\n    while (values.length < 4 && tokenStream.hasTokens()) {\n      tokenStream.expect(SPACE);\n      values.push(tokenStream.expect.apply(tokenStream, types));\n    }\n\n    tokenStream.expectEmpty();\n    var top = values[0],\n        _values$ = values[1],\n        right = _values$ === void 0 ? top : _values$,\n        _values$2 = values[2],\n        bottom = _values$2 === void 0 ? top : _values$2,\n        _values$3 = values[3],\n        left = _values$3 === void 0 ? right : _values$3;\n\n    var keyFor = function keyFor(n) {\n      return \"\" + prefix + directions[n] + suffix;\n    };\n\n    return _ref2 = {}, _ref2[keyFor(0)] = top, _ref2[keyFor(1)] = right, _ref2[keyFor(2)] = bottom, _ref2[keyFor(3)] = left, _ref2;\n  };\n};\n\nvar parseShadowOffset = function parseShadowOffset(tokenStream) {\n  var width = tokenStream.expect(LENGTH);\n  var height = tokenStream.matches(SPACE) ? tokenStream.expect(LENGTH) : width;\n  tokenStream.expectEmpty();\n  return {\n    width: width,\n    height: height\n  };\n};\n\nvar parseShadow = function parseShadow(tokenStream) {\n  var offsetX;\n  var offsetY;\n  var radius;\n  var color;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      offset: {\n        width: 0,\n        height: 0\n      },\n      radius: 0,\n      color: 'black'\n    };\n  }\n\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n\n    if (offsetX === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n      offsetX = tokenStream.lastValue;\n      tokenStream.expect(SPACE);\n      offsetY = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n      tokenStream.saveRewindPoint();\n\n      if (tokenStream.matches(SPACE) && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n        radius = tokenStream.lastValue;\n      } else {\n        tokenStream.rewind();\n      }\n    } else if (color === undefined && tokenStream.matches(COLOR)) {\n      color = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    didParseFirst = true;\n  }\n\n  if (offsetX === undefined) tokenStream[\"throw\"]();\n  return {\n    offset: {\n      width: offsetX,\n      height: offsetY\n    },\n    radius: radius !== undefined ? radius : 0,\n    color: color !== undefined ? color : 'black'\n  };\n};\n\nvar boxShadow = function boxShadow(tokenStream) {\n  var _parseShadow = parseShadow(tokenStream),\n      offset = _parseShadow.offset,\n      radius = _parseShadow.radius,\n      color = _parseShadow.color;\n\n  return {\n    shadowOffset: offset,\n    shadowRadius: radius,\n    shadowColor: color,\n    shadowOpacity: 1\n  };\n};\n\nvar defaultFlexGrow = 1;\nvar defaultFlexShrink = 1;\nvar defaultFlexBasis = 0;\n\nvar flex = function flex(tokenStream) {\n  var flexGrow;\n  var flexShrink;\n  var flexBasis;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      flexGrow: 0,\n      flexShrink: 0,\n      flexBasis: 'auto'\n    };\n  }\n\n  tokenStream.saveRewindPoint();\n\n  if (tokenStream.matches(AUTO) && !tokenStream.hasTokens()) {\n    return {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexBasis: 'auto'\n    };\n  }\n\n  tokenStream.rewind();\n  var partsParsed = 0;\n\n  while (partsParsed < 2 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (flexGrow === undefined && tokenStream.matches(NUMBER)) {\n      flexGrow = tokenStream.lastValue;\n      tokenStream.saveRewindPoint();\n\n      if (tokenStream.matches(SPACE) && tokenStream.matches(NUMBER)) {\n        flexShrink = tokenStream.lastValue;\n      } else {\n        tokenStream.rewind();\n      }\n    } else if (flexBasis === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT)) {\n      flexBasis = tokenStream.lastValue;\n    } else if (flexBasis === undefined && tokenStream.matches(AUTO)) {\n      flexBasis = 'auto';\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (flexGrow === undefined) flexGrow = defaultFlexGrow;\n  if (flexShrink === undefined) flexShrink = defaultFlexShrink;\n  if (flexBasis === undefined) flexBasis = defaultFlexBasis;\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\nvar FLEX_WRAP = regExpToken(/(nowrap|wrap|wrap-reverse)/);\nvar FLEX_DIRECTION = regExpToken(/(row|row-reverse|column|column-reverse)/);\nvar defaultFlexWrap = 'nowrap';\nvar defaultFlexDirection = 'row';\n\nvar flexFlow = function flexFlow(tokenStream) {\n  var flexWrap;\n  var flexDirection;\n  var partsParsed = 0;\n\n  while (partsParsed < 2 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (flexWrap === undefined && tokenStream.matches(FLEX_WRAP)) {\n      flexWrap = tokenStream.lastValue;\n    } else if (flexDirection === undefined && tokenStream.matches(FLEX_DIRECTION)) {\n      flexDirection = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (flexWrap === undefined) flexWrap = defaultFlexWrap;\n  if (flexDirection === undefined) flexDirection = defaultFlexDirection;\n  return {\n    flexWrap: flexWrap,\n    flexDirection: flexDirection\n  };\n};\n\nvar fontFamily = function fontFamily(tokenStream) {\n  var fontFamily;\n\n  if (tokenStream.matches(STRING)) {\n    fontFamily = tokenStream.lastValue;\n  } else {\n    fontFamily = tokenStream.expect(IDENT);\n\n    while (tokenStream.hasTokens()) {\n      tokenStream.expect(SPACE);\n      var nextIdent = tokenStream.expect(IDENT);\n      fontFamily += \" \" + nextIdent;\n    }\n  }\n\n  tokenStream.expectEmpty();\n  return {\n    fontFamily: fontFamily\n  };\n};\n\nvar NORMAL = regExpToken(/^(normal)$/);\nvar STYLE = regExpToken(/^(italic)$/);\nvar WEIGHT = regExpToken(/^([1-9]00|bold)$/);\nvar VARIANT = regExpToken(/^(small-caps)$/);\nvar defaultFontStyle = 'normal';\nvar defaultFontWeight = 'normal';\nvar defaultFontVariant = [];\n\nvar font = function font(tokenStream) {\n  var fontStyle;\n  var fontWeight;\n  var fontVariant; // let fontSize;\n\n  var lineHeight; // let fontFamily;\n\n  var numStyleWeightVariantMatched = 0;\n\n  while (numStyleWeightVariantMatched < 3 && tokenStream.hasTokens()) {\n    if (tokenStream.matches(NORMAL)) ;else if (fontStyle === undefined && tokenStream.matches(STYLE)) {\n      fontStyle = tokenStream.lastValue;\n    } else if (fontWeight === undefined && tokenStream.matches(WEIGHT)) {\n      fontWeight = tokenStream.lastValue;\n    } else if (fontVariant === undefined && tokenStream.matches(VARIANT)) {\n      fontVariant = [tokenStream.lastValue];\n    } else {\n      break;\n    }\n    tokenStream.expect(SPACE);\n    numStyleWeightVariantMatched += 1;\n  }\n\n  var fontSize = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n\n  if (tokenStream.matches(SLASH)) {\n    lineHeight = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n  }\n\n  tokenStream.expect(SPACE);\n\n  var _fontFamily = fontFamily(tokenStream),\n      fontFamily$1 = _fontFamily.fontFamily;\n\n  if (fontStyle === undefined) fontStyle = defaultFontStyle;\n  if (fontWeight === undefined) fontWeight = defaultFontWeight;\n  if (fontVariant === undefined) fontVariant = defaultFontVariant;\n  var out = {\n    fontStyle: fontStyle,\n    fontWeight: fontWeight,\n    fontVariant: fontVariant,\n    fontSize: fontSize,\n    fontFamily: fontFamily$1\n  };\n  if (lineHeight !== undefined) out.lineHeight = lineHeight;\n  return out;\n};\n\nvar ALIGN_CONTENT = regExpToken(/(flex-(?:start|end)|center|stretch|space-(?:between|around))/);\nvar JUSTIFY_CONTENT = regExpToken(/(flex-(?:start|end)|center|space-(?:between|around|evenly))/);\n\nvar placeContent = function placeContent(tokenStream) {\n  var alignContent = tokenStream.expect(ALIGN_CONTENT);\n  var justifyContent;\n\n  if (tokenStream.hasTokens()) {\n    tokenStream.expect(SPACE);\n    justifyContent = tokenStream.expect(JUSTIFY_CONTENT);\n  } else {\n    justifyContent = 'stretch';\n  }\n\n  tokenStream.expectEmpty();\n  return {\n    alignContent: alignContent,\n    justifyContent: justifyContent\n  };\n};\n\nvar STYLE$1 = regExpToken(/^(solid|double|dotted|dashed)$/);\nvar defaultTextDecorationLine = 'none';\nvar defaultTextDecorationStyle = 'solid';\nvar defaultTextDecorationColor = 'black';\n\nvar textDecoration = function textDecoration(tokenStream) {\n  var line;\n  var style;\n  var color;\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n\n    if (line === undefined && tokenStream.matches(LINE)) {\n      var lines = [tokenStream.lastValue.toLowerCase()];\n      tokenStream.saveRewindPoint();\n\n      if (lines[0] !== 'none' && tokenStream.matches(SPACE) && tokenStream.matches(LINE)) {\n        lines.push(tokenStream.lastValue.toLowerCase()); // Underline comes before line-through\n\n        lines.sort().reverse();\n      } else {\n        tokenStream.rewind();\n      }\n\n      line = lines.join(' ');\n    } else if (style === undefined && tokenStream.matches(STYLE$1)) {\n      style = tokenStream.lastValue;\n    } else if (color === undefined && tokenStream.matches(COLOR)) {\n      color = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    didParseFirst = true;\n  }\n\n  return {\n    textDecorationLine: line !== undefined ? line : defaultTextDecorationLine,\n    textDecorationColor: color !== undefined ? color : defaultTextDecorationColor,\n    textDecorationStyle: style !== undefined ? style : defaultTextDecorationStyle\n  };\n};\n\nvar textDecorationLine = function textDecorationLine(tokenStream) {\n  var lines = [];\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n    lines.push(tokenStream.expect(LINE).toLowerCase());\n    didParseFirst = true;\n  }\n\n  lines.sort().reverse();\n  return {\n    textDecorationLine: lines.join(' ')\n  };\n};\n\nvar textShadow = function textShadow(tokenStream) {\n  var _parseShadow2 = parseShadow(tokenStream),\n      offset = _parseShadow2.offset,\n      radius = _parseShadow2.radius,\n      color = _parseShadow2.color;\n\n  return {\n    textShadowOffset: offset,\n    textShadowRadius: radius,\n    textShadowColor: color\n  };\n};\n\nvar oneOfType = function oneOfType(tokenType) {\n  return function (functionStream) {\n    var value = functionStream.expect(tokenType);\n    functionStream.expectEmpty();\n    return value;\n  };\n};\n\nvar singleNumber = oneOfType(NUMBER);\nvar singleLength = oneOfType(LENGTH);\nvar singleAngle = oneOfType(ANGLE);\n\nvar xyTransformFactory = function xyTransformFactory(tokenType) {\n  return function (key, valueIfOmitted) {\n    return function (functionStream) {\n      var _ref3, _ref4;\n\n      var x = functionStream.expect(tokenType);\n      var y;\n\n      if (functionStream.hasTokens()) {\n        functionStream.expect(COMMA);\n        y = functionStream.expect(tokenType);\n      } else if (valueIfOmitted !== undefined) {\n        y = valueIfOmitted;\n      } else {\n        // Assumption, if x === y, then we can omit XY\n        // I.e. scale(5) => [{ scale: 5 }] rather than [{ scaleX: 5 }, { scaleY: 5 }]\n        return x;\n      }\n\n      functionStream.expectEmpty();\n      return [(_ref3 = {}, _ref3[key + \"Y\"] = y, _ref3), (_ref4 = {}, _ref4[key + \"X\"] = x, _ref4)];\n    };\n  };\n};\n\nvar xyNumber = xyTransformFactory(NUMBER);\nvar xyLength = xyTransformFactory(LENGTH);\nvar xyAngle = xyTransformFactory(ANGLE);\nvar partTransforms = {\n  perspective: singleNumber,\n  scale: xyNumber('scale'),\n  scaleX: singleNumber,\n  scaleY: singleNumber,\n  translate: xyLength('translate', 0),\n  translateX: singleLength,\n  translateY: singleLength,\n  rotate: singleAngle,\n  rotateX: singleAngle,\n  rotateY: singleAngle,\n  rotateZ: singleAngle,\n  skewX: singleAngle,\n  skewY: singleAngle,\n  skew: xyAngle('skew', '0deg')\n};\n\nvar transform = function transform(tokenStream) {\n  var transforms = [];\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n    var functionStream = tokenStream.expectFunction();\n    var functionName = functionStream.functionName;\n    var transformedValues = partTransforms[functionName](functionStream);\n\n    if (!Array.isArray(transformedValues)) {\n      var _ref5;\n\n      transformedValues = [(_ref5 = {}, _ref5[functionName] = transformedValues, _ref5)];\n    }\n\n    transforms = transformedValues.concat(transforms);\n    didParseFirst = true;\n  }\n\n  return {\n    transform: transforms\n  };\n};\n\nvar background = function background(tokenStream) {\n  return {\n    backgroundColor: tokenStream.expect(COLOR)\n  };\n};\n\nvar borderColor = directionFactory({\n  types: [COLOR],\n  prefix: 'border',\n  suffix: 'Color'\n});\nvar borderRadius = directionFactory({\n  directions: ['TopLeft', 'TopRight', 'BottomRight', 'BottomLeft'],\n  prefix: 'border',\n  suffix: 'Radius'\n});\nvar borderWidth = directionFactory({\n  prefix: 'border',\n  suffix: 'Width'\n});\nvar margin = directionFactory({\n  types: [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT, AUTO],\n  prefix: 'margin'\n});\nvar padding = directionFactory({\n  prefix: 'padding'\n});\n\nvar fontVariant = function fontVariant(tokenStream) {\n  return {\n    fontVariant: [tokenStream.expect(IDENT)]\n  };\n};\n\nvar fontWeight = function fontWeight(tokenStream) {\n  return {\n    fontWeight: tokenStream.expect(WORD) // Also match numbers as strings\n\n  };\n};\n\nvar shadowOffset = function shadowOffset(tokenStream) {\n  return {\n    shadowOffset: parseShadowOffset(tokenStream)\n  };\n};\n\nvar textShadowOffset = function textShadowOffset(tokenStream) {\n  return {\n    textShadowOffset: parseShadowOffset(tokenStream)\n  };\n};\n\nvar transforms = {\n  background: background,\n  border: border,\n  borderColor: borderColor,\n  borderRadius: borderRadius,\n  borderWidth: borderWidth,\n  boxShadow: boxShadow,\n  flex: flex,\n  flexFlow: flexFlow,\n  font: font,\n  fontFamily: fontFamily,\n  fontVariant: fontVariant,\n  fontWeight: fontWeight,\n  margin: margin,\n  padding: padding,\n  placeContent: placeContent,\n  shadowOffset: shadowOffset,\n  textShadow: textShadow,\n  textShadowOffset: textShadowOffset,\n  textDecoration: textDecoration,\n  textDecorationLine: textDecorationLine,\n  transform: transform\n};\nvar propertiesWithoutUnits;\n\nif (process.env.NODE_ENV !== 'production') {\n  propertiesWithoutUnits = ['aspectRatio', 'elevation', 'flexGrow', 'flexShrink', 'opacity', 'shadowOpacity', 'zIndex'];\n}\n\nvar devPropertiesWithUnitsRegExp = propertiesWithoutUnits != null ? new RegExp(propertiesWithoutUnits.join('|')) : null;\nvar SYMBOL_MATCH = 'SYMBOL_MATCH';\n\nvar TokenStream =\n/*#__PURE__*/\nfunction () {\n  function TokenStream(nodes, parent) {\n    this.index = 0;\n    this.nodes = nodes;\n    this.functionName = parent != null ? parent.value : null;\n    this.lastValue = null;\n    this.rewindIndex = -1;\n  }\n\n  var _proto = TokenStream.prototype;\n\n  _proto.hasTokens = function hasTokens() {\n    return this.index <= this.nodes.length - 1;\n  };\n\n  _proto[SYMBOL_MATCH] = function () {\n    if (!this.hasTokens()) return null;\n    var node = this.nodes[this.index];\n\n    for (var i = 0; i < arguments.length; i += 1) {\n      var tokenDescriptor = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      var value = tokenDescriptor(node);\n\n      if (value !== null) {\n        this.index += 1;\n        this.lastValue = value;\n        return value;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.matches = function matches() {\n    return this[SYMBOL_MATCH].apply(this, arguments) !== null;\n  };\n\n  _proto.expect = function expect() {\n    var value = this[SYMBOL_MATCH].apply(this, arguments);\n    return value !== null ? value : this[\"throw\"]();\n  };\n\n  _proto.matchesFunction = function matchesFunction() {\n    var node = this.nodes[this.index];\n    if (node.type !== 'function') return null;\n    var value = new TokenStream(node.nodes, node);\n    this.index += 1;\n    this.lastValue = null;\n    return value;\n  };\n\n  _proto.expectFunction = function expectFunction() {\n    var value = this.matchesFunction();\n    return value !== null ? value : this[\"throw\"]();\n  };\n\n  _proto.expectEmpty = function expectEmpty() {\n    if (this.hasTokens()) this[\"throw\"]();\n  };\n\n  _proto[\"throw\"] = function _throw() {\n    throw new Error(\"Unexpected token type: \" + this.nodes[this.index].type);\n  };\n\n  _proto.saveRewindPoint = function saveRewindPoint() {\n    this.rewindIndex = this.index;\n  };\n\n  _proto.rewind = function rewind() {\n    if (this.rewindIndex === -1) throw new Error('Internal error');\n    this.index = this.rewindIndex;\n    this.lastValue = null;\n  };\n\n  return TokenStream;\n}();\n/* eslint-disable no-param-reassign */\n// Note if this is wrong, you'll need to change tokenTypes.js too\n\n\nvar numberOrLengthRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)(?:px)?$/i;\nvar numberOnlyRe = /^[+-]?(?:\\d*\\.\\d*|[1-9]\\d*)(?:e[+-]?\\d+)?$/i;\nvar boolRe = /^true|false$/i;\nvar nullRe = /^null$/i;\nvar undefinedRe = /^undefined$/i; // Undocumented export\n\nvar transformRawValue = function transformRawValue(propName, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    var needsUnit = !devPropertiesWithUnitsRegExp.test(propName);\n    var isNumberWithoutUnit = numberOnlyRe.test(value);\n\n    if (needsUnit && isNumberWithoutUnit) {\n      // eslint-disable-next-line no-console\n      console.warn(\"Expected style \\\"\" + propName + \": \" + value + \"\\\" to contain units\");\n    }\n\n    if (!needsUnit && value !== '0' && !isNumberWithoutUnit) {\n      // eslint-disable-next-line no-console\n      console.warn(\"Expected style \\\"\" + propName + \": \" + value + \"\\\" to be unitless\");\n    }\n  }\n\n  var numberMatch = value.match(numberOrLengthRe);\n  if (numberMatch !== null) return Number(numberMatch[1]);\n  var boolMatch = value.match(boolRe);\n  if (boolMatch !== null) return boolMatch[0].toLowerCase() === 'true';\n  var nullMatch = value.match(nullRe);\n  if (nullMatch !== null) return null;\n  var undefinedMatch = value.match(undefinedRe);\n  if (undefinedMatch !== null) return undefined;\n  return value;\n};\n\nvar baseTransformShorthandValue = function baseTransformShorthandValue(propName, value) {\n  var ast = parse__default(value);\n  var tokenStream = new TokenStream(ast.nodes);\n  return transforms[propName](tokenStream);\n};\n\nvar transformShorthandValue = process.env.NODE_ENV === 'production' ? baseTransformShorthandValue : function (propName, value) {\n  try {\n    return baseTransformShorthandValue(propName, value);\n  } catch (e) {\n    throw new Error(\"Failed to parse declaration \\\"\" + propName + \": \" + value + \"\\\"\");\n  }\n};\n\nvar getStylesForProperty = function getStylesForProperty(propName, inputValue, allowShorthand) {\n  var _ref6;\n\n  var isRawValue = allowShorthand === false || !(propName in transforms);\n  var value = inputValue.trim();\n  var propValues = isRawValue ? (_ref6 = {}, _ref6[propName] = transformRawValue(propName, value), _ref6) : transformShorthandValue(propName, value);\n  return propValues;\n};\n\nvar getPropertyName = function getPropertyName(propName) {\n  var isCustomProp = /^--\\w+/.test(propName);\n\n  if (isCustomProp) {\n    return propName;\n  }\n\n  return camelizeStyleName(propName);\n};\n\nvar index = function index(rules, shorthandBlacklist) {\n  if (shorthandBlacklist === void 0) {\n    shorthandBlacklist = [];\n  }\n\n  return rules.reduce(function (accum, rule) {\n    var propertyName = getPropertyName(rule[0]);\n    var value = rule[1];\n    var allowShorthand = shorthandBlacklist.indexOf(propertyName) === -1;\n    return Object.assign(accum, getStylesForProperty(propertyName, value, allowShorthand));\n  }, {});\n};\n\nexports[\"default\"] = index;\nexports.getPropertyName = getPropertyName;\nexports.getStylesForProperty = getStylesForProperty;\nexports.transformRawValue = transformRawValue;\n","/**\n * https://opentype.js.org v1.3.5 | (c) Frederik De Bleser and other contributors | MIT License | Uses fflate by 101arrowz and string.prototype.codepointat polyfill by Mathias Bynens\n */\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            { ++l[cd[i] - 1]; }\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    { flt[i] = 8; }\nfor (var i = 144; i < 256; ++i)\n    { flt[i] = 9; }\nfor (var i = 256; i < 280; ++i)\n    { flt[i] = 7; }\nfor (var i = 280; i < 288; ++i)\n    { flt[i] = 8; }\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    { fdt[i] = 5; }\n// fixed length map\nvar flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            { m = a[i]; }\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        { s = 0; }\n    if (e == null || e > v.length)\n        { e = v.length; }\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        { Error.captureStackTrace(e, err); }\n    if (!nt)\n        { throw e; }\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        { return buf || new u8(0); }\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        { st = {}; }\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        { buf = new u8(sl * 3); }\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        { err(0); }\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    { cbuf(bt + l); }\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                { lm = flrm, dm = fdrm, lbt = 9, dbt = 5; }\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            { n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1]; }\n                        else if (s == 17)\n                            { n = 3 + bits(dat, pos, 7), pos += 3; }\n                        else if (s == 18)\n                            { n = 11 + bits(dat, pos, 127), pos += 7; }\n                        while (n--)\n                            { ldt[i++] = c; }\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                { err(1); }\n            if (pos > tbts) {\n                if (noSt)\n                    { err(0); }\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            { cbuf(bt + 131072); }\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    { err(0); }\n                break;\n            }\n            if (!c)\n                { err(2); }\n            if (sym < 256)\n                { buf[bt++] = sym; }\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    { err(3); }\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        { err(0); }\n                    break;\n                }\n                if (noBuf)\n                    { cbuf(bt + 131072); }\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            { final = 1, st.m = lbt, st.d = dm, st.n = dbt; }\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction inflateSync(data, out) {\n    return inflt(data, out);\n}\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n\n// Geometric objects\n\n// import BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function (x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function (x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (\n    x1,\n    y1,\n    x2,\n    y2,\n    x,\n    y\n) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (\n    x1,\n    y1,\n    x,\n    y\n) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function () {\n    this.commands.push({\n        type: 'Z',\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function (pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n    // else if (pathOrCommands instanceof BoundingBox) {\n    //     const box = pathOrCommands;\n    //     this.moveTo(box.x1, box.y1);\n    //     this.lineTo(box.x2, box.y1);\n    //     this.lineTo(box.x2, box.y2);\n    //     this.lineTo(box.x1, box.y2);\n    //     this.close();\n    //     return;\n    // }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function (decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var arguments$1 = arguments;\n\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments$1[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Glyph encoding\n\nvar cffStandardStrings = [\n    '.notdef',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    'questiondown',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    'AE',\n    'ordfeminine',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    'ae',\n    'dotlessi',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls',\n    'onesuperior',\n    'logicalnot',\n    'mu',\n    'trademark',\n    'Eth',\n    'onehalf',\n    'plusminus',\n    'Thorn',\n    'onequarter',\n    'divide',\n    'brokenbar',\n    'degree',\n    'thorn',\n    'threequarters',\n    'twosuperior',\n    'registered',\n    'minus',\n    'eth',\n    'multiply',\n    'threesuperior',\n    'copyright',\n    'Aacute',\n    'Acircumflex',\n    'Adieresis',\n    'Agrave',\n    'Aring',\n    'Atilde',\n    'Ccedilla',\n    'Eacute',\n    'Ecircumflex',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Ntilde',\n    'Oacute',\n    'Ocircumflex',\n    'Odieresis',\n    'Ograve',\n    'Otilde',\n    'Scaron',\n    'Uacute',\n    'Ucircumflex',\n    'Udieresis',\n    'Ugrave',\n    'Yacute',\n    'Ydieresis',\n    'Zcaron',\n    'aacute',\n    'acircumflex',\n    'adieresis',\n    'agrave',\n    'aring',\n    'atilde',\n    'ccedilla',\n    'eacute',\n    'ecircumflex',\n    'edieresis',\n    'egrave',\n    'iacute',\n    'icircumflex',\n    'idieresis',\n    'igrave',\n    'ntilde',\n    'oacute',\n    'ocircumflex',\n    'odieresis',\n    'ograve',\n    'otilde',\n    'scaron',\n    'uacute',\n    'ucircumflex',\n    'udieresis',\n    'ugrave',\n    'yacute',\n    'ydieresis',\n    'zcaron',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    '266 ff',\n    'onedotenleader',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    'isuperior',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    'ff',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    'Dotaccentsmall',\n    'Macronsmall',\n    'figuredash',\n    'hypheninferior',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    'zerosuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall',\n    '001.000',\n    '001.001',\n    '001.002',\n    '001.003',\n    'Black',\n    'Bold',\n    'Book',\n    'Light',\n    'Medium',\n    'Regular',\n    'Roman',\n    'Semibold' ];\n\nvar cffStandardEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    '',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    '',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    '',\n    'questiondown',\n    '',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    '',\n    'ring',\n    'cedilla',\n    '',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'AE',\n    '',\n    'ordfeminine',\n    '',\n    '',\n    '',\n    '',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'ae',\n    '',\n    '',\n    '',\n    'dotlessi',\n    '',\n    '',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls' ];\n\nvar cffExpertEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    '',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    '',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    '',\n    '',\n    'isuperior',\n    '',\n    '',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    '',\n    '',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    '',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    '',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    '',\n    '',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    '',\n    'Dotaccentsmall',\n    '',\n    '',\n    'Macronsmall',\n    '',\n    '',\n    'figuredash',\n    'hypheninferior',\n    '',\n    '',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    '',\n    '',\n    '',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    '',\n    '',\n    'zerosuperior',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall' ];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function (c) {\n    var code = c.codePointAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function (c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function (s) {\n    var code = s.codePointAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction addGlyphNamesAll(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)],\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\n// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\nvar check = { fail: fail, argument: argument, assert: argument };\n\n// The Glyph object\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    var _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function () {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function (p) {\n            _path = p;\n        },\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function (options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes =\n        options.unicodes || options.unicode !== undefined\n            ? [options.unicode]\n            : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if ('xMin' in options) {\n        this.xMin = options.xMin;\n    }\n\n    if ('yMin' in options) {\n        this.yMin = options.yMin;\n    }\n\n    if ('xMax' in options) {\n        this.xMax = options.xMax;\n    }\n\n    if ('yMax' in options) {\n        this.yMax = options.yMax;\n    }\n\n    if ('advanceWidth' in options) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function (unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// /**\n//  * Calculate the minimum bounding box for this glyph.\n//  * @return {opentype.BoundingBox}\n//  */\n// Glyph.prototype.getBoundingBox = function() {\n//     return this.path.getBoundingBox();\n// };\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function (x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var commands;\n    var hPoints;\n    if (!options) { options = {}; }\n    var xScale = options.xScale;\n    var yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        var scale = (1 / (this.path.unitsPerEm || 1000)) * fontSize;\n        if (xScale === undefined) { xScale = scale; }\n        if (yScale === undefined) { yScale = scale; }\n    }\n\n    var p = new Path();\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + cmd.x * xScale, y + -cmd.y * yScale);\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + cmd.x * xScale, y + -cmd.y * yScale);\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(\n                x + cmd.x1 * xScale,\n                y + -cmd.y1 * yScale,\n                x + cmd.x * xScale,\n                y + -cmd.y * yScale\n            );\n        } else if (cmd.type === 'C') {\n            p.curveTo(\n                x + cmd.x1 * xScale,\n                y + -cmd.y1 * yScale,\n                x + cmd.x2 * xScale,\n                y + -cmd.y2 * yScale,\n                x + cmd.x * xScale,\n                y + -cmd.y * yScale\n            );\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function () {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(\n        currentContour.length === 0,\n        'There are still points left in the current contour.'\n    );\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function () {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing,\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing =\n        this.advanceWidth -\n        metrics.leftSideBearing -\n        (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// The GlyphSet object\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function () {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function (newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            var glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function (index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        var glyph = this.glyphs[index];\n        var unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (var j = 0; j < unicodeObj.unicodes.length; j++)\n                { glyph.addUnicode(unicodeObj.unicodes[j]); }\n        }\n\n        this.glyphs[index].advanceWidth =\n            this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing =\n            this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function (index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({ index: index, font: font });\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function () {\n        var glyph = new Glyph({ index: index, font: font });\n\n        glyph.path = function () {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function () {\n        var glyph = new Glyph({ index: index, font: font });\n\n        glyph.path = function () {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nvar glyphset = { GlyphSet: GlyphSet, glyphLoader: glyphLoader, ttfGlyphLoader: ttfGlyphLoader, cffGlyphLoader: cffGlyphLoader };\n\n// The Layout object is the prototype of Substitution objects, and provides\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    var range;\n    var imin = 0;\n    var imax = ranges.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        var start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) { return 0; }\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function (create) {\n        var layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] =\n                this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function () {\n        var layout = this.getTable();\n        if (!layout) {\n            return;\n        }\n        var hasLatn = false;\n        for (var i = 0; i < layout.scripts.length; i++) {\n            var name = layout.scripts[i].tag;\n            if (name === 'DFLT') { return name; }\n            if (name === 'latn') { hasLatn = true; }\n        }\n        if (hasLatn) { return 'latn'; }\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function (script, create) {\n        var layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            var scripts = layout.scripts;\n            var pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                var scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {\n                            reserved: 0,\n                            reqFeatureIndex: 0xffff,\n                            featureIndexes: [],\n                        },\n                        langSysRecords: [],\n                    },\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function (script, language, create) {\n        var scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            var pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                var langSysRecord = {\n                    tag: language,\n                    langSys: {\n                        reserved: 0,\n                        reqFeatureIndex: 0xffff,\n                        featureIndexes: [],\n                    },\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function (script, language, feature, create) {\n        var langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            var featureRecord;\n            var featIndexes = langSysTable.featureIndexes;\n            var allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (var i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                var index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(\n                    index === 0 || feature >= allFeatures[index - 1].tag,\n                    'Features must be added in alphabetical order.'\n                );\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] },\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function (script, language, feature, lookupType, create) {\n        var featureTable = this.getFeatureTable(\n            script,\n            language,\n            feature,\n            create\n        );\n        var tables = [];\n        if (featureTable) {\n            var lookupTable;\n            var lookupListIndexes = featureTable.lookupListIndexes;\n            var allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (var i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined,\n                };\n                var index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function (classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (\n                    classDefTable.startGlyph <= glyphIndex &&\n                    glyphIndex <\n                        classDefTable.startGlyph + classDefTable.classes.length\n                ) {\n                    return classDefTable.classes[\n                        glyphIndex - classDefTable.startGlyph\n                    ];\n                }\n                return 0;\n            case 2:\n                var range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function (coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                var index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                var range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function (coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            var glyphs = [];\n            var ranges = coverageTable.ranges;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[i];\n                var start = range.start;\n                var end = range.end;\n                for (var j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    },\n};\n\n// The Position object provides utility methods to manipulate\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    var script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (var i = 0; i < kerningLookups.length; i++) {\n        var subtables = kerningLookups[i].subtables;\n        for (var j = 0; j < subtables.length; j++) {\n            var subtable = subtables[j];\n            var covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) { continue; }\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    var pairSet = subtable.pairSets[covIndex];\n                    for (var k = 0; k < pairSet.length; k++) {\n                        var pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    var class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    var class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    var pair$1 = subtable.classRecords[class1][class2];\n                    return pair$1.value1 && pair$1.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\n// The Substitution object provides utility methods to manipulate\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    var n = ar1.length;\n    if (n !== ar2.length) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    var subtables = lookupTable.subtables;\n    for (var i = 0; i < subtables.length; i++) {\n        var subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function () {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [\n            {\n                tag: 'DFLT',\n                script: {\n                    defaultLangSys: {\n                        reserved: 0,\n                        reqFeatureIndex: 0xffff,\n                        featureIndexes: [],\n                    },\n                    langSysRecords: [],\n                },\n            } ],\n        features: [],\n        lookups: [],\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function (feature, script, language) {\n    var substitutions = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var j = (void 0);\n            if (subtable.substFormat === 1) {\n                var delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    var glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                var substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all multiple substitutions (lookup type 2) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('ccmp', 'stch')\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getMultiple = function (feature, script, language) {\n    var substitutions = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 2);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var j = (void 0);\n\n            for (j = 0; j < glyphs.length; j++) {\n                var glyph = glyphs[j];\n                var replacements = subtable.sequences[j];\n                substitutions.push({ sub: glyph, by: replacements });\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function (feature, script, language) {\n    var alternates = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var alternateSets = subtable.alternateSets;\n            for (var j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function (feature, script, language) {\n    var ligatures = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var ligatureSets = subtable.ligatureSets;\n            for (var j = 0; j < glyphs.length; j++) {\n                var startGlyph = glyphs[j];\n                var ligSet = ligatureSets[j];\n                for (var k = 0; k < ligSet.length; k++) {\n                    var lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph,\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: id } (format 1 is not supported)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        1,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 2, {\n        // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: { format: 1, glyphs: [] },\n        substitute: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Single: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify a multiple substitution (lookup type 2)\n * @param {string} feature - 4-letter feature name ('ccmp', 'stch')\n * @param {Object} substitution - { sub: id, by: [id] } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addMultiple = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    check.assert(\n        substitution.by instanceof Array && substitution.by.length > 1,\n        'Multiple: \"by\" must be an array of two or more ids'\n    );\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        2,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 1, {\n        // lookup type 2 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: { format: 1, glyphs: [] },\n        sequences: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Multiple: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.sequences.splice(pos, 0, 0);\n    }\n    subtable.sequences[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 3)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        3,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 1, {\n        // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: { format: 1, glyphs: [] },\n        alternateSets: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Alternate: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function (\n    feature,\n    ligature,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        4,\n        true\n    )[0];\n    var subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {\n            // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: [],\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(\n        subtable.coverage.format === 1,\n        'Ligature: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = ligature.sub[0];\n    var ligComponents = ligature.sub.slice(1);\n    var ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents,\n    };\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        var ligatureSet = subtable.ligatureSets[pos];\n        for (var i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function (feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language).concat(\n                this.getAlternates(feature, script, language)\n            );\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.getLigatures(feature, script, language);\n        case 'ccmp':\n            return this.getMultiple(feature, script, language).concat(\n                this.getLigatures(feature, script, language)\n            );\n        case 'stch':\n            return this.getMultiple(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function (feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n        case 'ccmp':\n            if (sub.by instanceof Array) {\n                return this.addMultiple(feature, sub, script, language);\n            }\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\n// Parsing utility functions\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    var v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    var v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    var major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    var minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) { minorBase = 0x1000; }\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    var list = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    var list = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    var records = new Array(count);\n    var fields = Object.keys(recordDescription);\n    for (var i = 0; i < count; i++) {\n        var rec = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    var records = new Array(count);\n    var fields = Object.keys(recordDescription);\n    for (var i = 0; i < count; i++) {\n        var rec = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        var fields = Object.keys(description);\n        var struct = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    var valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    var valueFormat = this.parseUShort();\n    var valueCount = this.parseUShort();\n    var values = new Array(valueCount);\n    for (var i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    var structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    var structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    var offsets = this.parseOffset16List();\n    var count = offsets.length;\n    var relativeOffset = this.relativeOffset;\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        var start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            var subOffsets = this.parseOffset16List();\n            var subList = new Array(subOffsets.length);\n            for (var j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    var startOffset = this.offset + this.relativeOffset;\n    var format = this.parseUShort();\n    var count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        var ranges = new Array(count);\n        for (var i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    var startOffset = this.offset + this.relativeOffset;\n    var format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nvar langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        var lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        var lookupFlag = this.parseUShort();\n        var useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        var majorVersion = this.parseUShort();\n        var minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        var featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nvar parse = {\n    getByte: getByte,\n    getCard8: getByte,\n    getUShort: getUShort,\n    getCard16: getUShort,\n    getShort: getShort,\n    getULong: getULong,\n    getFixed: getFixed,\n    getTag: getTag,\n    getOffset: getOffset,\n    getBytes: getBytes,\n    bytesToString: bytesToString,\n    Parser: Parser,\n};\n\n// The `glyf` table describes the glyphs in TrueType outline format.\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    var p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    var flags;\n    var flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (var i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (var i$1 = 0; i$1 < glyph.instructionLength; i$1 += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (var i$2 = 0; i$2 < numberOfCoordinates; i$2 += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i$2 += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (var i$3 = 0; i$3 < numberOfCoordinates; i$3 += 1) {\n                    flag = flags[i$3];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i$3) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (var i$4 = 0; i$4 < numberOfCoordinates; i$4 += 1) {\n                    flag = flags[i$4];\n                    point = points[i$4];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (var i$5 = 0; i$5 < numberOfCoordinates; i$5 += 1) {\n                    flag = flags[i$5];\n                    point = points[i$5];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (var i$6 = 0; i$6 < glyph.instructionLength; i$6 += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n\n    for (var contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        var contour = contours[contourIndex];\n\n        var prev = null;\n        var curr = contour[contour.length - 1];\n        var next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                var start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (var i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                var prev2 = prev;\n                var next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (var j = 0; j < glyph.components.length; j += 1) {\n            var component = glyph.components[j];\n            var componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                var transformedPoints = (void 0);\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    var firstPt = glyph.points[component.matchedPoints[0]];\n                    var secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    var transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (var i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        { return parseGlyfTableOnLowMemory(data, start, loca, font); }\n    else\n        { return parseGlyfTableAll(data, start, loca, font); }\n}\n\nvar glyf = { getPath: getPath, parse: parseGlyfTable};\n\n/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n\nvar instructionTable;\nvar exec;\nvar execGlyph;\nvar execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nvar roundSuper = function (v) {\n    var period = this.srPeriod;\n    var phase = this.srPhase;\n    var threshold = this.srThreshold;\n    var sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) { return phase * sign; }\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nvar xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        var do1;\n        var do2;\n        var doa1;\n        var doa2;\n        var dm1;\n        var dm2;\n        var dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        var rpx = org ? rp.xo : rp.x;\n        var rpy = org ? rp.yo : rp.y;\n        var rpdx = rpx + d * pv.x;\n        var rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nvar yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        var do1;\n        var do2;\n        var doa1;\n        var doa2;\n        var dm1;\n        var dm2;\n        var dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        var rpx = org ? rp.xo : rp.x;\n        var rpy = org ? rp.yo : rp.y;\n        var rpdx = rpx + d * pv.x;\n        var rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    var dm1;\n    var dm2;\n    var do1;\n    var do2;\n    var doa1;\n    var doa2;\n    var dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    var rpx = org ? rp.xo : rp.x;\n    var rpy = org ? rp.yo : rp.y;\n    var rpdx = rpx + d * pv.x;\n    var rpdy = rpy + d * pv.y;\n\n    var pvns = pv.normalSlope;\n    var fvs = this.slope;\n\n    var px = p.x;\n    var py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    var d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) { return xUnitVector; }\n    else if (x === 0 && y === 1) { return yUnitVector; }\n    else { return new UnitVector(x, y); }\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    var p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) { p = p.nextPointOnContour; }\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    var p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) { p = p.prevPointOnContour; }\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nvar HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nvar defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) { return; }\n\n    var font = this.font;\n    var prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        var fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        var oCvt = font.tables.cvt;\n        if (oCvt) {\n            var cvt = prepState.cvt = new Array(oCvt.length);\n            var scale = ppem / font.unitsPerEm;\n            for (var c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) { return; }\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    var xScale = prepState.ppem / prepState.font.unitsPerEm;\n    var yScale = xScale;\n    var components = glyph.components;\n    var contours;\n    var gZone;\n    var state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        var font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (var i = 0; i < components.length; i++) {\n            var c = components[i];\n            var cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            var dx = Math.round(c.dx * xScale);\n            var dy = Math.round(c.dy * yScale);\n            var gz = state.gZone;\n            var cc = state.contours;\n            for (var pi = 0; pi < gz.length; pi++) {\n                var p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            var gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (var j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    var points = glyph.points || [];\n    var pLen = points.length;\n    var gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    var contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    var cp; // current point\n    for (var i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    var sp; // start point\n    var np; // next point\n\n    for (var i$1 = 0; i$1 < pLen; i$1++) {\n        cp = gZone[i$1];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i$1);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i$1 + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) { return; }\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (var i$2 = 0; i$2 < pLen; i$2++) {\n            console.log(i$2, gZone[i$2].x, gZone[i$2].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (var i$3 = 0; i$3 < pLen; i$3++) {\n            console.log(i$3, gZone[i$3].x, gZone[i$3].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    var prog = state.prog;\n\n    if (!prog) { return; }\n\n    var pLen = prog.length;\n    var ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) { state.step++; }\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    var tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (var i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    var prog = state.prog;\n    var ip = state.ip;\n    var nesting = 1;\n    var ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            { nesting++; }\n        else if (ins === 0x59) // EIF\n            { nesting--; }\n        else if (ins === 0x40) // NPUSHB\n            { ip += prog[ip + 1] + 1; }\n        else if (ins === 0x41) // NPUSHW\n            { ip += 2 * prog[ip + 1] + 1; }\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            { ip += ins - 0xB0 + 1; }\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            { ip += (ins - 0xB8 + 1) * 2; }\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            { break; }\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SVTCA[' + v.axis + ']'); }\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SPVTCA[' + v.axis + ']'); }\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SFVTCA[' + v.axis + ']'); }\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log('SPVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log('SFVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    var stack = state.stack;\n    var y = stack.pop();\n    var x = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SPVFS[]', y, x); }\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    var stack = state.stack;\n    var y = stack.pop();\n    var x = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SPVFS[]', y, x); }\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    var stack = state.stack;\n    var pv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'GPV[]'); }\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    var stack = state.stack;\n    var fv = state.fv;\n\n    if (exports.DEBUG) { console.log(state.step, 'GFV[]'); }\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'SFVTPV[]'); }\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    var stack = state.stack;\n    var pa0i = stack.pop();\n    var pa1i = stack.pop();\n    var pb0i = stack.pop();\n    var pb1i = stack.pop();\n    var pi = stack.pop();\n    var z0 = state.z0;\n    var z1 = state.z1;\n    var pa0 = z0[pa0i];\n    var pa1 = z0[pa1i];\n    var pb0 = z1[pb0i];\n    var pb1 = z1[pb1i];\n    var p = state.z2[pi];\n\n    if (exports.DEBUG) { console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi); }\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    var x1 = pa0.x;\n    var y1 = pa0.y;\n    var x2 = pa1.x;\n    var y2 = pa1.y;\n    var x3 = pb0.x;\n    var y3 = pb0.y;\n    var x4 = pb1.x;\n    var y4 = pb1.y;\n\n    var div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    var f1 = x1 * y2 - y1 * x2;\n    var f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP0[]', state.rp0); }\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP1[]', state.rp1); }\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP2[]', state.rp2); }\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP0[]', n); }\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP1[]', n); }\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP2[]', n); }\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZPS[]', n); }\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SLOOP[]', state.loop); }\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTG[]'); }\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTHG[]'); }\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    var d = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SMD[]', d); }\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) { console.log(state.step, 'ELSE[]'); }\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    var o = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'JMPR[]', o); }\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SCVTCI[]', n); }\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.step, 'DUP[]'); }\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) { console.log(state.step, 'POP[]'); }\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) { console.log(state.step, 'CLEAR[]'); }\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    var stack = state.stack;\n\n    var a = stack.pop();\n    var b = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SWAP[]'); }\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.step, 'DEPTH[]'); }\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    var stack = state.stack;\n    var fn = stack.pop();\n    var c = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LOOPCALL[]', fn, c); }\n\n    // saves callers program\n    var cip = state.ip;\n    var cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (var i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) { console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        ); }\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    var fn = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CALL[]', fn); }\n\n    // saves callers program\n    var cip = state.ip;\n    var cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) { console.log(++state.step, 'returning from', fn); }\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    var stack = state.stack;\n    var k = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CINDEX[]', k); }\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    var stack = state.stack;\n    var k = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MINDEX[]', k); }\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') { throw new Error('FDEF not allowed here'); }\n    var stack = state.stack;\n    var prog = state.prog;\n    var ip = state.ip;\n\n    var fn = stack.pop();\n    var ipBegin = ip;\n\n    if (exports.DEBUG) { console.log(state.step, 'FDEF[]', fn); }\n\n    while (prog[++ip] !== 0x2D){ }\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    var pi = state.stack.pop();\n    var p = state.z0[pi];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'MDAP[' + round + ']', pi); }\n\n    var d = pv.distance(p, HPZero);\n\n    if (round) { d = state.round(d); }\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    var z2 = state.z2;\n    var pLen = z2.length - 2;\n    var cp;\n    var pp;\n    var np;\n\n    if (exports.DEBUG) { console.log(state.step, 'IUP[' + v.axis + ']'); }\n\n    for (var i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) { continue; }\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) { continue; }\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var loop = state.loop;\n    var z2 = state.z2;\n\n    while (loop--)\n    {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        var d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var ci = stack.pop();\n    var sp = state.z2[state.contours[ci]];\n    var p = sp;\n\n    if (exports.DEBUG) { console.log(state.step, 'SHC[' + a + ']', ci); }\n\n    var d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) { fv.setRelative(p, p, d, pv); }\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    var e = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SHZ[' + a + ']', e); }\n\n    var z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    var p;\n    var d = pv.distance(rp, rp, false, true);\n    var pLen = z.length - 2;\n    for (var i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    var stack = state.stack;\n    var loop = state.loop;\n    var fv = state.fv;\n    var d = stack.pop() / 0x40;\n    var z2 = state.z2;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    var stack = state.stack;\n    var rp1i = state.rp1;\n    var rp2i = state.rp2;\n    var loop = state.loop;\n    var rp1 = state.z0[rp1i];\n    var rp2 = state.z1[rp2i];\n    var fv = state.fv;\n    var pv = state.dpv;\n    var z2 = state.z2;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    var stack = state.stack;\n    var d = stack.pop() / 64;\n    var pi = stack.pop();\n    var p = state.z1[pi];\n    var rp0 = state.z0[state.rp0];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) { console.log(state.step, 'MSIRP[' + a + ']', d, pi); }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) { state.rp0 = pi; }\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    var stack = state.stack;\n    var rp0i = state.rp0;\n    var rp0 = state.z0[rp0i];\n    var loop = state.loop;\n    var fv = state.fv;\n    var pv = state.pv;\n    var z1 = state.z1;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTDG[]'); }\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var pi = stack.pop();\n    var p = state.z0[pi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    var d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) { d = cv; }\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    var prog = state.prog;\n    var ip = state.ip;\n    var stack = state.stack;\n\n    var n = prog[++ip];\n\n    if (exports.DEBUG) { console.log(state.step, 'NPUSHB[]', n); }\n\n    for (var i = 0; i < n; i++) { stack.push(prog[++ip]); }\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    var ip = state.ip;\n    var prog = state.prog;\n    var stack = state.stack;\n    var n = prog[++ip];\n\n    if (exports.DEBUG) { console.log(state.step, 'NPUSHW[]', n); }\n\n    for (var i = 0; i < n; i++) {\n        var w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) { w = -((w ^ 0xffff) + 1); }\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    var stack = state.stack;\n    var store = state.store;\n\n    if (!store) { store = state.store = []; }\n\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WS', v, l); }\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    var stack = state.stack;\n    var store = state.store;\n\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'RS', l); }\n\n    var v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    var stack = state.stack;\n\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WCVTP', v, l); }\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    var stack = state.stack;\n    var cvte = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'RCVT', cvte); }\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    var stack = state.stack;\n    var pi = stack.pop();\n    var p = state.z2[pi];\n\n    if (exports.DEBUG) { console.log(state.step, 'GC[' + a + ']', pi); }\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    var stack = state.stack;\n    var pi2 = stack.pop();\n    var pi1 = stack.pop();\n    var p2 = state.z1[pi2];\n    var p1 = state.z0[pi1];\n    var d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) { console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d); }\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) { console.log(state.step, 'MPPEM[]'); }\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) { console.log(state.step, 'FLIPON[]'); }\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LT[]', e2, e1); }\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LTEQ[]', e2, e1); }\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'GT[]', e2, e1); }\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'GTEQ[]', e2, e1); }\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'EQ[]', e2, e1); }\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NEQ[]', e2, e1); }\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ODD[]', n); }\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'EVEN[]', n); }\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    var test = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'IF[]', test); }\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) { console.log(state.step,  'EIF[]'); }\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) { console.log(state.step, 'EIF[]'); }\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'AND[]', e2, e1); }\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'OR[]', e2, e1); }\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    var stack = state.stack;\n    var e = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NOT[]', e); }\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var fv = state.fv;\n    var pv = state.pv;\n    var ppem = state.ppem;\n    var base = state.deltaBase + (b - 1) * 16;\n    var ds = state.deltaShift;\n    var z0 = state.z0;\n\n    if (exports.DEBUG) { console.log(state.step, 'DELTAP[' + b + ']', n, stack); }\n\n    for (var i = 0; i < n; i++) {\n        var pi = stack.pop();\n        var arg = stack.pop();\n        var appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) { continue; }\n\n        var mag = (arg & 0x0F) - 8;\n        if (mag >= 0) { mag++; }\n        if (exports.DEBUG) { console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds); }\n\n        var p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SDB[]', n); }\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SDS[]', n); }\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ADD[]', n2, n1); }\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SUB[]', n2, n1); }\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'DIV[]', n2, n1); }\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MUL[]', n2, n1); }\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ABS[]', n); }\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NEG[]', n); }\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'FLOOR[]', n); }\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CEILING[]', n); }\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ROUND[]'); }\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    var stack = state.stack;\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WCVTF[]', v, l); }\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var ppem = state.ppem;\n    var base = state.deltaBase + (b - 1) * 16;\n    var ds = state.deltaShift;\n\n    if (exports.DEBUG) { console.log(state.step, 'DELTAC[' + b + ']', n, stack); }\n\n    for (var i = 0; i < n; i++) {\n        var c = stack.pop();\n        var arg = stack.pop();\n        var appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) { continue; }\n\n        var mag = (arg & 0x0F) - 8;\n        if (mag >= 0) { mag++; }\n\n        var delta = mag * ds;\n\n        if (exports.DEBUG) { console.log(state.step, 'DELTACFIX', c, 'by', delta); }\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SROUND[]', n); }\n\n    state.round = roundSuper;\n\n    var period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) { state.srThreshold = 0; }\n    else { state.srThreshold = (n / 8 - 0.5) * period; }\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'S45ROUND[]', n); }\n\n    state.round = roundSuper;\n\n    var period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) { state.srThreshold = 0; }\n    else { state.srThreshold = (n / 8 - 0.5) * period; }\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) { console.log(state.step, 'ROFF[]'); }\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RUTG[]'); }\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RDTG[]'); }\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    var n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) { console.log(state.step, 'SCANCTRL[]', n); }\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    var stack = state.stack;\n    var sel = stack.pop();\n    var r = 0;\n\n    if (exports.DEBUG) { console.log(state.step, 'GETINFO[]', sel); }\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) { r = 35; }\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) { r |= 0x1000; }\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    var stack = state.stack;\n    var a = stack.pop();\n    var b = stack.pop();\n    var c = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ROLL[]'); }\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MAX[]', e2, e1); }\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MIN[]', e2, e1); }\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    var n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) { console.log(state.step, 'SCANTYPE[]', n); }\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    var s = state.stack.pop();\n    var v = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'INSTCTRL[]', s, v); }\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    var stack = state.stack;\n    var prog = state.prog;\n    var ip = state.ip;\n\n    if (exports.DEBUG) { console.log(state.step, 'PUSHB[' + n + ']'); }\n\n    for (var i = 0; i < n; i++) { stack.push(prog[++ip]); }\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    var ip = state.ip;\n    var prog = state.prog;\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.ip, 'PUSHW[' + n + ']'); }\n\n    for (var i = 0; i < n; i++) {\n        var w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) { w = -((w ^ 0xffff) + 1); }\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    var stack = state.stack;\n    var cvte = indirect && stack.pop();\n    var pi = stack.pop();\n    var rp0i = state.rp0;\n    var rp = state.z0[rp0i];\n    var p = state.z1[pi];\n\n    var md = state.minDis;\n    var fv = state.fv;\n    var pv = state.dpv;\n    var od; // original distance\n    var d; // moving distance\n    var sign; // sign of distance\n    var cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) { d = cv; }\n    }\n\n    if (keepD && d < md) { d = md; }\n\n    if (ro) { d = state.round(d); }\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) { state.rp0 = pi; }\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n\n/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    var this$1 = this;\n\n    var coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(function (eventId) {\n        Object.defineProperty(this$1.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(function (eventId) {\n            var event = events[eventId];\n            if (typeof event === 'function') {\n                this$1.events[eventId].subscribe(event);\n            }\n        });\n    }\n    var requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(function (eventId) {\n        this$1.events[eventId].subscribe(\n            this$1.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key: key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    var this$1 = this;\n\n    var silent = true;\n    var state = RUDs.map(function (RUD) { return (\n        this$1[RUD[0]].apply(this$1, RUD.slice(1).concat(silent))\n    ); });\n    var hasFAILObject = function (obj) { return (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    ); };\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: \"composeRUD: one or more operations hasn't completed successfully\",\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(function (op) { return !hasFAILObject(op); })]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    var isTokenType = tokens.every(function (token) { return token instanceof Token; });\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        var replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) { this.dispatch('replaceToken', [startIndex, offset, tokens]); }\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        var replaced = this.tokens.splice(index, 1, token);\n        if (!silent) { this.dispatch('replaceToken', [index, token]); }\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    var tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) { this.dispatch('removeRange', [tokens, startIndex, offset]); }\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        var token = this.tokens.splice(index, 1);\n        if (!silent) { this.dispatch('removeToken', [token, index]); }\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    var tokenType = tokens.every(\n        function (token) { return token instanceof Token; }\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) { this.dispatch('insertToken', [tokens, index]); }\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        var conditionParams = [token, contextParams];\n        var canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        var modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            var newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: (\"invalid '\" + (this.eventId) + \"' event handler\")};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(function (token) { return token.char; }).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(function (token) { return token.char; }).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    var context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    var event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    var this$1 = this;\n\n    var event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(function (subscriber) {\n            subscriber.apply(this$1, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) { return {\n        FAIL:\n        (\"context name '\" + contextName + \"' is already registered.\")\n    }; }\n    if (typeof contextStartCheck !== 'function') { return {\n        FAIL:\n        \"missing context start check.\"\n    }; }\n    if (typeof contextEndCheck !== 'function') { return {\n        FAIL:\n        \"missing context end check.\"\n    }; }\n    var contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    var endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    var context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: (\"context checker '\" + contextName + \"' is not registered.\") };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    var registeredContexts = this.registeredContexts;\n    for (var contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            var context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    var chars = this.tokens.map(function (token) { return token.char; });\n    for (var i = 0; i < chars.length; i++) {\n        var contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    var startIndex = this.getContext(contextName).openRange.startIndex;\n    var range = new ContextRange(startIndex, offset, contextName);\n    var ranges = this.getContext(contextName).ranges;\n    range.rangeId = contextName + \".\" + (ranges.length);\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    var this$1 = this;\n\n    var index = contextParams.index;\n    this.contextCheckers.forEach(function (contextChecker) {\n        var contextName = contextChecker.contextName;\n        var openRange = this$1.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this$1.getContext(contextName).openRange = openRange;\n            this$1.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            var offset = (index - openRange.startIndex) + 1;\n            var range = this$1.setEndOffset(offset, contextName);\n            this$1.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    var chars = Array.from(text);\n    this.dispatch('start');\n    for (var i = 0; i < chars.length; i++) {\n        var char = chars[i];\n        var contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        var token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\n// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nfunction isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nfunction isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nfunction isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nfunction isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nfunction isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n\n/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) { return -1; }\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            var ranges = coverage.ranges;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    var offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    var lookupList = [];\n    for (var i = 0; i < coverageList.length; i++) {\n        var coverage = coverageList[i];\n        var glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        var lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) { return -1; }\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    var lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) { return []; }\n    // INPUT LOOKUP //\n    var inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) { return []; }\n    // LOOKAHEAD LOOKUP //\n    var lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) { return []; }\n    var lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    var lookaheadParams = new ContextParams(lookaheadContext, 0);\n    var lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    var backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) { return []; }\n    var backtrackParams = new ContextParams(backtrackContext, 0);\n    var backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    var contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    var substitutions = [];\n    if (contextRulesMatch) {\n        for (var i = 0; i < subtable.lookupRecords.length; i++) {\n            var lookupRecord = subtable.lookupRecords[i];\n            var lookupListIndex = lookupRecord.lookupListIndex;\n            var lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (var s = 0; s < lookupTable.subtables.length; s++) {\n                var subtable$1 = lookupTable.subtables[s];\n                var lookup = this.getLookupMethod(lookupTable, subtable$1);\n                var substitutionType = this.getSubstitutionType(lookupTable, subtable$1);\n                if (substitutionType === '12') {\n                    for (var n = 0; n < inputLookups.length; n++) {\n                        var glyphIndex = contextParams.get(n);\n                        var substitution = lookup(glyphIndex);\n                        if (substitution) { substitutions.push(substitution); }\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    var glyphIndex = contextParams.current;\n    var ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) { return null; }\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    var ligature;\n    var ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (var s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (var l = 0; l < ligature.components.length; l++) {\n            var lookaheadItem = contextParams.lookahead[l];\n            var component = ligature.components[l];\n            if (lookaheadItem !== component) { break; }\n            if (l === ligature.components.length - 1) { return ligature; }\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    var scripts = this.font.tables.gsub.scripts;\n    for (var s = 0; s < scripts.length; s++) {\n        var script = scripts[s];\n        if (script.tag === 'DFLT') { return (\n            script.script.defaultLangSys.featureIndexes\n        ); }\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    var tables = this.font.tables;\n    if (!tables.gsub) { return []; }\n    if (!scriptTag) { return this.getDefaultScriptFeaturesIndexes(); }\n    var scripts = this.font.tables.gsub.scripts;\n    for (var i = 0; i < scripts.length; i++) {\n        var script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            var langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (var j = 0; j < langSysRecords.length; j++) {\n                    var langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        var langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    var tags = {};\n    for (var i = 0; i < features.length; i++) {\n        var tag = features[i].tag;\n        var feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    var features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) { return features; }\n    var featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) { return null; }\n    var gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(function (index) { return gsub.features[index]; });\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    var lookupType = lookupTable.lookupType.toString();\n    var substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    var this$1 = this;\n\n    var substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return function (glyphIndex) { return singleSubstitutionFormat1.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        case '12':\n            return function (glyphIndex) { return singleSubstitutionFormat2.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        case '63':\n            return function (contextParams) { return chainingSubstitutionFormat3.apply(\n                this$1, [contextParams, subtable]\n            ); };\n        case '41':\n            return function (contextParams) { return ligatureSubstitutionFormat1.apply(\n                this$1, [contextParams, subtable]\n            ); };\n        case '21':\n            return function (glyphIndex) { return decompositionSubstitutionFormat1.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        default:\n            throw new Error(\n                \"lookupType: \" + (lookupTable.lookupType) + \" - \" +\n                \"substFormat: \" + (subtable.substFormat) + \" \" +\n                \"is not yet supported\"\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    var contextParams = query.contextParams;\n    var currentIndex = contextParams.index;\n    var feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) { return new Error(\n        \"font '\" + (this.font.names.fullName.en) + \"' \" +\n        \"doesn't support feature '\" + (query.tag) + \"' \" +\n        \"for script '\" + (query.script) + \"'.\"\n    ); }\n    var lookups = this.getFeatureLookups(feature);\n    var substitutions = [].concat(contextParams.context);\n    for (var l = 0; l < lookups.length; l++) {\n        var lookupTable = lookups[l];\n        var subtables = this.getLookupSubtables(lookupTable);\n        for (var s = 0; s < subtables.length; s++) {\n            var subtable = subtables[s];\n            var substType = this.getSubstitutionType(lookupTable, subtable);\n            var lookup = this.getLookupMethod(lookupTable, subtable);\n            var substitution = (void 0);\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) { continue; }\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) { return false; }\n    this.getScriptFeatures(query.script);\n    var supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) { return supportedScript; }\n    var supportedFeature = (\n        this.features[query.script].some(function (feature) { return feature.tag === query.tag; })\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    var lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) { return { FAIL: \"No font was found\"}; }\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    var scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) { return (\n        { FAIL: (\"No feature for script \" + (query.script))}\n    ); }\n    if (!scriptFeatures.tags[query.tag]) { return null; }\n    return this.features[query.script].tags[query.tag];\n};\n\n/**\n * Arabic word context checkers\n */\n\nfunction arabicWordStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nvar arabicWordCheck = {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n\n/**\n * Arabic sentence context checkers\n */\n\nfunction arabicSentenceStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            var nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) { return true; }\n            if (nextIsWhitespace) {\n                var arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        function (c) { return isArabicChar(c) || isTashkeelArabicChar(c); }\n                    )\n                );\n                if (!arabicCharAhead) { return true; }\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nvar arabicSentenceCheck = {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1$1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2$1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3$1(action, tokens, index) {\n    action.substitution.forEach(function (subst, offset) {\n        var token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1$1(action, tokens, index) {\n    var token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    var compsCount = action.substitution.components.length;\n    for (var i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nvar SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1$1,\n    12: singleSubstitutionFormat2$1,\n    63: chainingSubstitutionFormat3$1,\n    41: ligatureSubstitutionFormat1$1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\n/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    var backtrack = [].concat(charContextParams.backtrack);\n    for (var i = backtrack.length - 1; i >= 0; i--) {\n        var prevChar = backtrack[i];\n        var isolated = isIsolatedArabicChar(prevChar);\n        var tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) { return true; }\n        if (isolated) { return false; }\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) { return false; }\n    for (var i = 0; i < charContextParams.lookahead.length; i++) {\n        var nextChar = charContextParams.lookahead[i];\n        var tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) { return true; }\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    var this$1 = this;\n\n    var script = 'arab';\n    var tags = this.featuresTags[script];\n    var tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) { return; }\n    var contextParams = new ContextParams(\n        tokens.map(function (token) { return token.getState('glyphIndex'); }\n    ), 0);\n    var charContextParams = new ContextParams(\n        tokens.map(function (token) { return token.char; }\n    ), 0);\n    tokens.forEach(function (token, index) {\n        if (isTashkeelArabicChar(token.char)) { return; }\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        var CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) { CONNECT |= 1; }\n        if (willConnectNext(charContextParams)) { CONNECT |= 2; }\n        var tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) { return; }\n        var substitutions = this$1.query.lookupFeature({\n            tag: tag, script: script, contextParams: contextParams\n        });\n        if (substitutions instanceof Error) { return console.info(substitutions.message); }\n        substitutions.forEach(function (action, index) {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\n/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    var context = tokens.map(function (token) { return token.activeState.value; });\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    var this$1 = this;\n\n    var script = 'arab';\n    var tokens = this.tokenizer.getRangeTokens(range);\n    var contextParams = getContextParams(tokens);\n    contextParams.context.forEach(function (glyphIndex, index) {\n        contextParams.setCurrentIndex(index);\n        var substitutions = this$1.query.lookupFeature({\n            tag: 'rlig', script: script, contextParams: contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                function (action) { return applySubstitution(action, tokens, index); }\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\n/**\n * Latin word context checkers\n */\n\nfunction latinWordStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nvar latinWordCheck = {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n\n/**\n * Apply Latin ligature feature to a range of tokens\n */\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams$1(tokens, index) {\n    var context = tokens.map(function (token) { return token.activeState.value; });\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    var this$1 = this;\n\n    var script = 'latn';\n    var tokens = this.tokenizer.getRangeTokens(range);\n    var contextParams = getContextParams$1(tokens);\n    contextParams.context.forEach(function (glyphIndex, index) {\n        contextParams.setCurrentIndex(index);\n        var substitutions = this$1.query.lookupFeature({\n            tag: 'liga', script: script, contextParams: contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                function (action) { return applySubstitution(action, tokens, index); }\n            );\n            contextParams = getContextParams$1(tokens);\n        }\n    });\n}\n\n/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck: latinWordCheck,\n    arabicWordCheck: arabicWordCheck,\n    arabicSentenceCheck: arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    var check = this.contextChecks[(checkId + \"Check\")];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    var this$1 = this;\n\n    var ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(function (range) {\n        var rangeTokens = this$1.tokenizer.getRangeTokens(range);\n        this$1.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    var this$1 = this;\n\n    var supportedTags = tags.filter(\n        function (tag) { return this$1.query.supports({script: script, tag: tag}); }\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) { throw new Error(\n        'No valid font was provided to apply features'\n    ); }\n    if (!this.query) { this.query = new FeatureQuery(font); }\n    for (var f = 0; f < features.length; f++) {\n        var feature = features[f];\n        if (!this.query.supports({script: feature.script})) { continue; }\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    var this$1 = this;\n\n    var script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(function (range) {\n        arabicPresentationForms.call(this$1, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    var this$1 = this;\n\n    var script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    var tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(function (range) {\n        arabicRequiredLigatures.call(this$1, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    var this$1 = this;\n\n    var script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    var tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(function (range) {\n        latinLigature.call(this$1, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    var indexes = [];\n    for (var i = 0; i < this.tokenizer.tokens.length; i++) {\n        var token = this.tokenizer.tokens[i];\n        if (token.state.deleted) { continue; }\n        var index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\n// The Font object\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(\n            options.familyName,\n            'When creating a new Font object, familyName is required.'\n        );\n        checkArgument(\n            options.styleName,\n            'When creating a new Font object, styleName is required.'\n        );\n        checkArgument(\n            options.unitsPerEm,\n            'When creating a new Font object, unitsPerEm is required.'\n        );\n        checkArgument(\n            options.ascender,\n            'When creating a new Font object, ascender is required.'\n        );\n        checkArgument(\n            options.descender <= 0,\n            'When creating a new Font object, negative descender value is required.'\n        );\n\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign(\n                {\n                    usWeightClass:\n                        options.weightClass || this.usWeightClasses.MEDIUM,\n                    usWidthClass:\n                        options.widthClass || this.usWidthClasses.MEDIUM,\n                    fsSelection:\n                        options.fsSelection || this.fsSelectionValues.REGULAR,\n                },\n                options.tables.os2\n            ),\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function () {\n            if (this._hinting) { return this._hinting; }\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new Hinting(this));\n            }\n        },\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function (c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function (s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function (c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(function (feature) {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(function (tag) { return options[tag]; }),\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function (s, options) {\n    var this$1 = this;\n\n    var bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    var charToGlyphIndexMod = function (token) { return this$1.charToGlyphIndex(token.char); };\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    var features = options\n        ? this.updateFeatures(options.features)\n        : this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    var indexes = bidi.getTextGlyphs(s);\n\n    var length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    var glyphs = new Array(length);\n    var notdef = this.glyphs.get(0);\n    for (var i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function (leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(\n            gposKerning,\n            leftGlyph,\n            rightGlyph\n        );\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] } ],\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function (\n    text,\n    x,\n    y,\n    fontSize,\n    options,\n    callback\n) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    var fontScale = (1 / this.unitsPerEm) * fontSize;\n    var glyphs = this.stringToGlyphs(text, options);\n    var kerningLookups;\n    if (options.kerning) {\n        var script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(\n            script,\n            options.language\n        );\n    }\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            var kerningValue = kerningLookups\n                ? this.position.getKerningValue(\n                      kerningLookups,\n                      glyph.index,\n                      glyphs[i + 1].index\n                  )\n                : this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function (text, x, y, fontSize, options) {\n    var fullPath = new Path();\n    this.forEachGlyph(\n        text,\n        x,\n        y,\n        fontSize,\n        options,\n        function (glyph, gX, gY, gFontSize) {\n            var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n            fullPath.extend(glyphPath);\n        }\n    );\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function (text, x, y, fontSize, options) {\n    var glyphPaths = [];\n    this.forEachGlyph(\n        text,\n        x,\n        y,\n        fontSize,\n        options,\n        function (glyph, gX, gY, gFontSize) {\n            var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n            glyphPaths.push(glyphPath);\n        }\n    );\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function (text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function () {});\n};\n\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC: 0x001, //1\n    UNDERSCORE: 0x002, //2\n    NEGATIVE: 0x004, //4\n    OUTLINED: 0x008, //8\n    STRIKEOUT: 0x010, //16\n    BOLD: 0x020, //32\n    REGULAR: 0x040, //64\n    USER_TYPO_METRICS: 0x080, //128\n    WWS: 0x100, //256\n    OBLIQUE: 0x200, //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9,\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK: 900,\n};\n\n// The `cmap` table stores the mappings from characters to glyphs.\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    var groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (var i = 0; i < groupCount; i += 1) {\n        var startCharCode = p.parseULong();\n        var endCharCode = p.parseULong();\n        var startGlyphId = p.parseULong();\n\n        for (var c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 2\n    );\n    var idDeltaParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 4\n    );\n    var idRangeOffsetParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 6\n    );\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (var i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex = (void 0);\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset =\n                    idRangeOffsetParser.offset +\n                    idRangeOffsetParser.relativeOffset -\n                    2;\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xffff;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xffff;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (var i = cmap.numTables - 1; i >= 0; i -= 1) {\n        var platformId = parse.getUShort(data, start + 4 + i * 8);\n        var encodingId = parse.getUShort(data, start + 4 + i * 8 + 2);\n        if (\n            (platformId === 3 &&\n                (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 &&\n                (encodingId === 0 ||\n                    encodingId === 1 ||\n                    encodingId === 2 ||\n                    encodingId === 3 ||\n                    encodingId === 4))\n        ) {\n            offset = parse.getULong(data, start + 4 + i * 8 + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error(\n            'Only format 4 and 12 cmap tables are supported (found format ' +\n                cmap.format +\n                ').'\n        );\n    }\n\n    return cmap;\n}\n\nvar cmap = { parse: parseCmapTable };\n\n// The `CFF` table contains the glyph outlines in PostScript format.\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n        var pos = start + 3;\n        for (var i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (var i$1 = 0; i$1 < offsets.length - 1; i$1 += 1) {\n        var value = parse.getBytes(\n            data,\n            objectOffset + offsets[i$1],\n            objectOffset + offsets[i$1 + 1]\n        );\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return { objects: objects, startOffset: start, endOffset: endOffset };\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    var offsets = [];\n    var count = parse.getCard16(data, start);\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n        var pos = start + 3;\n        for (var i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return { offsets: offsets, startOffset: start, endOffset: endOffset };\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    var count = parse.getCard16(data, start);\n    var objectOffset = 0;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n    }\n\n    var value = parse.getBytes(\n        data,\n        objectOffset + offsets[i],\n        objectOffset + offsets[i + 1]\n    );\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '.',\n        'E',\n        'E-',\n        null,\n        '-' ];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return (b1 << 8) | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return (b1 << 24) | (b2 << 16) | (b3 << 8) | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value = (void 0);\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n    var value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            var values = [];\n            values.length = m.type.length;\n            for (var j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value =\n                        m.value !== undefined && m.value[j] !== undefined\n                            ? m.value[j]\n                            : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    { name: 'version', op: 0, type: 'SID' },\n    { name: 'notice', op: 1, type: 'SID' },\n    { name: 'copyright', op: 1200, type: 'SID' },\n    { name: 'fullName', op: 2, type: 'SID' },\n    { name: 'familyName', op: 3, type: 'SID' },\n    { name: 'weight', op: 4, type: 'SID' },\n    { name: 'isFixedPitch', op: 1201, type: 'number', value: 0 },\n    { name: 'italicAngle', op: 1202, type: 'number', value: 0 },\n    { name: 'underlinePosition', op: 1203, type: 'number', value: -100 },\n    { name: 'underlineThickness', op: 1204, type: 'number', value: 50 },\n    { name: 'paintType', op: 1205, type: 'number', value: 0 },\n    { name: 'charstringType', op: 1206, type: 'number', value: 2 },\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0],\n    },\n    { name: 'uniqueId', op: 13, type: 'number' },\n    {\n        name: 'fontBBox',\n        op: 5,\n        type: ['number', 'number', 'number', 'number'],\n        value: [0, 0, 0, 0],\n    },\n    { name: 'strokeWidth', op: 1208, type: 'number', value: 0 },\n    { name: 'xuid', op: 14, type: [], value: null },\n    { name: 'charset', op: 15, type: 'offset', value: 0 },\n    { name: 'encoding', op: 16, type: 'offset', value: 0 },\n    { name: 'charStrings', op: 17, type: 'offset', value: 0 },\n    { name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0] },\n    { name: 'ros', op: 1230, type: ['SID', 'SID', 'number'] },\n    { name: 'cidFontVersion', op: 1231, type: 'number', value: 0 },\n    { name: 'cidFontRevision', op: 1232, type: 'number', value: 0 },\n    { name: 'cidFontType', op: 1233, type: 'number', value: 0 },\n    { name: 'cidCount', op: 1234, type: 'number', value: 8720 },\n    { name: 'uidBase', op: 1235, type: 'number' },\n    { name: 'fdArray', op: 1236, type: 'offset' },\n    { name: 'fdSelect', op: 1237, type: 'offset' },\n    { name: 'fontName', op: 1238, type: 'SID' } ];\n\nvar PRIVATE_DICT_META = [\n    { name: 'subrs', op: 19, type: 'offset', value: 0 },\n    { name: 'defaultWidthX', op: 20, type: 'number', value: 0 },\n    { name: 'nominalWidthX', op: 21, type: 'number', value: 0 } ];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    var topDictArray = [];\n    for (var iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        var topDictData = new DataView(\n            new Uint8Array(cffIndex[iTopDict]).buffer\n        );\n        var topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        topDict._defaultWidthX = 0;\n        topDict._nominalWidthX = 0;\n        var privateSize = topDict.private[0];\n        var privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            var privateDict = parseCFFPrivateDict(\n                data,\n                privateOffset + start,\n                privateSize,\n                strings\n            );\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                var subrOffset = privateOffset + privateDict.subrs;\n                var subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (var i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (var i$1 = 0; i$1 <= count; i$1 += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (var i$2 = 0; i$2 <= count; i$2 += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (var i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (var i$1 = 0; i$1 < nRanges; i$1 += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var open = false;\n    var x = 0;\n    var y = 0;\n    var subrs;\n    var subrsBias;\n    var defaultWidthX;\n    var nominalWidthX;\n    if (font.isCIDFont) {\n        var fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        var fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    var width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y + stack.shift(); // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = jpy + stack.shift(); // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            x = c4x + stack.shift(); // dx6\n                            y = c4y + stack.shift(); // dy6\n                            stack.shift(); // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y; // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y; // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = c2y; // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = y; // dy5\n                            x = c4x + stack.shift(); // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y; // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = c2y; // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            x = c4x + stack.shift(); // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y + stack.shift(); // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = jpy + stack.shift(); // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log(\n                                'Glyph ' +\n                                    glyph.index +\n                                    ': unknown operator ' +\n                                    1200 +\n                                    v\n                            );\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log(\n                            'Glyph ' + glyph.index + ': unknown operator ' + v\n                        );\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(\n                            ((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536\n                        );\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    var fdSelect = [];\n    var fdIndex;\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (var iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error(\n                    'CFF table CID Font FDSelect has bad FD index value ' +\n                        fdIndex +\n                        ' (FD count ' +\n                        fdArrayCount +\n                        ')'\n                );\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        var nRanges = parser.parseCard16();\n        var first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error(\n                'CFF Table CID Font FDSelect format 3 range has bad initial GID ' +\n                    first\n            );\n        }\n        var next;\n        for (var iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error(\n                    'CFF table CID Font FDSelect has bad FD index value ' +\n                        fdIndex +\n                        ' (FD count ' +\n                        fdArrayCount +\n                        ')'\n                );\n            }\n            if (next > nGlyphs) {\n                throw new Error(\n                    'CFF Table CID Font FDSelect format 3 range has bad GID ' +\n                        next\n                );\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error(\n                'CFF Table CID Font FDSelect format 3 range has bad final GID ' +\n                    next\n            );\n        }\n    } else {\n        throw new Error(\n            'CFF Table CID Font FDSelect table has unsupported format ' + format\n        );\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(\n        data,\n        header.endOffset,\n        parse.bytesToString\n    );\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(\n        data,\n        topDictIndex.endOffset,\n        parse.bytesToString\n    );\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictArray = gatherCFFTopDicts(\n        data,\n        start,\n        topDictIndex.objects,\n        stringIndex.objects\n    );\n    if (topDictArray.length !== 1) {\n        throw new Error(\n            \"CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = \" +\n                topDictArray.length\n        );\n    }\n\n    var topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        var fdArrayOffset = topDict.fdArray;\n        var fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error(\n                'Font is marked as a CID font, but FDArray and/or FDSelect information is missing'\n            );\n        }\n        fdArrayOffset += start;\n        var fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        var fdArray = gatherCFFTopDicts(\n            data,\n            start,\n            fdArrayIndex.objects,\n            stringIndex.objects\n        );\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(\n            data,\n            fdSelectOffset,\n            font.numGlyphs,\n            fdArray.length\n        );\n    }\n\n    var privateDictOffset = start + topDict.private[1];\n    var privateDict = parseCFFPrivateDict(\n        data,\n        privateDictOffset,\n        topDict.private[0],\n        stringIndex.objects\n    );\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(\n            data,\n            start + topDict.charStrings\n        );\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    var charset = parseCFFCharset(\n        data,\n        start + topDict.charset,\n        font.nGlyphs,\n        stringIndex.objects\n    );\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(\n            data,\n            start + topDict.encoding,\n            charset\n        );\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function (i) {\n            var charString = getCffIndexObject(\n                i,\n                charStringsIndex.offsets,\n                data,\n                start + topDict.charStrings\n            );\n            font.glyphs.push(\n                i,\n                glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString)\n            );\n        };\n    } else {\n        for (var i = 0; i < font.nGlyphs; i += 1) {\n            var charString = charStringsIndex.objects[i];\n            font.glyphs.push(\n                i,\n                glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString)\n            );\n        }\n    }\n}\n\nvar cff = { parse: parseCFFTable };\n\n// The `fvar` table stores font variation axes and instances.\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1); // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1); // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(\n        tableVersion === 0x00010000,\n        'Unsupported fvar table version.'\n    );\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(\n            parseFvarAxis(data, start + offsetToData + i * axisSize, names)\n        );\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(\n            parseFvarInstance(\n                data,\n                instanceStart + j * instanceSize,\n                axes,\n                names\n            )\n        );\n    }\n\n    return { axes: axes, instances: instances };\n}\n\nvar fvar = { parse: parseFvarTable };\n\n// The `GDEF` table contains various glyph properties\n\nvar attachList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        attachPoints: this.parseList(Parser.pointer(Parser.uShortList))\n    };\n};\n\nvar caretValue = function() {\n    var format = this.parseUShort();\n    check.argument(format === 1 || format === 2 || format === 3,\n        'Unsupported CaretValue table version.');\n    if (format === 1) {\n        return { coordinate: this.parseShort() };\n    } else if (format === 2) {\n        return { pointindex: this.parseShort() };\n    } else if (format === 3) {\n        // Device / Variation Index tables unsupported\n        return { coordinate: this.parseShort() };\n    }\n};\n\nvar ligGlyph = function() {\n    return this.parseList(Parser.pointer(caretValue));\n};\n\nvar ligCaretList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        ligGlyphs: this.parseList(Parser.pointer(ligGlyph))\n    };\n};\n\nvar markGlyphSets = function() {\n    this.parseUShort(); // Version\n    return this.parseList(Parser.pointer(Parser.coverage));\n};\n\nfunction parseGDEFTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.2 || tableVersion === 1.3,\n        'Unsupported GDEF table version.');\n    var gdef = {\n        version: tableVersion,\n        classDef: p.parsePointer(Parser.classDef),\n        attachList: p.parsePointer(attachList),\n        ligCaretList: p.parsePointer(ligCaretList),\n        markAttachClassDef: p.parsePointer(Parser.classDef)\n    };\n    if (tableVersion >= 1.2) {\n        gdef.markGlyphSets = p.parsePointer(markGlyphSets);\n    }\n    return gdef;\n}\nvar gdef = { parse: parseGDEFTable };\n\n// The `GPOS` table contains kerning pairs, among other things.\n\nvar subtableParsers = new Array(10); // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord(),\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList(),\n        };\n    }\n    check.assert(\n        false,\n        '0x' +\n            start.toString(16) +\n            ': GPOS lookup type 1 format must be 1 or 2.'\n    );\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    var start = this.offset + this.relativeOffset;\n    var posFormat = this.parseUShort();\n    check.assert(\n        posFormat === 1 || posFormat === 2,\n        '0x' +\n            start.toString(16) +\n            ': GPOS lookup type 2 format must be 1 or 2.'\n    );\n    var coverage = this.parsePointer(Parser.coverage);\n    var valueFormat1 = this.parseUShort();\n    var valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(\n                Parser.pointer(\n                    Parser.list(function () {\n                        return {\n                            // pairValueRecord\n                            secondGlyph: this.parseUShort(),\n                            value1: this.parseValueRecord(valueFormat1),\n                            value2: this.parseValueRecord(valueFormat2),\n                        };\n                    })\n                )\n            ),\n        };\n    } else if (posFormat === 2) {\n        var classDef1 = this.parsePointer(Parser.classDef);\n        var classDef2 = this.parsePointer(Parser.classDef);\n        var class1Count = this.parseUShort();\n        var class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(\n                class1Count,\n                Parser.list(class2Count, function () {\n                    return {\n                        value1: this.parseValueRecord(valueFormat1),\n                        value2: this.parseValueRecord(valueFormat2),\n                    };\n                })\n            ),\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() {\n    return { error: 'GPOS Lookup 3 not supported' };\n};\nsubtableParsers[4] = function parseLookup4() {\n    return { error: 'GPOS Lookup 4 not supported' };\n};\nsubtableParsers[5] = function parseLookup5() {\n    return { error: 'GPOS Lookup 5 not supported' };\n};\nsubtableParsers[6] = function parseLookup6() {\n    return { error: 'GPOS Lookup 6 not supported' };\n};\nsubtableParsers[7] = function parseLookup7() {\n    return { error: 'GPOS Lookup 7 not supported' };\n};\nsubtableParsers[8] = function parseLookup8() {\n    return { error: 'GPOS Lookup 8 not supported' };\n};\nsubtableParsers[9] = function parseLookup9() {\n    return { error: 'GPOS Lookup 9 not supported' };\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(\n        tableVersion === 1 || tableVersion === 1.1,\n        'Unsupported GPOS table version ' + tableVersion\n    );\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList(),\n        };\n    }\n}\n\nvar gpos = { parse: parseGposTable };\n\n// The `GSUB` table contains ligatures, among other things.\n\nvar subtableParsers$1 = new Array(9); // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers$1[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort(),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List(),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers$1[2] = function parseLookup2() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Multiple Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers$1[3] = function parseLookup3() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Alternate Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers$1[4] = function parseLookup4() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB ligature table identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function () {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1),\n            };\n        }),\n    };\n};\n\nvar lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort,\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers$1[5] = function parseLookup5() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function () {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(\n                        substCount,\n                        lookupRecordDesc\n                    ),\n                };\n            }),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function () {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(\n                        substCount,\n                        lookupRecordDesc\n                    ),\n                };\n            }),\n        };\n    } else if (substFormat === 3) {\n        var glyphCount = this.parseUShort();\n        var substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(\n                glyphCount,\n                Parser.pointer(Parser.coverage)\n            ),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers$1[6] = function parseLookup6() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function () {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc),\n                };\n            }),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function () {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc),\n                };\n            }),\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers$1[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Extension Substitution subtable identifier-format must be 1'\n    );\n    var extensionLookupType = this.parseUShort();\n    var extensionParser = new Parser(\n        this.data,\n        this.offset + this.parseULong()\n    );\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers$1[extensionLookupType].call(extensionParser),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers$1[8] = function parseLookup8() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(\n        tableVersion === 1 || tableVersion === 1.1,\n        'Unsupported GSUB table version.'\n    );\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers$1),\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers$1),\n            variations: p.parseFeatureVariationsList(),\n        };\n    }\n}\n\nvar gsub = { parse: parseGsubTable };\n\n// The `head` table contains global information about the font.\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(\n        head.magicNumber === 0x5f0f3cf5,\n        'Font header has wrong magic number.'\n    );\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nvar head = { parse: parseHeadTable };\n\n// The `hhea` table contains information for horizontal layout.\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nvar hhea = { parse: parseHheaTable };\n\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing,\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        { parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs); }\n    else { parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs); }\n}\n\nvar hmtx = { parse: parseHmtxTable };\n\n// The `kern` table contains kerning pairs.\n\nfunction parseWindowsKernTable(p) {\n    var pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    var subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    var pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    var nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    var coverage = p.parseUShort();\n    var subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        var nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (var i = 0; i < nPairs; i += 1) {\n            var leftIndex = p.parseUShort();\n            var rightIndex = p.parseUShort();\n            var value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nvar kern = { parse: parseKernTable };\n\n// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n\nfunction parseLtagTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    var numTags = p.parseULong();\n\n    var tags = [];\n    for (var i = 0; i < numTags; i++) {\n        var tag = '';\n        var offset = start + p.parseUShort();\n        var length = p.parseUShort();\n        for (var j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nvar ltag = { parse: parseLtagTable };\n\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nvar loca = { parse: parseLocaTable };\n\n// The `maxp` table establishes the memory requirements for the font.\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nvar maxp = { parse: parseMaxpTable };\n\n// The `OS/2` table contains metrics required in OpenType fonts.\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(\n        p.parseByte(),\n        p.parseByte(),\n        p.parseByte(),\n        p.parseByte()\n    );\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nvar os2 = { parse: parseOS2Table };\n\n// The `post` table stores additional PostScript information, such as glyph names.\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    post.names = [];\n    switch (post.version) {\n        case 1:\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (var i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (var i$1 = 0; i$1 < post.numberOfGlyphs; i$1++) {\n                post.offset[i$1] = p.parseChar();\n            }\n            break;\n    }\n    return post;\n}\n\nvar post = { parse: parsePostTable };\n\n// Data types used in the OpenType font file.\n\n/**\n * @exports opentype.decode\n * @class\n */\nvar decode = {};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes;\n    for (var j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// The `GPOS` table contains kerning pairs, among other things.\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    var numDataMaps = p.parseULong();\n\n    var tags = {};\n    for (var i = 0; i < numDataMaps; i++) {\n        var tag = p.parseTag();\n        var dataOffset = p.parseULong();\n        var dataLength = p.parseULong();\n        var text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nvar meta = { parse: parseMetaTable };\n\n// opentype.js\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var checksum = parse.getULong(data, p + 4);\n        var offset = parse.getULong(data, p + 8);\n        var length = parse.getULong(data, p + 12);\n        tableEntries.push({\n            tag: tag,\n            checksum: checksum,\n            offset: offset,\n            length: length,\n            compression: false,\n        });\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 44; // offset to the first table directory entry.\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 4);\n        var compLength = parse.getULong(data, p + 8);\n        var origLength = parse.getULong(data, p + 12);\n        var compression = (void 0);\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({\n            tag: tag,\n            offset: offset,\n            compression: compression,\n            compressedLength: compLength,\n            length: origLength,\n        });\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        var inBuffer = new Uint8Array(\n            data.buffer,\n            tableEntry.offset + 2,\n            tableEntry.compressedLength - 2\n        );\n        var outBuffer = new Uint8Array(tableEntry.length);\n        inflateSync(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error(\n                'Decompression error: ' +\n                    tableEntry.tag +\n                    \" decompressed length doesn't match recorded length\"\n            );\n        }\n\n        var view = new DataView(outBuffer.buffer, 0);\n        return { data: view, offset: 0 };\n    } else {\n        return { data: data, offset: tableEntry.offset };\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = opt === undefined || opt === null ? {} : opt;\n\n    var indexToLocFormat;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    var font = new Font({ empty: true });\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    var data = new DataView(buffer, 0);\n    var numTables;\n    var tableEntries = [];\n    var signature = parse.getTag(data, 0);\n    if (\n        signature === String.fromCharCode(0, 1, 0, 0) ||\n        signature === 'true' ||\n        signature === 'typ1'\n    ) {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        var flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    var cffTableEntry;\n    var fvarTableEntry;\n    var glyfTableEntry;\n    var gdefTableEntry;\n    var gposTableEntry;\n    var gsubTableEntry;\n    var hmtxTableEntry;\n    var kernTableEntry;\n    var locaTableEntry;\n    var metaTableEntry;\n    var p;\n\n    for (var i = 0; i < numTables; i += 1) {\n        var tableEntry = tableEntries[i];\n        var table = (void 0);\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                break;\n            case 'prep':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GDEF':\n                gdefTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    if (glyfTableEntry && locaTableEntry) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = uncompressTable(data, locaTableEntry);\n        var locaOffsets = loca.parse(\n            locaTable.data,\n            locaTable.offset,\n            font.numGlyphs,\n            shortVersion\n        );\n        var glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(\n            glyfTable.data,\n            glyfTable.offset,\n            locaOffsets,\n            font,\n            opt\n        );\n    } else if (cffTableEntry) {\n        var cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error(\"Font doesn't contain TrueType or CFF outlines.\");\n    }\n\n    var hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(\n        font,\n        hmtxTable.data,\n        hmtxTable.offset,\n        font.numberOfHMetrics,\n        font.numGlyphs,\n        font.glyphs,\n        opt\n    );\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        var kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gdefTableEntry) {\n        var gdefTable = uncompressTable(data, gdefTableEntry);\n        font.tables.gdef = gdef.parse(gdefTable.data, gdefTable.offset);\n    }\n\n    if (gposTableEntry) {\n        var gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        var gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        var fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(\n            fvarTable.data,\n            fvarTable.offset,\n            font.names\n        );\n    }\n\n    if (metaTableEntry) {\n        var metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\nfunction load() {}\nfunction loadSync() {}\n\nvar opentype = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   Font: Font,\n   Glyph: Glyph,\n   Path: Path,\n   _parse: parse,\n   parse: parseBuffer,\n   load: load,\n   loadSync: loadSync\n});\n\nexport default opentype;\nexport { Font, Glyph, Path, parse as _parse, load, loadSync, parseBuffer as parse };\n//# sourceMappingURL=opentype.module.js.map\n","export default () => {\n\t// https://mths.be/emoji\n\treturn /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC3\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC08\\uDC26](?:\\u200D\\u2B1B)?|[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n};\n","var Pu=Object.create;var ur=Object.defineProperty;var Au=Object.getOwnPropertyDescriptor;var Ru=Object.getOwnPropertyNames;var Iu=Object.getPrototypeOf,Lu=Object.prototype.hasOwnProperty;var Wr=(e,t)=>()=>(e&&(t=e(e=0)),t);var I=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),go=(e,t)=>{for(var n in t)ur(e,n,{get:t[n],enumerable:!0})},vo=(e,t,n,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of Ru(t))!Lu.call(e,i)&&i!==n&&ur(e,i,{get:()=>t[i],enumerable:!(r=Au(t,i))||r.enumerable});return e};var Cu=(e,t,n)=>(n=e!=null?Pu(Iu(e)):{},vo(t||!e||!e.__esModule?ur(n,\"default\",{value:e,enumerable:!0}):n,e)),lr=e=>vo(ur({},\"__esModule\",{value:!0}),e);var c=Wr(()=>{});var vn=I(gn=>{\"use strict\";c();Object.defineProperty(gn,\"__esModule\",{value:!0});Object.defineProperty(gn,\"default\",{enumerable:!0,get:()=>xl});function xl(e){if(e=`${e}`,e===\"0\")return\"0\";if(/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(e))return e.replace(/^[+-]?/,t=>t===\"-\"?\"\":\"-\");if(e.includes(\"var(\")||e.includes(\"calc(\"))return`calc(${e} * -1)`}});var Vo=I(bn=>{\"use strict\";c();Object.defineProperty(bn,\"__esModule\",{value:!0});Object.defineProperty(bn,\"default\",{enumerable:!0,get:()=>wl});var wl=[\"preflight\",\"container\",\"accessibility\",\"pointerEvents\",\"visibility\",\"position\",\"inset\",\"isolation\",\"zIndex\",\"order\",\"gridColumn\",\"gridColumnStart\",\"gridColumnEnd\",\"gridRow\",\"gridRowStart\",\"gridRowEnd\",\"float\",\"clear\",\"margin\",\"boxSizing\",\"display\",\"aspectRatio\",\"height\",\"maxHeight\",\"minHeight\",\"width\",\"minWidth\",\"maxWidth\",\"flex\",\"flexShrink\",\"flexGrow\",\"flexBasis\",\"tableLayout\",\"borderCollapse\",\"borderSpacing\",\"transformOrigin\",\"translate\",\"rotate\",\"skew\",\"scale\",\"transform\",\"animation\",\"cursor\",\"touchAction\",\"userSelect\",\"resize\",\"scrollSnapType\",\"scrollSnapAlign\",\"scrollSnapStop\",\"scrollMargin\",\"scrollPadding\",\"listStylePosition\",\"listStyleType\",\"appearance\",\"columns\",\"breakBefore\",\"breakInside\",\"breakAfter\",\"gridAutoColumns\",\"gridAutoFlow\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"flexDirection\",\"flexWrap\",\"placeContent\",\"placeItems\",\"alignContent\",\"alignItems\",\"justifyContent\",\"justifyItems\",\"gap\",\"space\",\"divideWidth\",\"divideStyle\",\"divideColor\",\"divideOpacity\",\"placeSelf\",\"alignSelf\",\"justifySelf\",\"overflow\",\"overscrollBehavior\",\"scrollBehavior\",\"textOverflow\",\"whitespace\",\"wordBreak\",\"borderRadius\",\"borderWidth\",\"borderStyle\",\"borderColor\",\"borderOpacity\",\"backgroundColor\",\"backgroundOpacity\",\"backgroundImage\",\"gradientColorStops\",\"boxDecorationBreak\",\"backgroundSize\",\"backgroundAttachment\",\"backgroundClip\",\"backgroundPosition\",\"backgroundRepeat\",\"backgroundOrigin\",\"fill\",\"stroke\",\"strokeWidth\",\"objectFit\",\"objectPosition\",\"padding\",\"textAlign\",\"textIndent\",\"verticalAlign\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"textTransform\",\"fontStyle\",\"fontVariantNumeric\",\"lineHeight\",\"letterSpacing\",\"textColor\",\"textOpacity\",\"textDecoration\",\"textDecorationColor\",\"textDecorationStyle\",\"textDecorationThickness\",\"textUnderlineOffset\",\"fontSmoothing\",\"placeholderColor\",\"placeholderOpacity\",\"caretColor\",\"accentColor\",\"opacity\",\"backgroundBlendMode\",\"mixBlendMode\",\"boxShadow\",\"boxShadowColor\",\"outlineStyle\",\"outlineWidth\",\"outlineOffset\",\"outlineColor\",\"ringWidth\",\"ringColor\",\"ringOpacity\",\"ringOffsetWidth\",\"ringOffsetColor\",\"blur\",\"brightness\",\"contrast\",\"dropShadow\",\"grayscale\",\"hueRotate\",\"invert\",\"saturate\",\"sepia\",\"filter\",\"backdropBlur\",\"backdropBrightness\",\"backdropContrast\",\"backdropGrayscale\",\"backdropHueRotate\",\"backdropInvert\",\"backdropOpacity\",\"backdropSaturate\",\"backdropSepia\",\"backdropFilter\",\"transitionProperty\",\"transitionDelay\",\"transitionDuration\",\"transitionTimingFunction\",\"willChange\",\"content\"]});var Ho=I(yn=>{\"use strict\";c();Object.defineProperty(yn,\"__esModule\",{value:!0});Object.defineProperty(yn,\"default\",{enumerable:!0,get:()=>_l});function _l(e,t){return e===void 0?t:Array.isArray(e)?e:[...new Set(t.filter(r=>e!==!1&&e[r]!==!1).concat(Object.keys(e).filter(r=>e[r]!==!1)))]}});var xn=I((eg,jo)=>{c();jo.exports={content:[],presets:[],darkMode:\"media\",theme:{screens:{sm:\"640px\",md:\"768px\",lg:\"1024px\",xl:\"1280px\",\"2xl\":\"1536px\"},colors:({colors:e})=>({inherit:e.inherit,current:e.current,transparent:e.transparent,black:e.black,white:e.white,slate:e.slate,gray:e.gray,zinc:e.zinc,neutral:e.neutral,stone:e.stone,red:e.red,orange:e.orange,amber:e.amber,yellow:e.yellow,lime:e.lime,green:e.green,emerald:e.emerald,teal:e.teal,cyan:e.cyan,sky:e.sky,blue:e.blue,indigo:e.indigo,violet:e.violet,purple:e.purple,fuchsia:e.fuchsia,pink:e.pink,rose:e.rose}),columns:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",\"3xs\":\"16rem\",\"2xs\":\"18rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\"},spacing:{px:\"1px\",0:\"0px\",.5:\"0.125rem\",1:\"0.25rem\",1.5:\"0.375rem\",2:\"0.5rem\",2.5:\"0.625rem\",3:\"0.75rem\",3.5:\"0.875rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\",11:\"2.75rem\",12:\"3rem\",14:\"3.5rem\",16:\"4rem\",20:\"5rem\",24:\"6rem\",28:\"7rem\",32:\"8rem\",36:\"9rem\",40:\"10rem\",44:\"11rem\",48:\"12rem\",52:\"13rem\",56:\"14rem\",60:\"15rem\",64:\"16rem\",72:\"18rem\",80:\"20rem\",96:\"24rem\"},animation:{none:\"none\",spin:\"spin 1s linear infinite\",ping:\"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",pulse:\"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",bounce:\"bounce 1s infinite\"},aspectRatio:{auto:\"auto\",square:\"1 / 1\",video:\"16 / 9\"},backdropBlur:({theme:e})=>e(\"blur\"),backdropBrightness:({theme:e})=>e(\"brightness\"),backdropContrast:({theme:e})=>e(\"contrast\"),backdropGrayscale:({theme:e})=>e(\"grayscale\"),backdropHueRotate:({theme:e})=>e(\"hueRotate\"),backdropInvert:({theme:e})=>e(\"invert\"),backdropOpacity:({theme:e})=>e(\"opacity\"),backdropSaturate:({theme:e})=>e(\"saturate\"),backdropSepia:({theme:e})=>e(\"sepia\"),backgroundColor:({theme:e})=>e(\"colors\"),backgroundImage:{none:\"none\",\"gradient-to-t\":\"linear-gradient(to top, var(--tw-gradient-stops))\",\"gradient-to-tr\":\"linear-gradient(to top right, var(--tw-gradient-stops))\",\"gradient-to-r\":\"linear-gradient(to right, var(--tw-gradient-stops))\",\"gradient-to-br\":\"linear-gradient(to bottom right, var(--tw-gradient-stops))\",\"gradient-to-b\":\"linear-gradient(to bottom, var(--tw-gradient-stops))\",\"gradient-to-bl\":\"linear-gradient(to bottom left, var(--tw-gradient-stops))\",\"gradient-to-l\":\"linear-gradient(to left, var(--tw-gradient-stops))\",\"gradient-to-tl\":\"linear-gradient(to top left, var(--tw-gradient-stops))\"},backgroundOpacity:({theme:e})=>e(\"opacity\"),backgroundPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},backgroundSize:{auto:\"auto\",cover:\"cover\",contain:\"contain\"},blur:{0:\"0\",none:\"0\",sm:\"4px\",DEFAULT:\"8px\",md:\"12px\",lg:\"16px\",xl:\"24px\",\"2xl\":\"40px\",\"3xl\":\"64px\"},brightness:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\",200:\"2\"},borderColor:({theme:e})=>({...e(\"colors\"),DEFAULT:e(\"colors.gray.200\",\"currentColor\")}),borderOpacity:({theme:e})=>e(\"opacity\"),borderRadius:{none:\"0px\",sm:\"0.125rem\",DEFAULT:\"0.25rem\",md:\"0.375rem\",lg:\"0.5rem\",xl:\"0.75rem\",\"2xl\":\"1rem\",\"3xl\":\"1.5rem\",full:\"9999px\"},borderSpacing:({theme:e})=>({...e(\"spacing\")}),borderWidth:{DEFAULT:\"1px\",0:\"0px\",2:\"2px\",4:\"4px\",8:\"8px\"},boxShadow:{sm:\"0 1px 2px 0 rgb(0 0 0 / 0.05)\",DEFAULT:\"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",md:\"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",lg:\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",xl:\"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\",\"2xl\":\"0 25px 50px -12px rgb(0 0 0 / 0.25)\",inner:\"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\",none:\"none\"},boxShadowColor:({theme:e})=>e(\"colors\"),caretColor:({theme:e})=>e(\"colors\"),accentColor:({theme:e})=>({...e(\"colors\"),auto:\"auto\"}),contrast:{0:\"0\",50:\".5\",75:\".75\",100:\"1\",125:\"1.25\",150:\"1.5\",200:\"2\"},container:{},content:{none:\"none\"},cursor:{auto:\"auto\",default:\"default\",pointer:\"pointer\",wait:\"wait\",text:\"text\",move:\"move\",help:\"help\",\"not-allowed\":\"not-allowed\",none:\"none\",\"context-menu\":\"context-menu\",progress:\"progress\",cell:\"cell\",crosshair:\"crosshair\",\"vertical-text\":\"vertical-text\",alias:\"alias\",copy:\"copy\",\"no-drop\":\"no-drop\",grab:\"grab\",grabbing:\"grabbing\",\"all-scroll\":\"all-scroll\",\"col-resize\":\"col-resize\",\"row-resize\":\"row-resize\",\"n-resize\":\"n-resize\",\"e-resize\":\"e-resize\",\"s-resize\":\"s-resize\",\"w-resize\":\"w-resize\",\"ne-resize\":\"ne-resize\",\"nw-resize\":\"nw-resize\",\"se-resize\":\"se-resize\",\"sw-resize\":\"sw-resize\",\"ew-resize\":\"ew-resize\",\"ns-resize\":\"ns-resize\",\"nesw-resize\":\"nesw-resize\",\"nwse-resize\":\"nwse-resize\",\"zoom-in\":\"zoom-in\",\"zoom-out\":\"zoom-out\"},divideColor:({theme:e})=>e(\"borderColor\"),divideOpacity:({theme:e})=>e(\"borderOpacity\"),divideWidth:({theme:e})=>e(\"borderWidth\"),dropShadow:{sm:\"0 1px 1px rgb(0 0 0 / 0.05)\",DEFAULT:[\"0 1px 2px rgb(0 0 0 / 0.1)\",\"0 1px 1px rgb(0 0 0 / 0.06)\"],md:[\"0 4px 3px rgb(0 0 0 / 0.07)\",\"0 2px 2px rgb(0 0 0 / 0.06)\"],lg:[\"0 10px 8px rgb(0 0 0 / 0.04)\",\"0 4px 3px rgb(0 0 0 / 0.1)\"],xl:[\"0 20px 13px rgb(0 0 0 / 0.03)\",\"0 8px 5px rgb(0 0 0 / 0.08)\"],\"2xl\":\"0 25px 25px rgb(0 0 0 / 0.15)\",none:\"0 0 #0000\"},fill:({theme:e})=>e(\"colors\"),grayscale:{0:\"0\",DEFAULT:\"100%\"},hueRotate:{0:\"0deg\",15:\"15deg\",30:\"30deg\",60:\"60deg\",90:\"90deg\",180:\"180deg\"},invert:{0:\"0\",DEFAULT:\"100%\"},flex:{1:\"1 1 0%\",auto:\"1 1 auto\",initial:\"0 1 auto\",none:\"none\"},flexBasis:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\"}),flexGrow:{0:\"0\",DEFAULT:\"1\"},flexShrink:{0:\"0\",DEFAULT:\"1\"},fontFamily:{sans:[\"ui-sans-serif\",\"system-ui\",\"-apple-system\",\"BlinkMacSystemFont\",'\"Segoe UI\"',\"Roboto\",'\"Helvetica Neue\"',\"Arial\",'\"Noto Sans\"',\"sans-serif\",'\"Apple Color Emoji\"','\"Segoe UI Emoji\"','\"Segoe UI Symbol\"','\"Noto Color Emoji\"'],serif:[\"ui-serif\",\"Georgia\",\"Cambria\",'\"Times New Roman\"',\"Times\",\"serif\"],mono:[\"ui-monospace\",\"SFMono-Regular\",\"Menlo\",\"Monaco\",\"Consolas\",'\"Liberation Mono\"','\"Courier New\"',\"monospace\"]},fontSize:{xs:[\"0.75rem\",{lineHeight:\"1rem\"}],sm:[\"0.875rem\",{lineHeight:\"1.25rem\"}],base:[\"1rem\",{lineHeight:\"1.5rem\"}],lg:[\"1.125rem\",{lineHeight:\"1.75rem\"}],xl:[\"1.25rem\",{lineHeight:\"1.75rem\"}],\"2xl\":[\"1.5rem\",{lineHeight:\"2rem\"}],\"3xl\":[\"1.875rem\",{lineHeight:\"2.25rem\"}],\"4xl\":[\"2.25rem\",{lineHeight:\"2.5rem\"}],\"5xl\":[\"3rem\",{lineHeight:\"1\"}],\"6xl\":[\"3.75rem\",{lineHeight:\"1\"}],\"7xl\":[\"4.5rem\",{lineHeight:\"1\"}],\"8xl\":[\"6rem\",{lineHeight:\"1\"}],\"9xl\":[\"8rem\",{lineHeight:\"1\"}]},fontWeight:{thin:\"100\",extralight:\"200\",light:\"300\",normal:\"400\",medium:\"500\",semibold:\"600\",bold:\"700\",extrabold:\"800\",black:\"900\"},gap:({theme:e})=>e(\"spacing\"),gradientColorStops:({theme:e})=>e(\"colors\"),gridAutoColumns:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridAutoRows:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridColumn:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-7\":\"span 7 / span 7\",\"span-8\":\"span 8 / span 8\",\"span-9\":\"span 9 / span 9\",\"span-10\":\"span 10 / span 10\",\"span-11\":\"span 11 / span 11\",\"span-12\":\"span 12 / span 12\",\"span-full\":\"1 / -1\"},gridColumnEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridColumnStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridRow:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-full\":\"1 / -1\"},gridRowStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridRowEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridTemplateColumns:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\",7:\"repeat(7, minmax(0, 1fr))\",8:\"repeat(8, minmax(0, 1fr))\",9:\"repeat(9, minmax(0, 1fr))\",10:\"repeat(10, minmax(0, 1fr))\",11:\"repeat(11, minmax(0, 1fr))\",12:\"repeat(12, minmax(0, 1fr))\"},gridTemplateRows:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\"},height:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),inset:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),keyframes:{spin:{to:{transform:\"rotate(360deg)\"}},ping:{\"75%, 100%\":{transform:\"scale(2)\",opacity:\"0\"}},pulse:{\"50%\":{opacity:\".5\"}},bounce:{\"0%, 100%\":{transform:\"translateY(-25%)\",animationTimingFunction:\"cubic-bezier(0.8,0,1,1)\"},\"50%\":{transform:\"none\",animationTimingFunction:\"cubic-bezier(0,0,0.2,1)\"}}},letterSpacing:{tighter:\"-0.05em\",tight:\"-0.025em\",normal:\"0em\",wide:\"0.025em\",wider:\"0.05em\",widest:\"0.1em\"},lineHeight:{none:\"1\",tight:\"1.25\",snug:\"1.375\",normal:\"1.5\",relaxed:\"1.625\",loose:\"2\",3:\".75rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\"},listStyleType:{none:\"none\",disc:\"disc\",decimal:\"decimal\"},margin:({theme:e})=>({auto:\"auto\",...e(\"spacing\")}),maxHeight:({theme:e})=>({...e(\"spacing\"),full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),maxWidth:({theme:e,breakpoints:t})=>({none:\"none\",0:\"0rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\",prose:\"65ch\",...t(e(\"screens\"))}),minHeight:{0:\"0px\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},minWidth:{0:\"0px\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},objectPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},opacity:{0:\"0\",5:\"0.05\",10:\"0.1\",20:\"0.2\",25:\"0.25\",30:\"0.3\",40:\"0.4\",50:\"0.5\",60:\"0.6\",70:\"0.7\",75:\"0.75\",80:\"0.8\",90:\"0.9\",95:\"0.95\",100:\"1\"},order:{first:\"-9999\",last:\"9999\",none:\"0\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\"},padding:({theme:e})=>e(\"spacing\"),placeholderColor:({theme:e})=>e(\"colors\"),placeholderOpacity:({theme:e})=>e(\"opacity\"),outlineColor:({theme:e})=>e(\"colors\"),outlineOffset:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},outlineWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},ringColor:({theme:e})=>({DEFAULT:e(\"colors.blue.500\",\"#3b82f6\"),...e(\"colors\")}),ringOffsetColor:({theme:e})=>e(\"colors\"),ringOffsetWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},ringOpacity:({theme:e})=>({DEFAULT:\"0.5\",...e(\"opacity\")}),ringWidth:{DEFAULT:\"3px\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},rotate:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\",45:\"45deg\",90:\"90deg\",180:\"180deg\"},saturate:{0:\"0\",50:\".5\",100:\"1\",150:\"1.5\",200:\"2\"},scale:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\"},scrollMargin:({theme:e})=>({...e(\"spacing\")}),scrollPadding:({theme:e})=>e(\"spacing\"),sepia:{0:\"0\",DEFAULT:\"100%\"},skew:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\"},space:({theme:e})=>({...e(\"spacing\")}),stroke:({theme:e})=>e(\"colors\"),strokeWidth:{0:\"0\",1:\"1\",2:\"2\"},textColor:({theme:e})=>e(\"colors\"),textDecorationColor:({theme:e})=>e(\"colors\"),textDecorationThickness:{auto:\"auto\",\"from-font\":\"from-font\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},textUnderlineOffset:{auto:\"auto\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},textIndent:({theme:e})=>({...e(\"spacing\")}),textOpacity:({theme:e})=>e(\"opacity\"),transformOrigin:{center:\"center\",top:\"top\",\"top-right\":\"top right\",right:\"right\",\"bottom-right\":\"bottom right\",bottom:\"bottom\",\"bottom-left\":\"bottom left\",left:\"left\",\"top-left\":\"top left\"},transitionDelay:{75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionDuration:{DEFAULT:\"150ms\",75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionProperty:{none:\"none\",all:\"all\",DEFAULT:\"color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter\",colors:\"color, background-color, border-color, text-decoration-color, fill, stroke\",opacity:\"opacity\",shadow:\"box-shadow\",transform:\"transform\"},transitionTimingFunction:{DEFAULT:\"cubic-bezier(0.4, 0, 0.2, 1)\",linear:\"linear\",in:\"cubic-bezier(0.4, 0, 1, 1)\",out:\"cubic-bezier(0, 0, 0.2, 1)\",\"in-out\":\"cubic-bezier(0.4, 0, 0.2, 1)\"},translate:({theme:e})=>({...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),width:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\",screen:\"100vw\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),willChange:{auto:\"auto\",scroll:\"scroll-position\",contents:\"contents\",transform:\"transform\"},zIndex:{auto:\"auto\",0:\"0\",10:\"10\",20:\"20\",30:\"30\",40:\"40\",50:\"50\"}},variantOrder:[\"first\",\"last\",\"odd\",\"even\",\"visited\",\"checked\",\"empty\",\"read-only\",\"group-hover\",\"group-focus\",\"focus-within\",\"hover\",\"focus\",\"focus-visible\",\"active\",\"disabled\"],plugins:[]}});var vr={};go(vr,{default:()=>Sl});var Sl,br=Wr(()=>{c();Sl={info(e,t){console.info(...Array.isArray(e)?[e]:[t,e])},warn(e,t){console.warn(...Array.isArray(e)?[e]:[t,e])},risk(e,t){console.error(...Array.isArray(e)?[e]:[t,e])}}});var Yo=I(wn=>{\"use strict\";c();Object.defineProperty(wn,\"__esModule\",{value:!0});Object.defineProperty(wn,\"default\",{enumerable:!0,get:()=>Ol});var kl=Tl((br(),lr(vr)));function Tl(e){return e&&e.__esModule?e:{default:e}}function wt({version:e,from:t,to:n}){kl.default.warn(`${t}-color-renamed`,[`As of Tailwind CSS ${e}, \\`${t}\\` has been renamed to \\`${n}\\`.`,\"Update your configuration file to silence this warning.\"])}var Ol={inherit:\"inherit\",current:\"currentColor\",transparent:\"transparent\",black:\"#000\",white:\"#fff\",slate:{50:\"#f8fafc\",100:\"#f1f5f9\",200:\"#e2e8f0\",300:\"#cbd5e1\",400:\"#94a3b8\",500:\"#64748b\",600:\"#475569\",700:\"#334155\",800:\"#1e293b\",900:\"#0f172a\"},gray:{50:\"#f9fafb\",100:\"#f3f4f6\",200:\"#e5e7eb\",300:\"#d1d5db\",400:\"#9ca3af\",500:\"#6b7280\",600:\"#4b5563\",700:\"#374151\",800:\"#1f2937\",900:\"#111827\"},zinc:{50:\"#fafafa\",100:\"#f4f4f5\",200:\"#e4e4e7\",300:\"#d4d4d8\",400:\"#a1a1aa\",500:\"#71717a\",600:\"#52525b\",700:\"#3f3f46\",800:\"#27272a\",900:\"#18181b\"},neutral:{50:\"#fafafa\",100:\"#f5f5f5\",200:\"#e5e5e5\",300:\"#d4d4d4\",400:\"#a3a3a3\",500:\"#737373\",600:\"#525252\",700:\"#404040\",800:\"#262626\",900:\"#171717\"},stone:{50:\"#fafaf9\",100:\"#f5f5f4\",200:\"#e7e5e4\",300:\"#d6d3d1\",400:\"#a8a29e\",500:\"#78716c\",600:\"#57534e\",700:\"#44403c\",800:\"#292524\",900:\"#1c1917\"},red:{50:\"#fef2f2\",100:\"#fee2e2\",200:\"#fecaca\",300:\"#fca5a5\",400:\"#f87171\",500:\"#ef4444\",600:\"#dc2626\",700:\"#b91c1c\",800:\"#991b1b\",900:\"#7f1d1d\"},orange:{50:\"#fff7ed\",100:\"#ffedd5\",200:\"#fed7aa\",300:\"#fdba74\",400:\"#fb923c\",500:\"#f97316\",600:\"#ea580c\",700:\"#c2410c\",800:\"#9a3412\",900:\"#7c2d12\"},amber:{50:\"#fffbeb\",100:\"#fef3c7\",200:\"#fde68a\",300:\"#fcd34d\",400:\"#fbbf24\",500:\"#f59e0b\",600:\"#d97706\",700:\"#b45309\",800:\"#92400e\",900:\"#78350f\"},yellow:{50:\"#fefce8\",100:\"#fef9c3\",200:\"#fef08a\",300:\"#fde047\",400:\"#facc15\",500:\"#eab308\",600:\"#ca8a04\",700:\"#a16207\",800:\"#854d0e\",900:\"#713f12\"},lime:{50:\"#f7fee7\",100:\"#ecfccb\",200:\"#d9f99d\",300:\"#bef264\",400:\"#a3e635\",500:\"#84cc16\",600:\"#65a30d\",700:\"#4d7c0f\",800:\"#3f6212\",900:\"#365314\"},green:{50:\"#f0fdf4\",100:\"#dcfce7\",200:\"#bbf7d0\",300:\"#86efac\",400:\"#4ade80\",500:\"#22c55e\",600:\"#16a34a\",700:\"#15803d\",800:\"#166534\",900:\"#14532d\"},emerald:{50:\"#ecfdf5\",100:\"#d1fae5\",200:\"#a7f3d0\",300:\"#6ee7b7\",400:\"#34d399\",500:\"#10b981\",600:\"#059669\",700:\"#047857\",800:\"#065f46\",900:\"#064e3b\"},teal:{50:\"#f0fdfa\",100:\"#ccfbf1\",200:\"#99f6e4\",300:\"#5eead4\",400:\"#2dd4bf\",500:\"#14b8a6\",600:\"#0d9488\",700:\"#0f766e\",800:\"#115e59\",900:\"#134e4a\"},cyan:{50:\"#ecfeff\",100:\"#cffafe\",200:\"#a5f3fc\",300:\"#67e8f9\",400:\"#22d3ee\",500:\"#06b6d4\",600:\"#0891b2\",700:\"#0e7490\",800:\"#155e75\",900:\"#164e63\"},sky:{50:\"#f0f9ff\",100:\"#e0f2fe\",200:\"#bae6fd\",300:\"#7dd3fc\",400:\"#38bdf8\",500:\"#0ea5e9\",600:\"#0284c7\",700:\"#0369a1\",800:\"#075985\",900:\"#0c4a6e\"},blue:{50:\"#eff6ff\",100:\"#dbeafe\",200:\"#bfdbfe\",300:\"#93c5fd\",400:\"#60a5fa\",500:\"#3b82f6\",600:\"#2563eb\",700:\"#1d4ed8\",800:\"#1e40af\",900:\"#1e3a8a\"},indigo:{50:\"#eef2ff\",100:\"#e0e7ff\",200:\"#c7d2fe\",300:\"#a5b4fc\",400:\"#818cf8\",500:\"#6366f1\",600:\"#4f46e5\",700:\"#4338ca\",800:\"#3730a3\",900:\"#312e81\"},violet:{50:\"#f5f3ff\",100:\"#ede9fe\",200:\"#ddd6fe\",300:\"#c4b5fd\",400:\"#a78bfa\",500:\"#8b5cf6\",600:\"#7c3aed\",700:\"#6d28d9\",800:\"#5b21b6\",900:\"#4c1d95\"},purple:{50:\"#faf5ff\",100:\"#f3e8ff\",200:\"#e9d5ff\",300:\"#d8b4fe\",400:\"#c084fc\",500:\"#a855f7\",600:\"#9333ea\",700:\"#7e22ce\",800:\"#6b21a8\",900:\"#581c87\"},fuchsia:{50:\"#fdf4ff\",100:\"#fae8ff\",200:\"#f5d0fe\",300:\"#f0abfc\",400:\"#e879f9\",500:\"#d946ef\",600:\"#c026d3\",700:\"#a21caf\",800:\"#86198f\",900:\"#701a75\"},pink:{50:\"#fdf2f8\",100:\"#fce7f3\",200:\"#fbcfe8\",300:\"#f9a8d4\",400:\"#f472b6\",500:\"#ec4899\",600:\"#db2777\",700:\"#be185d\",800:\"#9d174d\",900:\"#831843\"},rose:{50:\"#fff1f2\",100:\"#ffe4e6\",200:\"#fecdd3\",300:\"#fda4af\",400:\"#fb7185\",500:\"#f43f5e\",600:\"#e11d48\",700:\"#be123c\",800:\"#9f1239\",900:\"#881337\"},get lightBlue(){return wt({version:\"v2.2\",from:\"lightBlue\",to:\"sky\"}),this.sky},get warmGray(){return wt({version:\"v3.0\",from:\"warmGray\",to:\"stone\"}),this.stone},get trueGray(){return wt({version:\"v3.0\",from:\"trueGray\",to:\"neutral\"}),this.neutral},get coolGray(){return wt({version:\"v3.0\",from:\"coolGray\",to:\"gray\"}),this.gray},get blueGray(){return wt({version:\"v3.0\",from:\"blueGray\",to:\"slate\"}),this.slate}}});var Xo=I(_n=>{\"use strict\";c();Object.defineProperty(_n,\"__esModule\",{value:!0});Object.defineProperty(_n,\"defaults\",{enumerable:!0,get:()=>El});function El(e,...t){for(let i of t){for(let s in i){var n;!(e==null||(n=e.hasOwnProperty)===null||n===void 0)&&n.call(e,s)||(e[s]=i[s])}for(let s of Object.getOwnPropertySymbols(i)){var r;!(e==null||(r=e.hasOwnProperty)===null||r===void 0)&&r.call(e,s)||(e[s]=i[s])}}return e}});var Qo=I(Sn=>{\"use strict\";c();Object.defineProperty(Sn,\"__esModule\",{value:!0});Object.defineProperty(Sn,\"toPath\",{enumerable:!0,get:()=>Pl});function Pl(e){if(Array.isArray(e))return e;let t=e.split(\"[\").length-1,n=e.split(\"]\").length-1;if(t!==n)throw new Error(`Path is invalid. Has unbalanced brackets: ${e}`);return e.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)}});var Ko=I(kn=>{\"use strict\";c();Object.defineProperty(kn,\"__esModule\",{value:!0});Object.defineProperty(kn,\"normalizeConfig\",{enumerable:!0,get:()=>Rl});var _t=Al((br(),lr(vr)));function Jo(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,n=new WeakMap;return(Jo=function(r){return r?n:t})(e)}function Al(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var n=Jo(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(s!==\"default\"&&Object.prototype.hasOwnProperty.call(e,s)){var o=i?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}function Rl(e){if((()=>{if(e.purge||!e.content||!Array.isArray(e.content)&&!(typeof e.content==\"object\"&&e.content!==null))return!1;if(Array.isArray(e.content))return e.content.every(r=>typeof r==\"string\"?!0:!(typeof(r==null?void 0:r.raw)!=\"string\"||(r==null?void 0:r.extension)&&typeof(r==null?void 0:r.extension)!=\"string\"));if(typeof e.content==\"object\"&&e.content!==null){if(Object.keys(e.content).some(r=>![\"files\",\"extract\",\"transform\"].includes(r)))return!1;if(Array.isArray(e.content.files)){if(!e.content.files.every(r=>typeof r==\"string\"?!0:!(typeof(r==null?void 0:r.raw)!=\"string\"||(r==null?void 0:r.extension)&&typeof(r==null?void 0:r.extension)!=\"string\")))return!1;if(typeof e.content.extract==\"object\"){for(let r of Object.values(e.content.extract))if(typeof r!=\"function\")return!1}else if(!(e.content.extract===void 0||typeof e.content.extract==\"function\"))return!1;if(typeof e.content.transform==\"object\"){for(let r of Object.values(e.content.transform))if(typeof r!=\"function\")return!1}else if(!(e.content.transform===void 0||typeof e.content.transform==\"function\"))return!1}return!0}return!1})()||_t.default.warn(\"purge-deprecation\",[\"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\"Update your configuration file to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"]),e.safelist=(()=>{var r;let{content:i,purge:s,safelist:o}=e;return Array.isArray(o)?o:Array.isArray(i==null?void 0:i.safelist)?i.safelist:Array.isArray(s==null?void 0:s.safelist)?s.safelist:Array.isArray(s==null||(r=s.options)===null||r===void 0?void 0:r.safelist)?s.options.safelist:[]})(),typeof e.prefix==\"function\")_t.default.warn(\"prefix-function\",[\"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\"Update `prefix` in your configuration to be a string to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"]),e.prefix=\"\";else{var n;e.prefix=(n=e.prefix)!==null&&n!==void 0?n:\"\"}e.content={files:(()=>{let{content:r,purge:i}=e;return Array.isArray(i)?i:Array.isArray(i==null?void 0:i.content)?i.content:Array.isArray(r)?r:Array.isArray(r==null?void 0:r.content)?r.content:Array.isArray(r==null?void 0:r.files)?r.files:[]})(),extract:(()=>{let r=(()=>{var o,a,u,f,l,p,y,h,d,m;return!((o=e.purge)===null||o===void 0)&&o.extract?e.purge.extract:!((a=e.content)===null||a===void 0)&&a.extract?e.content.extract:!((u=e.purge)===null||u===void 0||(f=u.extract)===null||f===void 0)&&f.DEFAULT?e.purge.extract.DEFAULT:!((l=e.content)===null||l===void 0||(p=l.extract)===null||p===void 0)&&p.DEFAULT?e.content.extract.DEFAULT:!((y=e.purge)===null||y===void 0||(h=y.options)===null||h===void 0)&&h.extractors?e.purge.options.extractors:!((d=e.content)===null||d===void 0||(m=d.options)===null||m===void 0)&&m.extractors?e.content.options.extractors:{}})(),i={},s=(()=>{var o,a,u,f;if(!((o=e.purge)===null||o===void 0||(a=o.options)===null||a===void 0)&&a.defaultExtractor)return e.purge.options.defaultExtractor;if(!((u=e.content)===null||u===void 0||(f=u.options)===null||f===void 0)&&f.defaultExtractor)return e.content.options.defaultExtractor})();if(s!==void 0&&(i.DEFAULT=s),typeof r==\"function\")i.DEFAULT=r;else if(Array.isArray(r))for(let{extensions:o,extractor:a}of r!=null?r:[])for(let u of o)i[u]=a;else typeof r==\"object\"&&r!==null&&Object.assign(i,r);return i})(),transform:(()=>{let r=(()=>{var s,o,a,u,f,l;return!((s=e.purge)===null||s===void 0)&&s.transform?e.purge.transform:!((o=e.content)===null||o===void 0)&&o.transform?e.content.transform:!((a=e.purge)===null||a===void 0||(u=a.transform)===null||u===void 0)&&u.DEFAULT?e.purge.transform.DEFAULT:!((f=e.content)===null||f===void 0||(l=f.transform)===null||l===void 0)&&l.DEFAULT?e.content.transform.DEFAULT:{}})(),i={};return typeof r==\"function\"&&(i.DEFAULT=r),typeof r==\"object\"&&r!==null&&Object.assign(i,r),i})()};for(let r of e.content.files)if(typeof r==\"string\"&&/{([^,]*?)}/g.test(r)){_t.default.warn(\"invalid-glob-braces\",[`The glob pattern ${(0,_t.dim)(r)} in your Tailwind CSS configuration is invalid.`,`Update it to ${(0,_t.dim)(r.replace(/{([^,]*?)}/g,\"$1\"))} to silence this warning.`]);break}return e}});var Zo=I(Tn=>{\"use strict\";c();Object.defineProperty(Tn,\"__esModule\",{value:!0});Object.defineProperty(Tn,\"default\",{enumerable:!0,get:()=>Il});function Il(e){if(Object.prototype.toString.call(e)!==\"[object Object]\")return!1;let t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}});var es=I(En=>{\"use strict\";c();Object.defineProperty(En,\"__esModule\",{value:!0});Object.defineProperty(En,\"cloneDeep\",{enumerable:!0,get:()=>On});function On(e){return Array.isArray(e)?e.map(t=>On(t)):typeof e==\"object\"&&e!==null?Object.fromEntries(Object.entries(e).map(([t,n])=>[t,On(n)])):e}});var Pn=I((yr,ts)=>{\"use strict\";c();yr.__esModule=!0;yr.default=Dl;function Ll(e){for(var t=e.toLowerCase(),n=\"\",r=!1,i=0;i<6&&t[i]!==void 0;i++){var s=t.charCodeAt(i),o=s>=97&&s<=102||s>=48&&s<=57;if(r=s===32,!o)break;n+=t[i]}if(n.length!==0){var a=parseInt(n,16),u=a>=55296&&a<=57343;return u||a===0||a>1114111?[\"\\uFFFD\",n.length+(r?1:0)]:[String.fromCodePoint(a),n.length+(r?1:0)]}}var Cl=/\\\\/;function Dl(e){var t=Cl.test(e);if(!t)return e;for(var n=\"\",r=0;r<e.length;r++){if(e[r]===\"\\\\\"){var i=Ll(e.slice(r+1,r+7));if(i!==void 0){n+=i[0],r+=i[1];continue}if(e[r+1]===\"\\\\\"){n+=\"\\\\\",r++;continue}e.length===r+1&&(n+=e[r]);continue}n+=e[r]}return n}ts.exports=yr.default});var ns=I((xr,rs)=>{\"use strict\";c();xr.__esModule=!0;xr.default=Ml;function Ml(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(;n.length>0;){var i=n.shift();if(!e[i])return;e=e[i]}return e}rs.exports=xr.default});var os=I((wr,is)=>{\"use strict\";c();wr.__esModule=!0;wr.default=Fl;function Fl(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(;n.length>0;){var i=n.shift();e[i]||(e[i]={}),e=e[i]}}is.exports=wr.default});var as=I((_r,ss)=>{\"use strict\";c();_r.__esModule=!0;_r.default=Nl;function Nl(e){for(var t=\"\",n=e.indexOf(\"/*\"),r=0;n>=0;){t=t+e.slice(r,n);var i=e.indexOf(\"*/\",n+2);if(i<0)return t;r=i+2,n=e.indexOf(\"/*\",r)}return t=t+e.slice(r),t}ss.exports=_r.default});var St=I(Oe=>{\"use strict\";c();Oe.__esModule=!0;Oe.stripComments=Oe.ensureObject=Oe.getProp=Oe.unesc=void 0;var $l=Sr(Pn());Oe.unesc=$l.default;var ql=Sr(ns());Oe.getProp=ql.default;var Wl=Sr(os());Oe.ensureObject=Wl.default;var Bl=Sr(as());Oe.stripComments=Bl.default;function Sr(e){return e&&e.__esModule?e:{default:e}}});var Le=I((kt,fs)=>{\"use strict\";c();kt.__esModule=!0;kt.default=void 0;var us=St();function ls(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ul(e,t,n){return t&&ls(e.prototype,t),n&&ls(e,n),e}var zl=function e(t,n){if(typeof t!=\"object\"||t===null)return t;var r=new t.constructor;for(var i in t)if(!!t.hasOwnProperty(i)){var s=t[i],o=typeof s;i===\"parent\"&&o===\"object\"?n&&(r[i]=n):s instanceof Array?r[i]=s.map(function(a){return e(a,r)}):r[i]=e(s,r)}return r},Gl=function(){function e(n){n===void 0&&(n={}),Object.assign(this,n),this.spaces=this.spaces||{},this.spaces.before=this.spaces.before||\"\",this.spaces.after=this.spaces.after||\"\"}var t=e.prototype;return t.remove=function(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this},t.replaceWith=function(){if(this.parent){for(var r in arguments)this.parent.insertBefore(this,arguments[r]);this.remove()}return this},t.next=function(){return this.parent.at(this.parent.index(this)+1)},t.prev=function(){return this.parent.at(this.parent.index(this)-1)},t.clone=function(r){r===void 0&&(r={});var i=zl(this);for(var s in r)i[s]=r[s];return i},t.appendToPropertyAndEscape=function(r,i,s){this.raws||(this.raws={});var o=this[r],a=this.raws[r];this[r]=o+i,a||s!==i?this.raws[r]=(a||o)+s:delete this.raws[r]},t.setPropertyAndEscape=function(r,i,s){this.raws||(this.raws={}),this[r]=i,this.raws[r]=s},t.setPropertyWithoutEscape=function(r,i){this[r]=i,this.raws&&delete this.raws[r]},t.isAtPosition=function(r,i){if(this.source&&this.source.start&&this.source.end)return!(this.source.start.line>r||this.source.end.line<r||this.source.start.line===r&&this.source.start.column>i||this.source.end.line===r&&this.source.end.column<i)},t.stringifyProperty=function(r){return this.raws&&this.raws[r]||this[r]},t.valueToString=function(){return String(this.stringifyProperty(\"value\"))},t.toString=function(){return[this.rawSpaceBefore,this.valueToString(),this.rawSpaceAfter].join(\"\")},Ul(e,[{key:\"rawSpaceBefore\",get:function(){var r=this.raws&&this.raws.spaces&&this.raws.spaces.before;return r===void 0&&(r=this.spaces&&this.spaces.before),r||\"\"},set:function(r){(0,us.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.before=r}},{key:\"rawSpaceAfter\",get:function(){var r=this.raws&&this.raws.spaces&&this.raws.spaces.after;return r===void 0&&(r=this.spaces.after),r||\"\"},set:function(r){(0,us.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.after=r}}]),e}();kt.default=Gl;fs.exports=kt.default});var oe=I(Y=>{\"use strict\";c();Y.__esModule=!0;Y.UNIVERSAL=Y.ATTRIBUTE=Y.CLASS=Y.COMBINATOR=Y.COMMENT=Y.ID=Y.NESTING=Y.PSEUDO=Y.ROOT=Y.SELECTOR=Y.STRING=Y.TAG=void 0;var Vl=\"tag\";Y.TAG=Vl;var Hl=\"string\";Y.STRING=Hl;var jl=\"selector\";Y.SELECTOR=jl;var Yl=\"root\";Y.ROOT=Yl;var Xl=\"pseudo\";Y.PSEUDO=Xl;var Ql=\"nesting\";Y.NESTING=Ql;var Jl=\"id\";Y.ID=Jl;var Kl=\"comment\";Y.COMMENT=Kl;var Zl=\"combinator\";Y.COMBINATOR=Zl;var ef=\"class\";Y.CLASS=ef;var tf=\"attribute\";Y.ATTRIBUTE=tf;var rf=\"universal\";Y.UNIVERSAL=rf});var kr=I((Tt,hs)=>{\"use strict\";c();Tt.__esModule=!0;Tt.default=void 0;var nf=sf(Le()),Ce=of(oe());function ps(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return ps=function(){return e},e}function of(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=ps();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function sf(e){return e&&e.__esModule?e:{default:e}}function af(e,t){var n;if(typeof Symbol>\"u\"||e[Symbol.iterator]==null){if(Array.isArray(e)||(n=uf(e))||t&&e&&typeof e.length==\"number\"){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}return n=e[Symbol.iterator](),n.next.bind(n)}function uf(e,t){if(!!e){if(typeof e==\"string\")return cs(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n===\"Object\"&&e.constructor&&(n=e.constructor.name),n===\"Map\"||n===\"Set\")return Array.from(e);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return cs(e,t)}}function cs(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ds(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function lf(e,t,n){return t&&ds(e.prototype,t),n&&ds(e,n),e}function ff(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,An(e,t)}function An(e,t){return An=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},An(e,t)}var cf=function(e){ff(t,e);function t(r){var i;return i=e.call(this,r)||this,i.nodes||(i.nodes=[]),i}var n=t.prototype;return n.append=function(i){return i.parent=this,this.nodes.push(i),this},n.prepend=function(i){return i.parent=this,this.nodes.unshift(i),this},n.at=function(i){return this.nodes[i]},n.index=function(i){return typeof i==\"number\"?i:this.nodes.indexOf(i)},n.removeChild=function(i){i=this.index(i),this.at(i).parent=void 0,this.nodes.splice(i,1);var s;for(var o in this.indexes)s=this.indexes[o],s>=i&&(this.indexes[o]=s-1);return this},n.removeAll=function(){for(var i=af(this.nodes),s;!(s=i()).done;){var o=s.value;o.parent=void 0}return this.nodes=[],this},n.empty=function(){return this.removeAll()},n.insertAfter=function(i,s){s.parent=this;var o=this.index(i);this.nodes.splice(o+1,0,s),s.parent=this;var a;for(var u in this.indexes)a=this.indexes[u],o<=a&&(this.indexes[u]=a+1);return this},n.insertBefore=function(i,s){s.parent=this;var o=this.index(i);this.nodes.splice(o,0,s),s.parent=this;var a;for(var u in this.indexes)a=this.indexes[u],a<=o&&(this.indexes[u]=a+1);return this},n._findChildAtPosition=function(i,s){var o=void 0;return this.each(function(a){if(a.atPosition){var u=a.atPosition(i,s);if(u)return o=u,!1}else if(a.isAtPosition(i,s))return o=a,!1}),o},n.atPosition=function(i,s){if(this.isAtPosition(i,s))return this._findChildAtPosition(i,s)||this},n._inferEndPosition=function(){this.last&&this.last.source&&this.last.source.end&&(this.source=this.source||{},this.source.end=this.source.end||{},Object.assign(this.source.end,this.last.source.end))},n.each=function(i){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach++;var s=this.lastEach;if(this.indexes[s]=0,!!this.length){for(var o,a;this.indexes[s]<this.length&&(o=this.indexes[s],a=i(this.at(o),o),a!==!1);)this.indexes[s]+=1;if(delete this.indexes[s],a===!1)return!1}},n.walk=function(i){return this.each(function(s,o){var a=i(s,o);if(a!==!1&&s.length&&(a=s.walk(i)),a===!1)return!1})},n.walkAttributes=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.ATTRIBUTE)return i.call(s,o)})},n.walkClasses=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.CLASS)return i.call(s,o)})},n.walkCombinators=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.COMBINATOR)return i.call(s,o)})},n.walkComments=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.COMMENT)return i.call(s,o)})},n.walkIds=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.ID)return i.call(s,o)})},n.walkNesting=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.NESTING)return i.call(s,o)})},n.walkPseudos=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.PSEUDO)return i.call(s,o)})},n.walkTags=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.TAG)return i.call(s,o)})},n.walkUniversals=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.UNIVERSAL)return i.call(s,o)})},n.split=function(i){var s=this,o=[];return this.reduce(function(a,u,f){var l=i.call(s,u);return o.push(u),l?(a.push(o),o=[]):f===s.length-1&&a.push(o),a},[])},n.map=function(i){return this.nodes.map(i)},n.reduce=function(i,s){return this.nodes.reduce(i,s)},n.every=function(i){return this.nodes.every(i)},n.some=function(i){return this.nodes.some(i)},n.filter=function(i){return this.nodes.filter(i)},n.sort=function(i){return this.nodes.sort(i)},n.toString=function(){return this.map(String).join(\"\")},lf(t,[{key:\"first\",get:function(){return this.at(0)}},{key:\"last\",get:function(){return this.at(this.length-1)}},{key:\"length\",get:function(){return this.nodes.length}}]),t}(nf.default);Tt.default=cf;hs.exports=Tt.default});var In=I((Ot,gs)=>{\"use strict\";c();Ot.__esModule=!0;Ot.default=void 0;var df=hf(kr()),pf=oe();function hf(e){return e&&e.__esModule?e:{default:e}}function ms(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function mf(e,t,n){return t&&ms(e.prototype,t),n&&ms(e,n),e}function gf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Rn(e,t)}function Rn(e,t){return Rn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Rn(e,t)}var vf=function(e){gf(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=pf.ROOT,i}var n=t.prototype;return n.toString=function(){var i=this.reduce(function(s,o){return s.push(String(o)),s},[]).join(\",\");return this.trailingComma?i+\",\":i},n.error=function(i,s){return this._error?this._error(i,s):new Error(i)},mf(t,[{key:\"errorGenerator\",set:function(i){this._error=i}}]),t}(df.default);Ot.default=vf;gs.exports=Ot.default});var Cn=I((Et,vs)=>{\"use strict\";c();Et.__esModule=!0;Et.default=void 0;var bf=xf(kr()),yf=oe();function xf(e){return e&&e.__esModule?e:{default:e}}function wf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Ln(e,t)}function Ln(e,t){return Ln=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Ln(e,t)}var _f=function(e){wf(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=yf.SELECTOR,r}return t}(bf.default);Et.default=_f;vs.exports=Et.default});var Tr=I((lg,bs)=>{\"use strict\";c();var Sf={},kf=Sf.hasOwnProperty,Tf=function(t,n){if(!t)return n;var r={};for(var i in n)r[i]=kf.call(t,i)?t[i]:n[i];return r},Of=/[ -,\\.\\/:-@\\[-\\^`\\{-~]/,Ef=/[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/,Pf=/(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g,Dn=function e(t,n){n=Tf(n,e.options),n.quotes!=\"single\"&&n.quotes!=\"double\"&&(n.quotes=\"single\");for(var r=n.quotes==\"double\"?'\"':\"'\",i=n.isIdentifier,s=t.charAt(0),o=\"\",a=0,u=t.length;a<u;){var f=t.charAt(a++),l=f.charCodeAt(),p=void 0;if(l<32||l>126){if(l>=55296&&l<=56319&&a<u){var y=t.charCodeAt(a++);(y&64512)==56320?l=((l&1023)<<10)+(y&1023)+65536:a--}p=\"\\\\\"+l.toString(16).toUpperCase()+\" \"}else n.escapeEverything?Of.test(f)?p=\"\\\\\"+f:p=\"\\\\\"+l.toString(16).toUpperCase()+\" \":/[\\t\\n\\f\\r\\x0B]/.test(f)?p=\"\\\\\"+l.toString(16).toUpperCase()+\" \":f==\"\\\\\"||!i&&(f=='\"'&&r==f||f==\"'\"&&r==f)||i&&Ef.test(f)?p=\"\\\\\"+f:p=f;o+=p}return i&&(/^-[-\\d]/.test(o)?o=\"\\\\-\"+o.slice(1):/\\d/.test(s)&&(o=\"\\\\3\"+s+\" \"+o.slice(1))),o=o.replace(Pf,function(h,d,m){return d&&d.length%2?h:(d||\"\")+m}),!i&&n.wrap?r+o+r:o};Dn.options={escapeEverything:!1,isIdentifier:!1,quotes:\"single\",wrap:!1};Dn.version=\"3.0.0\";bs.exports=Dn});var Fn=I((Pt,ws)=>{\"use strict\";c();Pt.__esModule=!0;Pt.default=void 0;var Af=xs(Tr()),Rf=St(),If=xs(Le()),Lf=oe();function xs(e){return e&&e.__esModule?e:{default:e}}function ys(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Cf(e,t,n){return t&&ys(e.prototype,t),n&&ys(e,n),e}function Df(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Mn(e,t)}function Mn(e,t){return Mn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Mn(e,t)}var Mf=function(e){Df(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=Lf.CLASS,i._constructed=!0,i}var n=t.prototype;return n.valueToString=function(){return\".\"+e.prototype.valueToString.call(this)},Cf(t,[{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var s=(0,Af.default)(i,{isIdentifier:!0});s!==i?((0,Rf.ensureObject)(this,\"raws\"),this.raws.value=s):this.raws&&delete this.raws.value}this._value=i}}]),t}(If.default);Pt.default=Mf;ws.exports=Pt.default});var $n=I((At,_s)=>{\"use strict\";c();At.__esModule=!0;At.default=void 0;var Ff=$f(Le()),Nf=oe();function $f(e){return e&&e.__esModule?e:{default:e}}function qf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Nn(e,t)}function Nn(e,t){return Nn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Nn(e,t)}var Wf=function(e){qf(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Nf.COMMENT,r}return t}(Ff.default);At.default=Wf;_s.exports=At.default});var Wn=I((Rt,Ss)=>{\"use strict\";c();Rt.__esModule=!0;Rt.default=void 0;var Bf=zf(Le()),Uf=oe();function zf(e){return e&&e.__esModule?e:{default:e}}function Gf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,qn(e,t)}function qn(e,t){return qn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},qn(e,t)}var Vf=function(e){Gf(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=Uf.ID,i}var n=t.prototype;return n.valueToString=function(){return\"#\"+e.prototype.valueToString.call(this)},t}(Bf.default);Rt.default=Vf;Ss.exports=Rt.default});var Or=I((It,Os)=>{\"use strict\";c();It.__esModule=!0;It.default=void 0;var Hf=Ts(Tr()),jf=St(),Yf=Ts(Le());function Ts(e){return e&&e.__esModule?e:{default:e}}function ks(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Xf(e,t,n){return t&&ks(e.prototype,t),n&&ks(e,n),e}function Qf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Bn(e,t)}function Bn(e,t){return Bn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Bn(e,t)}var Jf=function(e){Qf(t,e);function t(){return e.apply(this,arguments)||this}var n=t.prototype;return n.qualifiedName=function(i){return this.namespace?this.namespaceString+\"|\"+i:i},n.valueToString=function(){return this.qualifiedName(e.prototype.valueToString.call(this))},Xf(t,[{key:\"namespace\",get:function(){return this._namespace},set:function(i){if(i===!0||i===\"*\"||i===\"&\"){this._namespace=i,this.raws&&delete this.raws.namespace;return}var s=(0,Hf.default)(i,{isIdentifier:!0});this._namespace=i,s!==i?((0,jf.ensureObject)(this,\"raws\"),this.raws.namespace=s):this.raws&&delete this.raws.namespace}},{key:\"ns\",get:function(){return this._namespace},set:function(i){this.namespace=i}},{key:\"namespaceString\",get:function(){if(this.namespace){var i=this.stringifyProperty(\"namespace\");return i===!0?\"\":i}else return\"\"}}]),t}(Yf.default);It.default=Jf;Os.exports=It.default});var zn=I((Lt,Es)=>{\"use strict\";c();Lt.__esModule=!0;Lt.default=void 0;var Kf=ec(Or()),Zf=oe();function ec(e){return e&&e.__esModule?e:{default:e}}function tc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Un(e,t)}function Un(e,t){return Un=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Un(e,t)}var rc=function(e){tc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Zf.TAG,r}return t}(Kf.default);Lt.default=rc;Es.exports=Lt.default});var Vn=I((Ct,Ps)=>{\"use strict\";c();Ct.__esModule=!0;Ct.default=void 0;var nc=oc(Le()),ic=oe();function oc(e){return e&&e.__esModule?e:{default:e}}function sc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Gn(e,t)}function Gn(e,t){return Gn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Gn(e,t)}var ac=function(e){sc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=ic.STRING,r}return t}(nc.default);Ct.default=ac;Ps.exports=Ct.default});var jn=I((Dt,As)=>{\"use strict\";c();Dt.__esModule=!0;Dt.default=void 0;var uc=fc(kr()),lc=oe();function fc(e){return e&&e.__esModule?e:{default:e}}function cc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Hn(e,t)}function Hn(e,t){return Hn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Hn(e,t)}var dc=function(e){cc(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=lc.PSEUDO,i}var n=t.prototype;return n.toString=function(){var i=this.length?\"(\"+this.map(String).join(\",\")+\")\":\"\";return[this.rawSpaceBefore,this.stringifyProperty(\"value\"),i,this.rawSpaceAfter].join(\"\")},t}(uc.default);Dt.default=dc;As.exports=Dt.default});var Is=I((fg,Rs)=>{c();Rs.exports=function(t,n){return function(...r){return console.warn(n),t(...r)}}});var Zn=I(Nt=>{\"use strict\";c();Nt.__esModule=!0;Nt.unescapeValue=Kn;Nt.default=void 0;var Mt=Jn(Tr()),pc=Jn(Pn()),hc=Jn(Or()),mc=oe(),Yn;function Jn(e){return e&&e.__esModule?e:{default:e}}function Ls(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function gc(e,t,n){return t&&Ls(e.prototype,t),n&&Ls(e,n),e}function vc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Qn(e,t)}function Qn(e,t){return Qn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Qn(e,t)}var Ft=Is(),bc=/^('|\")([^]*)\\1$/,yc=Ft(function(){},\"Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.\"),xc=Ft(function(){},\"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\"),wc=Ft(function(){},\"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");function Kn(e){var t=!1,n=null,r=e,i=r.match(bc);return i&&(n=i[1],r=i[2]),r=(0,pc.default)(r),r!==e&&(t=!0),{deprecatedUsage:t,unescaped:r,quoteMark:n}}function _c(e){if(e.quoteMark!==void 0||e.value===void 0)return e;wc();var t=Kn(e.value),n=t.quoteMark,r=t.unescaped;return e.raws||(e.raws={}),e.raws.value===void 0&&(e.raws.value=e.value),e.value=r,e.quoteMark=n,e}var Er=function(e){vc(t,e);function t(r){var i;return r===void 0&&(r={}),i=e.call(this,_c(r))||this,i.type=mc.ATTRIBUTE,i.raws=i.raws||{},Object.defineProperty(i.raws,\"unquoted\",{get:Ft(function(){return i.value},\"attr.raws.unquoted is deprecated. Call attr.value instead.\"),set:Ft(function(){return i.value},\"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")}),i._constructed=!0,i}var n=t.prototype;return n.getQuotedValue=function(i){i===void 0&&(i={});var s=this._determineQuoteMark(i),o=Xn[s],a=(0,Mt.default)(this._value,o);return a},n._determineQuoteMark=function(i){return i.smart?this.smartQuoteMark(i):this.preferredQuoteMark(i)},n.setValue=function(i,s){s===void 0&&(s={}),this._value=i,this._quoteMark=this._determineQuoteMark(s),this._syncRawValue()},n.smartQuoteMark=function(i){var s=this.value,o=s.replace(/[^']/g,\"\").length,a=s.replace(/[^\"]/g,\"\").length;if(o+a===0){var u=(0,Mt.default)(s,{isIdentifier:!0});if(u===s)return t.NO_QUOTE;var f=this.preferredQuoteMark(i);if(f===t.NO_QUOTE){var l=this.quoteMark||i.quoteMark||t.DOUBLE_QUOTE,p=Xn[l],y=(0,Mt.default)(s,p);if(y.length<u.length)return l}return f}else return a===o?this.preferredQuoteMark(i):a<o?t.DOUBLE_QUOTE:t.SINGLE_QUOTE},n.preferredQuoteMark=function(i){var s=i.preferCurrentQuoteMark?this.quoteMark:i.quoteMark;return s===void 0&&(s=i.preferCurrentQuoteMark?i.quoteMark:this.quoteMark),s===void 0&&(s=t.DOUBLE_QUOTE),s},n._syncRawValue=function(){var i=(0,Mt.default)(this._value,Xn[this.quoteMark]);i===this._value?this.raws&&delete this.raws.value:this.raws.value=i},n._handleEscapes=function(i,s){if(this._constructed){var o=(0,Mt.default)(s,{isIdentifier:!0});o!==s?this.raws[i]=o:delete this.raws[i]}},n._spacesFor=function(i){var s={before:\"\",after:\"\"},o=this.spaces[i]||{},a=this.raws.spaces&&this.raws.spaces[i]||{};return Object.assign(s,o,a)},n._stringFor=function(i,s,o){s===void 0&&(s=i),o===void 0&&(o=Cs);var a=this._spacesFor(s);return o(this.stringifyProperty(i),a)},n.offsetOf=function(i){var s=1,o=this._spacesFor(\"attribute\");if(s+=o.before.length,i===\"namespace\"||i===\"ns\")return this.namespace?s:-1;if(i===\"attributeNS\"||(s+=this.namespaceString.length,this.namespace&&(s+=1),i===\"attribute\"))return s;s+=this.stringifyProperty(\"attribute\").length,s+=o.after.length;var a=this._spacesFor(\"operator\");s+=a.before.length;var u=this.stringifyProperty(\"operator\");if(i===\"operator\")return u?s:-1;s+=u.length,s+=a.after.length;var f=this._spacesFor(\"value\");s+=f.before.length;var l=this.stringifyProperty(\"value\");if(i===\"value\")return l?s:-1;s+=l.length,s+=f.after.length;var p=this._spacesFor(\"insensitive\");return s+=p.before.length,i===\"insensitive\"&&this.insensitive?s:-1},n.toString=function(){var i=this,s=[this.rawSpaceBefore,\"[\"];return s.push(this._stringFor(\"qualifiedAttribute\",\"attribute\")),this.operator&&(this.value||this.value===\"\")&&(s.push(this._stringFor(\"operator\")),s.push(this._stringFor(\"value\")),s.push(this._stringFor(\"insensitiveFlag\",\"insensitive\",function(o,a){return o.length>0&&!i.quoted&&a.before.length===0&&!(i.spaces.value&&i.spaces.value.after)&&(a.before=\" \"),Cs(o,a)}))),s.push(\"]\"),s.push(this.rawSpaceAfter),s.join(\"\")},gc(t,[{key:\"quoted\",get:function(){var i=this.quoteMark;return i===\"'\"||i==='\"'},set:function(i){xc()}},{key:\"quoteMark\",get:function(){return this._quoteMark},set:function(i){if(!this._constructed){this._quoteMark=i;return}this._quoteMark!==i&&(this._quoteMark=i,this._syncRawValue())}},{key:\"qualifiedAttribute\",get:function(){return this.qualifiedName(this.raws.attribute||this.attribute)}},{key:\"insensitiveFlag\",get:function(){return this.insensitive?\"i\":\"\"}},{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var s=Kn(i),o=s.deprecatedUsage,a=s.unescaped,u=s.quoteMark;if(o&&yc(),a===this._value&&u===this._quoteMark)return;this._value=a,this._quoteMark=u,this._syncRawValue()}else this._value=i}},{key:\"attribute\",get:function(){return this._attribute},set:function(i){this._handleEscapes(\"attribute\",i),this._attribute=i}}]),t}(hc.default);Nt.default=Er;Er.NO_QUOTE=null;Er.SINGLE_QUOTE=\"'\";Er.DOUBLE_QUOTE='\"';var Xn=(Yn={\"'\":{quotes:\"single\",wrap:!0},'\"':{quotes:\"double\",wrap:!0}},Yn[null]={isIdentifier:!0},Yn);function Cs(e,t){return\"\"+t.before+e+t.after}});var ti=I(($t,Ds)=>{\"use strict\";c();$t.__esModule=!0;$t.default=void 0;var Sc=Tc(Or()),kc=oe();function Tc(e){return e&&e.__esModule?e:{default:e}}function Oc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ei(e,t)}function ei(e,t){return ei=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ei(e,t)}var Ec=function(e){Oc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=kc.UNIVERSAL,r.value=\"*\",r}return t}(Sc.default);$t.default=Ec;Ds.exports=$t.default});var ni=I((qt,Ms)=>{\"use strict\";c();qt.__esModule=!0;qt.default=void 0;var Pc=Rc(Le()),Ac=oe();function Rc(e){return e&&e.__esModule?e:{default:e}}function Ic(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ri(e,t)}function ri(e,t){return ri=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ri(e,t)}var Lc=function(e){Ic(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Ac.COMBINATOR,r}return t}(Pc.default);qt.default=Lc;Ms.exports=qt.default});var oi=I((Wt,Fs)=>{\"use strict\";c();Wt.__esModule=!0;Wt.default=void 0;var Cc=Mc(Le()),Dc=oe();function Mc(e){return e&&e.__esModule?e:{default:e}}function Fc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ii(e,t)}function ii(e,t){return ii=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ii(e,t)}var Nc=function(e){Fc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Dc.NESTING,r.value=\"&\",r}return t}(Cc.default);Wt.default=Nc;Fs.exports=Wt.default});var $s=I((Pr,Ns)=>{\"use strict\";c();Pr.__esModule=!0;Pr.default=$c;function $c(e){return e.sort(function(t,n){return t-n})}Ns.exports=Pr.default});var si=I(P=>{\"use strict\";c();P.__esModule=!0;P.combinator=P.word=P.comment=P.str=P.tab=P.newline=P.feed=P.cr=P.backslash=P.bang=P.slash=P.doubleQuote=P.singleQuote=P.space=P.greaterThan=P.pipe=P.equals=P.plus=P.caret=P.tilde=P.dollar=P.closeSquare=P.openSquare=P.closeParenthesis=P.openParenthesis=P.semicolon=P.colon=P.comma=P.at=P.asterisk=P.ampersand=void 0;var qc=38;P.ampersand=qc;var Wc=42;P.asterisk=Wc;var Bc=64;P.at=Bc;var Uc=44;P.comma=Uc;var zc=58;P.colon=zc;var Gc=59;P.semicolon=Gc;var Vc=40;P.openParenthesis=Vc;var Hc=41;P.closeParenthesis=Hc;var jc=91;P.openSquare=jc;var Yc=93;P.closeSquare=Yc;var Xc=36;P.dollar=Xc;var Qc=126;P.tilde=Qc;var Jc=94;P.caret=Jc;var Kc=43;P.plus=Kc;var Zc=61;P.equals=Zc;var ed=124;P.pipe=ed;var td=62;P.greaterThan=td;var rd=32;P.space=rd;var qs=39;P.singleQuote=qs;var nd=34;P.doubleQuote=nd;var id=47;P.slash=id;var od=33;P.bang=od;var sd=92;P.backslash=sd;var ad=13;P.cr=ad;var ud=12;P.feed=ud;var ld=10;P.newline=ld;var fd=9;P.tab=fd;var cd=qs;P.str=cd;var dd=-1;P.comment=dd;var pd=-2;P.word=pd;var hd=-3;P.combinator=hd});var Us=I(Bt=>{\"use strict\";c();Bt.__esModule=!0;Bt.default=wd;Bt.FIELDS=void 0;var T=md(si()),it,j;function Bs(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return Bs=function(){return e},e}function md(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=Bs();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}var gd=(it={},it[T.tab]=!0,it[T.newline]=!0,it[T.cr]=!0,it[T.feed]=!0,it),vd=(j={},j[T.space]=!0,j[T.tab]=!0,j[T.newline]=!0,j[T.cr]=!0,j[T.feed]=!0,j[T.ampersand]=!0,j[T.asterisk]=!0,j[T.bang]=!0,j[T.comma]=!0,j[T.colon]=!0,j[T.semicolon]=!0,j[T.openParenthesis]=!0,j[T.closeParenthesis]=!0,j[T.openSquare]=!0,j[T.closeSquare]=!0,j[T.singleQuote]=!0,j[T.doubleQuote]=!0,j[T.plus]=!0,j[T.pipe]=!0,j[T.tilde]=!0,j[T.greaterThan]=!0,j[T.equals]=!0,j[T.dollar]=!0,j[T.caret]=!0,j[T.slash]=!0,j),ai={},Ws=\"0123456789abcdefABCDEF\";for(Ar=0;Ar<Ws.length;Ar++)ai[Ws.charCodeAt(Ar)]=!0;var Ar;function bd(e,t){var n=t,r;do{if(r=e.charCodeAt(n),vd[r])return n-1;r===T.backslash?n=yd(e,n)+1:n++}while(n<e.length);return n-1}function yd(e,t){var n=t,r=e.charCodeAt(n+1);if(!gd[r])if(ai[r]){var i=0;do n++,i++,r=e.charCodeAt(n+1);while(ai[r]&&i<6);i<6&&r===T.space&&n++}else n++;return n}var xd={TYPE:0,START_LINE:1,START_COL:2,END_LINE:3,END_COL:4,START_POS:5,END_POS:6};Bt.FIELDS=xd;function wd(e){var t=[],n=e.css.valueOf(),r=n,i=r.length,s=-1,o=1,a=0,u=0,f,l,p,y,h,d,m,b,g,_,O,A,L;function N(C,D){if(e.safe)n+=D,g=n.length-1;else throw e.error(\"Unclosed \"+C,o,a-s,a)}for(;a<i;){switch(f=n.charCodeAt(a),f===T.newline&&(s=a,o+=1),f){case T.space:case T.tab:case T.newline:case T.cr:case T.feed:g=a;do g+=1,f=n.charCodeAt(g),f===T.newline&&(s=g,o+=1);while(f===T.space||f===T.newline||f===T.tab||f===T.cr||f===T.feed);L=T.space,y=o,p=g-s-1,u=g;break;case T.plus:case T.greaterThan:case T.tilde:case T.pipe:g=a;do g+=1,f=n.charCodeAt(g);while(f===T.plus||f===T.greaterThan||f===T.tilde||f===T.pipe);L=T.combinator,y=o,p=a-s,u=g;break;case T.asterisk:case T.ampersand:case T.bang:case T.comma:case T.equals:case T.dollar:case T.caret:case T.openSquare:case T.closeSquare:case T.colon:case T.semicolon:case T.openParenthesis:case T.closeParenthesis:g=a,L=f,y=o,p=a-s,u=g+1;break;case T.singleQuote:case T.doubleQuote:A=f===T.singleQuote?\"'\":'\"',g=a;do for(h=!1,g=n.indexOf(A,g+1),g===-1&&N(\"quote\",A),d=g;n.charCodeAt(d-1)===T.backslash;)d-=1,h=!h;while(h);L=T.str,y=o,p=a-s,u=g+1;break;default:f===T.slash&&n.charCodeAt(a+1)===T.asterisk?(g=n.indexOf(\"*/\",a+2)+1,g===0&&N(\"comment\",\"*/\"),l=n.slice(a,g+1),b=l.split(`\n`),m=b.length-1,m>0?(_=o+m,O=g-b[m].length):(_=o,O=s),L=T.comment,o=_,y=_,p=g-O):f===T.slash?(g=a,L=f,y=o,p=a-s,u=g+1):(g=bd(n,a),L=T.word,y=o,p=g-s),u=g+1;break}t.push([L,o,a-s,y,p,a,u]),O&&(s=O,O=null),a=u}return t}});var Qs=I((Ut,Xs)=>{\"use strict\";c();Ut.__esModule=!0;Ut.default=void 0;var _d=ye(In()),ui=ye(Cn()),Sd=ye(Fn()),zs=ye($n()),kd=ye(Wn()),Td=ye(zn()),li=ye(Vn()),Od=ye(jn()),Gs=Rr(Zn()),Ed=ye(ti()),fi=ye(ni()),Pd=ye(oi()),Ad=ye($s()),S=Rr(Us()),E=Rr(si()),Rd=Rr(oe()),J=St(),Xe,ci;function Ys(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return Ys=function(){return e},e}function Rr(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=Ys();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function ye(e){return e&&e.__esModule?e:{default:e}}function Vs(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Id(e,t,n){return t&&Vs(e.prototype,t),n&&Vs(e,n),e}var hi=(Xe={},Xe[E.space]=!0,Xe[E.cr]=!0,Xe[E.feed]=!0,Xe[E.newline]=!0,Xe[E.tab]=!0,Xe),Ld=Object.assign({},hi,(ci={},ci[E.comment]=!0,ci));function Hs(e){return{line:e[S.FIELDS.START_LINE],column:e[S.FIELDS.START_COL]}}function js(e){return{line:e[S.FIELDS.END_LINE],column:e[S.FIELDS.END_COL]}}function Qe(e,t,n,r){return{start:{line:e,column:t},end:{line:n,column:r}}}function ot(e){return Qe(e[S.FIELDS.START_LINE],e[S.FIELDS.START_COL],e[S.FIELDS.END_LINE],e[S.FIELDS.END_COL])}function di(e,t){if(!!e)return Qe(e[S.FIELDS.START_LINE],e[S.FIELDS.START_COL],t[S.FIELDS.END_LINE],t[S.FIELDS.END_COL])}function st(e,t){var n=e[t];if(typeof n==\"string\")return n.indexOf(\"\\\\\")!==-1&&((0,J.ensureObject)(e,\"raws\"),e[t]=(0,J.unesc)(n),e.raws[t]===void 0&&(e.raws[t]=n)),e}function pi(e,t){for(var n=-1,r=[];(n=e.indexOf(t,n+1))!==-1;)r.push(n);return r}function Cd(){var e=Array.prototype.concat.apply([],arguments);return e.filter(function(t,n){return n===e.indexOf(t)})}var Dd=function(){function e(n,r){r===void 0&&(r={}),this.rule=n,this.options=Object.assign({lossy:!1,safe:!1},r),this.position=0,this.css=typeof this.rule==\"string\"?this.rule:this.rule.selector,this.tokens=(0,S.default)({css:this.css,error:this._errorGenerator(),safe:this.options.safe});var i=di(this.tokens[0],this.tokens[this.tokens.length-1]);this.root=new _d.default({source:i}),this.root.errorGenerator=this._errorGenerator();var s=new ui.default({source:{start:{line:1,column:1}}});this.root.append(s),this.current=s,this.loop()}var t=e.prototype;return t._errorGenerator=function(){var r=this;return function(i,s){return typeof r.rule==\"string\"?new Error(i):r.rule.error(i,s)}},t.attribute=function(){var r=[],i=this.currToken;for(this.position++;this.position<this.tokens.length&&this.currToken[S.FIELDS.TYPE]!==E.closeSquare;)r.push(this.currToken),this.position++;if(this.currToken[S.FIELDS.TYPE]!==E.closeSquare)return this.expected(\"closing square bracket\",this.currToken[S.FIELDS.START_POS]);var s=r.length,o={source:Qe(i[1],i[2],this.currToken[3],this.currToken[4]),sourceIndex:i[S.FIELDS.START_POS]};if(s===1&&!~[E.word].indexOf(r[0][S.FIELDS.TYPE]))return this.expected(\"attribute\",r[0][S.FIELDS.START_POS]);for(var a=0,u=\"\",f=\"\",l=null,p=!1;a<s;){var y=r[a],h=this.content(y),d=r[a+1];switch(y[S.FIELDS.TYPE]){case E.space:if(p=!0,this.options.lossy)break;if(l){(0,J.ensureObject)(o,\"spaces\",l);var m=o.spaces[l].after||\"\";o.spaces[l].after=m+h;var b=(0,J.getProp)(o,\"raws\",\"spaces\",l,\"after\")||null;b&&(o.raws.spaces[l].after=b+h)}else u=u+h,f=f+h;break;case E.asterisk:if(d[S.FIELDS.TYPE]===E.equals)o.operator=h,l=\"operator\";else if((!o.namespace||l===\"namespace\"&&!p)&&d){u&&((0,J.ensureObject)(o,\"spaces\",\"attribute\"),o.spaces.attribute.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"attribute\"),o.raws.spaces.attribute.before=u,f=\"\"),o.namespace=(o.namespace||\"\")+h;var g=(0,J.getProp)(o,\"raws\",\"namespace\")||null;g&&(o.raws.namespace+=h),l=\"namespace\"}p=!1;break;case E.dollar:if(l===\"value\"){var _=(0,J.getProp)(o,\"raws\",\"value\");o.value+=\"$\",_&&(o.raws.value=_+\"$\");break}case E.caret:d[S.FIELDS.TYPE]===E.equals&&(o.operator=h,l=\"operator\"),p=!1;break;case E.combinator:if(h===\"~\"&&d[S.FIELDS.TYPE]===E.equals&&(o.operator=h,l=\"operator\"),h!==\"|\"){p=!1;break}d[S.FIELDS.TYPE]===E.equals?(o.operator=h,l=\"operator\"):!o.namespace&&!o.attribute&&(o.namespace=!0),p=!1;break;case E.word:if(d&&this.content(d)===\"|\"&&r[a+2]&&r[a+2][S.FIELDS.TYPE]!==E.equals&&!o.operator&&!o.namespace)o.namespace=h,l=\"namespace\";else if(!o.attribute||l===\"attribute\"&&!p){u&&((0,J.ensureObject)(o,\"spaces\",\"attribute\"),o.spaces.attribute.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"attribute\"),o.raws.spaces.attribute.before=f,f=\"\"),o.attribute=(o.attribute||\"\")+h;var O=(0,J.getProp)(o,\"raws\",\"attribute\")||null;O&&(o.raws.attribute+=h),l=\"attribute\"}else if(!o.value&&o.value!==\"\"||l===\"value\"&&!p){var A=(0,J.unesc)(h),L=(0,J.getProp)(o,\"raws\",\"value\")||\"\",N=o.value||\"\";o.value=N+A,o.quoteMark=null,(A!==h||L)&&((0,J.ensureObject)(o,\"raws\"),o.raws.value=(L||N)+h),l=\"value\"}else{var C=h===\"i\"||h===\"I\";(o.value||o.value===\"\")&&(o.quoteMark||p)?(o.insensitive=C,(!C||h===\"I\")&&((0,J.ensureObject)(o,\"raws\"),o.raws.insensitiveFlag=h),l=\"insensitive\",u&&((0,J.ensureObject)(o,\"spaces\",\"insensitive\"),o.spaces.insensitive.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"insensitive\"),o.raws.spaces.insensitive.before=f,f=\"\")):(o.value||o.value===\"\")&&(l=\"value\",o.value+=h,o.raws.value&&(o.raws.value+=h))}p=!1;break;case E.str:if(!o.attribute||!o.operator)return this.error(\"Expected an attribute followed by an operator preceding the string.\",{index:y[S.FIELDS.START_POS]});var D=(0,Gs.unescapeValue)(h),$=D.unescaped,z=D.quoteMark;o.value=$,o.quoteMark=z,l=\"value\",(0,J.ensureObject)(o,\"raws\"),o.raws.value=h,p=!1;break;case E.equals:if(!o.attribute)return this.expected(\"attribute\",y[S.FIELDS.START_POS],h);if(o.value)return this.error('Unexpected \"=\" found; an operator was already defined.',{index:y[S.FIELDS.START_POS]});o.operator=o.operator?o.operator+h:h,l=\"operator\",p=!1;break;case E.comment:if(l)if(p||d&&d[S.FIELDS.TYPE]===E.space||l===\"insensitive\"){var U=(0,J.getProp)(o,\"spaces\",l,\"after\")||\"\",M=(0,J.getProp)(o,\"raws\",\"spaces\",l,\"after\")||U;(0,J.ensureObject)(o,\"raws\",\"spaces\",l),o.raws.spaces[l].after=M+h}else{var q=o[l]||\"\",ee=(0,J.getProp)(o,\"raws\",l)||q;(0,J.ensureObject)(o,\"raws\"),o.raws[l]=ee+h}else f=f+h;break;default:return this.error('Unexpected \"'+h+'\" found.',{index:y[S.FIELDS.START_POS]})}a++}st(o,\"attribute\"),st(o,\"namespace\"),this.newNode(new Gs.default(o)),this.position++},t.parseWhitespaceEquivalentTokens=function(r){r<0&&(r=this.tokens.length);var i=this.position,s=[],o=\"\",a=void 0;do if(hi[this.currToken[S.FIELDS.TYPE]])this.options.lossy||(o+=this.content());else if(this.currToken[S.FIELDS.TYPE]===E.comment){var u={};o&&(u.before=o,o=\"\"),a=new zs.default({value:this.content(),source:ot(this.currToken),sourceIndex:this.currToken[S.FIELDS.START_POS],spaces:u}),s.push(a)}while(++this.position<r);if(o){if(a)a.spaces.after=o;else if(!this.options.lossy){var f=this.tokens[i],l=this.tokens[this.position-1];s.push(new li.default({value:\"\",source:Qe(f[S.FIELDS.START_LINE],f[S.FIELDS.START_COL],l[S.FIELDS.END_LINE],l[S.FIELDS.END_COL]),sourceIndex:f[S.FIELDS.START_POS],spaces:{before:o,after:\"\"}}))}}return s},t.convertWhitespaceNodesToSpace=function(r,i){var s=this;i===void 0&&(i=!1);var o=\"\",a=\"\";r.forEach(function(f){var l=s.lossySpace(f.spaces.before,i),p=s.lossySpace(f.rawSpaceBefore,i);o+=l+s.lossySpace(f.spaces.after,i&&l.length===0),a+=l+f.value+s.lossySpace(f.rawSpaceAfter,i&&p.length===0)}),a===o&&(a=void 0);var u={space:o,rawSpace:a};return u},t.isNamedCombinator=function(r){return r===void 0&&(r=this.position),this.tokens[r+0]&&this.tokens[r+0][S.FIELDS.TYPE]===E.slash&&this.tokens[r+1]&&this.tokens[r+1][S.FIELDS.TYPE]===E.word&&this.tokens[r+2]&&this.tokens[r+2][S.FIELDS.TYPE]===E.slash},t.namedCombinator=function(){if(this.isNamedCombinator()){var r=this.content(this.tokens[this.position+1]),i=(0,J.unesc)(r).toLowerCase(),s={};i!==r&&(s.value=\"/\"+r+\"/\");var o=new fi.default({value:\"/\"+i+\"/\",source:Qe(this.currToken[S.FIELDS.START_LINE],this.currToken[S.FIELDS.START_COL],this.tokens[this.position+2][S.FIELDS.END_LINE],this.tokens[this.position+2][S.FIELDS.END_COL]),sourceIndex:this.currToken[S.FIELDS.START_POS],raws:s});return this.position=this.position+3,o}else this.unexpected()},t.combinator=function(){var r=this;if(this.content()===\"|\")return this.namespace();var i=this.locateNextMeaningfulToken(this.position);if(i<0||this.tokens[i][S.FIELDS.TYPE]===E.comma){var s=this.parseWhitespaceEquivalentTokens(i);if(s.length>0){var o=this.current.last;if(o){var a=this.convertWhitespaceNodesToSpace(s),u=a.space,f=a.rawSpace;f!==void 0&&(o.rawSpaceAfter+=f),o.spaces.after+=u}else s.forEach(function(L){return r.newNode(L)})}return}var l=this.currToken,p=void 0;i>this.position&&(p=this.parseWhitespaceEquivalentTokens(i));var y;if(this.isNamedCombinator()?y=this.namedCombinator():this.currToken[S.FIELDS.TYPE]===E.combinator?(y=new fi.default({value:this.content(),source:ot(this.currToken),sourceIndex:this.currToken[S.FIELDS.START_POS]}),this.position++):hi[this.currToken[S.FIELDS.TYPE]]||p||this.unexpected(),y){if(p){var h=this.convertWhitespaceNodesToSpace(p),d=h.space,m=h.rawSpace;y.spaces.before=d,y.rawSpaceBefore=m}}else{var b=this.convertWhitespaceNodesToSpace(p,!0),g=b.space,_=b.rawSpace;_||(_=g);var O={},A={spaces:{}};g.endsWith(\" \")&&_.endsWith(\" \")?(O.before=g.slice(0,g.length-1),A.spaces.before=_.slice(0,_.length-1)):g.startsWith(\" \")&&_.startsWith(\" \")?(O.after=g.slice(1),A.spaces.after=_.slice(1)):A.value=_,y=new fi.default({value:\" \",source:di(l,this.tokens[this.position-1]),sourceIndex:l[S.FIELDS.START_POS],spaces:O,raws:A})}return this.currToken&&this.currToken[S.FIELDS.TYPE]===E.space&&(y.spaces.after=this.optionalSpace(this.content()),this.position++),this.newNode(y)},t.comma=function(){if(this.position===this.tokens.length-1){this.root.trailingComma=!0,this.position++;return}this.current._inferEndPosition();var r=new ui.default({source:{start:Hs(this.tokens[this.position+1])}});this.current.parent.append(r),this.current=r,this.position++},t.comment=function(){var r=this.currToken;this.newNode(new zs.default({value:this.content(),source:ot(r),sourceIndex:r[S.FIELDS.START_POS]})),this.position++},t.error=function(r,i){throw this.root.error(r,i)},t.missingBackslash=function(){return this.error(\"Expected a backslash preceding the semicolon.\",{index:this.currToken[S.FIELDS.START_POS]})},t.missingParenthesis=function(){return this.expected(\"opening parenthesis\",this.currToken[S.FIELDS.START_POS])},t.missingSquareBracket=function(){return this.expected(\"opening square bracket\",this.currToken[S.FIELDS.START_POS])},t.unexpected=function(){return this.error(\"Unexpected '\"+this.content()+\"'. Escaping special characters with \\\\ may help.\",this.currToken[S.FIELDS.START_POS])},t.namespace=function(){var r=this.prevToken&&this.content(this.prevToken)||!0;if(this.nextToken[S.FIELDS.TYPE]===E.word)return this.position++,this.word(r);if(this.nextToken[S.FIELDS.TYPE]===E.asterisk)return this.position++,this.universal(r)},t.nesting=function(){if(this.nextToken){var r=this.content(this.nextToken);if(r===\"|\"){this.position++;return}}var i=this.currToken;this.newNode(new Pd.default({value:this.content(),source:ot(i),sourceIndex:i[S.FIELDS.START_POS]})),this.position++},t.parentheses=function(){var r=this.current.last,i=1;if(this.position++,r&&r.type===Rd.PSEUDO){var s=new ui.default({source:{start:Hs(this.tokens[this.position-1])}}),o=this.current;for(r.append(s),this.current=s;this.position<this.tokens.length&&i;)this.currToken[S.FIELDS.TYPE]===E.openParenthesis&&i++,this.currToken[S.FIELDS.TYPE]===E.closeParenthesis&&i--,i?this.parse():(this.current.source.end=js(this.currToken),this.current.parent.source.end=js(this.currToken),this.position++);this.current=o}else{for(var a=this.currToken,u=\"(\",f;this.position<this.tokens.length&&i;)this.currToken[S.FIELDS.TYPE]===E.openParenthesis&&i++,this.currToken[S.FIELDS.TYPE]===E.closeParenthesis&&i--,f=this.currToken,u+=this.parseParenthesisToken(this.currToken),this.position++;r?r.appendToPropertyAndEscape(\"value\",u,u):this.newNode(new li.default({value:u,source:Qe(a[S.FIELDS.START_LINE],a[S.FIELDS.START_COL],f[S.FIELDS.END_LINE],f[S.FIELDS.END_COL]),sourceIndex:a[S.FIELDS.START_POS]}))}if(i)return this.expected(\"closing parenthesis\",this.currToken[S.FIELDS.START_POS])},t.pseudo=function(){for(var r=this,i=\"\",s=this.currToken;this.currToken&&this.currToken[S.FIELDS.TYPE]===E.colon;)i+=this.content(),this.position++;if(!this.currToken)return this.expected([\"pseudo-class\",\"pseudo-element\"],this.position-1);if(this.currToken[S.FIELDS.TYPE]===E.word)this.splitWord(!1,function(o,a){i+=o,r.newNode(new Od.default({value:i,source:di(s,r.currToken),sourceIndex:s[S.FIELDS.START_POS]})),a>1&&r.nextToken&&r.nextToken[S.FIELDS.TYPE]===E.openParenthesis&&r.error(\"Misplaced parenthesis.\",{index:r.nextToken[S.FIELDS.START_POS]})});else return this.expected([\"pseudo-class\",\"pseudo-element\"],this.currToken[S.FIELDS.START_POS])},t.space=function(){var r=this.content();this.position===0||this.prevToken[S.FIELDS.TYPE]===E.comma||this.prevToken[S.FIELDS.TYPE]===E.openParenthesis||this.current.nodes.every(function(i){return i.type===\"comment\"})?(this.spaces=this.optionalSpace(r),this.position++):this.position===this.tokens.length-1||this.nextToken[S.FIELDS.TYPE]===E.comma||this.nextToken[S.FIELDS.TYPE]===E.closeParenthesis?(this.current.last.spaces.after=this.optionalSpace(r),this.position++):this.combinator()},t.string=function(){var r=this.currToken;this.newNode(new li.default({value:this.content(),source:ot(r),sourceIndex:r[S.FIELDS.START_POS]})),this.position++},t.universal=function(r){var i=this.nextToken;if(i&&this.content(i)===\"|\")return this.position++,this.namespace();var s=this.currToken;this.newNode(new Ed.default({value:this.content(),source:ot(s),sourceIndex:s[S.FIELDS.START_POS]}),r),this.position++},t.splitWord=function(r,i){for(var s=this,o=this.nextToken,a=this.content();o&&~[E.dollar,E.caret,E.equals,E.word].indexOf(o[S.FIELDS.TYPE]);){this.position++;var u=this.content();if(a+=u,u.lastIndexOf(\"\\\\\")===u.length-1){var f=this.nextToken;f&&f[S.FIELDS.TYPE]===E.space&&(a+=this.requiredSpace(this.content(f)),this.position++)}o=this.nextToken}var l=pi(a,\".\").filter(function(d){var m=a[d-1]===\"\\\\\",b=/^\\d+\\.\\d+%$/.test(a);return!m&&!b}),p=pi(a,\"#\").filter(function(d){return a[d-1]!==\"\\\\\"}),y=pi(a,\"#{\");y.length&&(p=p.filter(function(d){return!~y.indexOf(d)}));var h=(0,Ad.default)(Cd([0].concat(l,p)));h.forEach(function(d,m){var b=h[m+1]||a.length,g=a.slice(d,b);if(m===0&&i)return i.call(s,g,h.length);var _,O=s.currToken,A=O[S.FIELDS.START_POS]+h[m],L=Qe(O[1],O[2]+d,O[3],O[2]+(b-1));if(~l.indexOf(d)){var N={value:g.slice(1),source:L,sourceIndex:A};_=new Sd.default(st(N,\"value\"))}else if(~p.indexOf(d)){var C={value:g.slice(1),source:L,sourceIndex:A};_=new kd.default(st(C,\"value\"))}else{var D={value:g,source:L,sourceIndex:A};st(D,\"value\"),_=new Td.default(D)}s.newNode(_,r),r=null}),this.position++},t.word=function(r){var i=this.nextToken;return i&&this.content(i)===\"|\"?(this.position++,this.namespace()):this.splitWord(r)},t.loop=function(){for(;this.position<this.tokens.length;)this.parse(!0);return this.current._inferEndPosition(),this.root},t.parse=function(r){switch(this.currToken[S.FIELDS.TYPE]){case E.space:this.space();break;case E.comment:this.comment();break;case E.openParenthesis:this.parentheses();break;case E.closeParenthesis:r&&this.missingParenthesis();break;case E.openSquare:this.attribute();break;case E.dollar:case E.caret:case E.equals:case E.word:this.word();break;case E.colon:this.pseudo();break;case E.comma:this.comma();break;case E.asterisk:this.universal();break;case E.ampersand:this.nesting();break;case E.slash:case E.combinator:this.combinator();break;case E.str:this.string();break;case E.closeSquare:this.missingSquareBracket();case E.semicolon:this.missingBackslash();default:this.unexpected()}},t.expected=function(r,i,s){if(Array.isArray(r)){var o=r.pop();r=r.join(\", \")+\" or \"+o}var a=/^[aeiou]/.test(r[0])?\"an\":\"a\";return s?this.error(\"Expected \"+a+\" \"+r+', found \"'+s+'\" instead.',{index:i}):this.error(\"Expected \"+a+\" \"+r+\".\",{index:i})},t.requiredSpace=function(r){return this.options.lossy?\" \":r},t.optionalSpace=function(r){return this.options.lossy?\"\":r},t.lossySpace=function(r,i){return this.options.lossy?i?\" \":\"\":r},t.parseParenthesisToken=function(r){var i=this.content(r);return r[S.FIELDS.TYPE]===E.space?this.requiredSpace(i):i},t.newNode=function(r,i){return i&&(/^ +$/.test(i)&&(this.options.lossy||(this.spaces=(this.spaces||\"\")+i),i=!0),r.namespace=i,st(r,\"namespace\")),this.spaces&&(r.spaces.before=this.spaces,this.spaces=\"\"),this.current.append(r)},t.content=function(r){return r===void 0&&(r=this.currToken),this.css.slice(r[S.FIELDS.START_POS],r[S.FIELDS.END_POS])},t.locateNextMeaningfulToken=function(r){r===void 0&&(r=this.position+1);for(var i=r;i<this.tokens.length;)if(Ld[this.tokens[i][S.FIELDS.TYPE]]){i++;continue}else return i;return-1},Id(e,[{key:\"currToken\",get:function(){return this.tokens[this.position]}},{key:\"nextToken\",get:function(){return this.tokens[this.position+1]}},{key:\"prevToken\",get:function(){return this.tokens[this.position-1]}}]),e}();Ut.default=Dd;Xs.exports=Ut.default});var Ks=I((zt,Js)=>{\"use strict\";c();zt.__esModule=!0;zt.default=void 0;var Md=Fd(Qs());function Fd(e){return e&&e.__esModule?e:{default:e}}var Nd=function(){function e(n,r){this.func=n||function(){},this.funcRes=null,this.options=r}var t=e.prototype;return t._shouldUpdateSelector=function(r,i){i===void 0&&(i={});var s=Object.assign({},this.options,i);return s.updateSelector===!1?!1:typeof r!=\"string\"},t._isLossy=function(r){r===void 0&&(r={});var i=Object.assign({},this.options,r);return i.lossless===!1},t._root=function(r,i){i===void 0&&(i={});var s=new Md.default(r,this._parseOptions(i));return s.root},t._parseOptions=function(r){return{lossy:this._isLossy(r)}},t._run=function(r,i){var s=this;return i===void 0&&(i={}),new Promise(function(o,a){try{var u=s._root(r,i);Promise.resolve(s.func(u)).then(function(f){var l=void 0;return s._shouldUpdateSelector(r,i)&&(l=u.toString(),r.selector=l),{transform:f,root:u,string:l}}).then(o,a)}catch(f){a(f);return}})},t._runSync=function(r,i){i===void 0&&(i={});var s=this._root(r,i),o=this.func(s);if(o&&typeof o.then==\"function\")throw new Error(\"Selector processor returned a promise to a synchronous call.\");var a=void 0;return i.updateSelector&&typeof r!=\"string\"&&(a=s.toString(),r.selector=a),{transform:o,root:s,string:a}},t.ast=function(r,i){return this._run(r,i).then(function(s){return s.root})},t.astSync=function(r,i){return this._runSync(r,i).root},t.transform=function(r,i){return this._run(r,i).then(function(s){return s.transform})},t.transformSync=function(r,i){return this._runSync(r,i).transform},t.process=function(r,i){return this._run(r,i).then(function(s){return s.string||s.root.toString()})},t.processSync=function(r,i){var s=this._runSync(r,i);return s.string||s.root.toString()},e}();zt.default=Nd;Js.exports=zt.default});var Zs=I(X=>{\"use strict\";c();X.__esModule=!0;X.universal=X.tag=X.string=X.selector=X.root=X.pseudo=X.nesting=X.id=X.comment=X.combinator=X.className=X.attribute=void 0;var $d=xe(Zn()),qd=xe(Fn()),Wd=xe(ni()),Bd=xe($n()),Ud=xe(Wn()),zd=xe(oi()),Gd=xe(jn()),Vd=xe(In()),Hd=xe(Cn()),jd=xe(Vn()),Yd=xe(zn()),Xd=xe(ti());function xe(e){return e&&e.__esModule?e:{default:e}}var Qd=function(t){return new $d.default(t)};X.attribute=Qd;var Jd=function(t){return new qd.default(t)};X.className=Jd;var Kd=function(t){return new Wd.default(t)};X.combinator=Kd;var Zd=function(t){return new Bd.default(t)};X.comment=Zd;var ep=function(t){return new Ud.default(t)};X.id=ep;var tp=function(t){return new zd.default(t)};X.nesting=tp;var rp=function(t){return new Gd.default(t)};X.pseudo=rp;var np=function(t){return new Vd.default(t)};X.root=np;var ip=function(t){return new Hd.default(t)};X.selector=ip;var op=function(t){return new jd.default(t)};X.string=op;var sp=function(t){return new Yd.default(t)};X.tag=sp;var ap=function(t){return new Xd.default(t)};X.universal=ap});var na=I(W=>{\"use strict\";c();W.__esModule=!0;W.isNode=mi;W.isPseudoElement=ra;W.isPseudoClass=bp;W.isContainer=yp;W.isNamespace=xp;W.isUniversal=W.isTag=W.isString=W.isSelector=W.isRoot=W.isPseudo=W.isNesting=W.isIdentifier=W.isComment=W.isCombinator=W.isClassName=W.isAttribute=void 0;var K=oe(),de,up=(de={},de[K.ATTRIBUTE]=!0,de[K.CLASS]=!0,de[K.COMBINATOR]=!0,de[K.COMMENT]=!0,de[K.ID]=!0,de[K.NESTING]=!0,de[K.PSEUDO]=!0,de[K.ROOT]=!0,de[K.SELECTOR]=!0,de[K.STRING]=!0,de[K.TAG]=!0,de[K.UNIVERSAL]=!0,de);function mi(e){return typeof e==\"object\"&&up[e.type]}function we(e,t){return mi(t)&&t.type===e}var ea=we.bind(null,K.ATTRIBUTE);W.isAttribute=ea;var lp=we.bind(null,K.CLASS);W.isClassName=lp;var fp=we.bind(null,K.COMBINATOR);W.isCombinator=fp;var cp=we.bind(null,K.COMMENT);W.isComment=cp;var dp=we.bind(null,K.ID);W.isIdentifier=dp;var pp=we.bind(null,K.NESTING);W.isNesting=pp;var gi=we.bind(null,K.PSEUDO);W.isPseudo=gi;var hp=we.bind(null,K.ROOT);W.isRoot=hp;var mp=we.bind(null,K.SELECTOR);W.isSelector=mp;var gp=we.bind(null,K.STRING);W.isString=gp;var ta=we.bind(null,K.TAG);W.isTag=ta;var vp=we.bind(null,K.UNIVERSAL);W.isUniversal=vp;function ra(e){return gi(e)&&e.value&&(e.value.startsWith(\"::\")||e.value.toLowerCase()===\":before\"||e.value.toLowerCase()===\":after\"||e.value.toLowerCase()===\":first-letter\"||e.value.toLowerCase()===\":first-line\")}function bp(e){return gi(e)&&!ra(e)}function yp(e){return!!(mi(e)&&e.walk)}function xp(e){return ea(e)||ta(e)}});var ia=I(Te=>{\"use strict\";c();Te.__esModule=!0;var vi=oe();Object.keys(vi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===vi[e]||(Te[e]=vi[e])});var bi=Zs();Object.keys(bi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===bi[e]||(Te[e]=bi[e])});var yi=na();Object.keys(yi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===yi[e]||(Te[e]=yi[e])})});var aa=I((Gt,sa)=>{\"use strict\";c();Gt.__esModule=!0;Gt.default=void 0;var wp=kp(Ks()),_p=Sp(ia());function oa(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return oa=function(){return e},e}function Sp(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=oa();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function kp(e){return e&&e.__esModule?e:{default:e}}var xi=function(t){return new wp.default(t)};Object.assign(xi,_p);delete xi.__esModule;var Tp=xi;Gt.default=Tp;sa.exports=Gt.default});var ua=I(wi=>{\"use strict\";c();Object.defineProperty(wi,\"__esModule\",{value:!0});Object.defineProperty(wi,\"default\",{enumerable:!0,get:()=>Op});function Op(e){return e.replace(/\\\\,/g,\"\\\\2c \")}});var fa=I((bg,la)=>{\"use strict\";c();la.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}});var Si=I(_i=>{\"use strict\";c();Object.defineProperty(_i,\"__esModule\",{value:!0});function Ep(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Ep(_i,{parseColor:()=>Cp,formatColor:()=>Dp});var ca=Pp(fa());function Pp(e){return e&&e.__esModule?e:{default:e}}var Ap=/^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,Rp=/^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,Be=/(?:\\d+|\\d*\\.\\d+)%?/,Ir=/(?:\\s*,\\s*|\\s+)/,da=/\\s*[,/]\\s*/,Ue=/var\\(--(?:[^ )]*?)\\)/,Ip=new RegExp(`^(rgb)a?\\\\(\\\\s*(${Be.source}|${Ue.source})(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${da.source}(${Be.source}|${Ue.source}))?\\\\s*\\\\)$`),Lp=new RegExp(`^(hsl)a?\\\\(\\\\s*((?:${Be.source})(?:deg|rad|grad|turn)?|${Ue.source})(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${da.source}(${Be.source}|${Ue.source}))?\\\\s*\\\\)$`);function Cp(e,{loose:t=!1}={}){var n,r;if(typeof e!=\"string\")return null;if(e=e.trim(),e===\"transparent\")return{mode:\"rgb\",color:[\"0\",\"0\",\"0\"],alpha:\"0\"};if(e in ca.default)return{mode:\"rgb\",color:ca.default[e].map(u=>u.toString())};let i=e.replace(Rp,(u,f,l,p,y)=>[\"#\",f,f,l,l,p,p,y?y+y:\"\"].join(\"\")).match(Ap);if(i!==null)return{mode:\"rgb\",color:[parseInt(i[1],16),parseInt(i[2],16),parseInt(i[3],16)].map(u=>u.toString()),alpha:i[4]?(parseInt(i[4],16)/255).toString():void 0};var s;let o=(s=e.match(Ip))!==null&&s!==void 0?s:e.match(Lp);if(o===null)return null;let a=[o[2],o[3],o[4]].filter(Boolean).map(u=>u.toString());return!t&&a.length!==3||a.length<3&&!a.some(u=>/^var\\(.*?\\)$/.test(u))?null:{mode:o[1],color:a,alpha:(n=o[5])===null||n===void 0||(r=n.toString)===null||r===void 0?void 0:r.call(n)}}function Dp({mode:e,color:t,alpha:n}){let r=n!==void 0;return`${e}(${t.join(\" \")}${r?` / ${n}`:\"\"})`}});var Ti=I(ki=>{\"use strict\";c();Object.defineProperty(ki,\"__esModule\",{value:!0});function Mp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Mp(ki,{withAlphaValue:()=>Fp,default:()=>Np});var Lr=Si();function Fp(e,t,n){if(typeof e==\"function\")return e({opacityValue:t});let r=(0,Lr.parseColor)(e,{loose:!0});return r===null?n:(0,Lr.formatColor)({...r,alpha:t})}function Np({color:e,property:t,variable:n}){let r=[].concat(t);if(typeof e==\"function\")return{[n]:\"1\",...Object.fromEntries(r.map(s=>[s,e({opacityVariable:n,opacityValue:`var(${n})`})]))};let i=(0,Lr.parseColor)(e);return i===null?Object.fromEntries(r.map(s=>[s,e])):i.alpha!==void 0?Object.fromEntries(r.map(s=>[s,e])):{[n]:\"1\",...Object.fromEntries(r.map(s=>[s,(0,Lr.formatColor)({...i,alpha:`var(${n})`})]))}}});var va=I(Oi=>{\"use strict\";c();Object.defineProperty(Oi,\"__esModule\",{value:!0});function $p(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}$p(Oi,{pattern:()=>Wp,withoutCapturing:()=>ha,any:()=>ma,optional:()=>Bp,zeroOrMore:()=>Up,nestedBrackets:()=>ga,escape:()=>Je});var pa=/[\\\\^$.*+?()[\\]{}|]/g,qp=RegExp(pa.source);function Vt(e){return e=Array.isArray(e)?e:[e],e=e.map(t=>t instanceof RegExp?t.source:t),e.join(\"\")}function Wp(e){return new RegExp(Vt(e),\"g\")}function ha(e){return new RegExp(`(?:${Vt(e)})`,\"g\")}function ma(e){return`(?:${e.map(Vt).join(\"|\")})`}function Bp(e){return`(?:${Vt(e)})?`}function Up(e){return`(?:${Vt(e)})*`}function ga(e,t,n=1){return ha([Je(e),/[^\\s]*/,n===1?`[^${Je(e)}${Je(t)}s]*`:ma([`[^${Je(e)}${Je(t)}s]*`,ga(e,t,n-1)]),/[^\\s]*/,Je(t)])}function Je(e){return e&&qp.test(e)?e.replace(pa,\"\\\\$&\"):e||\"\"}});var ya=I(Ei=>{\"use strict\";c();Object.defineProperty(Ei,\"__esModule\",{value:!0});Object.defineProperty(Ei,\"splitAtTopLevelOnly\",{enumerable:!0,get:()=>Vp});var zp=Gp(va());function ba(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,n=new WeakMap;return(ba=function(r){return r?n:t})(e)}function Gp(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var n=ba(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(s!==\"default\"&&Object.prototype.hasOwnProperty.call(e,s)){var o=i?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}function*Vp(e,t){let n=new RegExp(`[(){}\\\\[\\\\]${zp.escape(t)}]`,\"g\"),r=0,i=0,s=!1,o=0,a=0,u=t.length;for(let f of e.matchAll(n)){let l=f[0]===t[o],p=o===u-1,y=l&&p;f[0]===\"(\"&&r++,f[0]===\")\"&&r--,f[0]===\"[\"&&r++,f[0]===\"]\"&&r--,f[0]===\"{\"&&r++,f[0]===\"}\"&&r--,l&&r===0&&(a===0&&(a=f.index),o++),y&&r===0&&(s=!0,yield e.substring(i,a),i=a+u),o===u&&(o=0,a=0)}s?yield e.substring(i):yield e}});var wa=I(Pi=>{\"use strict\";c();Object.defineProperty(Pi,\"__esModule\",{value:!0});function Hp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Hp(Pi,{parseBoxShadowValue:()=>Qp,formatBoxShadowValue:()=>Jp});var jp=ya(),Yp=new Set([\"inset\",\"inherit\",\"initial\",\"revert\",\"unset\"]),Xp=/\\ +(?![^(]*\\))/g,xa=/^-?(\\d+|\\.\\d+)(.*?)$/g;function Qp(e){return Array.from((0,jp.splitAtTopLevelOnly)(e,\",\")).map(n=>{let r=n.trim(),i={raw:r},s=r.split(Xp),o=new Set;for(let a of s)xa.lastIndex=0,!o.has(\"KEYWORD\")&&Yp.has(a)?(i.keyword=a,o.add(\"KEYWORD\")):xa.test(a)?o.has(\"X\")?o.has(\"Y\")?o.has(\"BLUR\")?o.has(\"SPREAD\")||(i.spread=a,o.add(\"SPREAD\")):(i.blur=a,o.add(\"BLUR\")):(i.y=a,o.add(\"Y\")):(i.x=a,o.add(\"X\")):i.color?(i.unknown||(i.unknown=[]),i.unknown.push(a)):i.color=a;return i.valid=i.x!==void 0&&i.y!==void 0,i})}function Jp(e){return e.map(t=>t.valid?[t.keyword,t.x,t.y,t.blur,t.spread,t.color].filter(Boolean).join(\" \"):t.raw).join(\", \")}});var Pa=I(Ri=>{\"use strict\";c();Object.defineProperty(Ri,\"__esModule\",{value:!0});function Kp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Kp(Ri,{normalize:()=>ze,url:()=>ka,number:()=>th,percentage:()=>Ta,length:()=>Oa,lineWidth:()=>ih,shadow:()=>oh,color:()=>sh,image:()=>ah,gradient:()=>Ea,position:()=>fh,familyName:()=>ch,genericName:()=>ph,absoluteSize:()=>mh,relativeSize:()=>vh});var Zp=Si(),eh=wa(),Ai=[\"min\",\"max\",\"clamp\",\"calc\"],Sa=/,(?![^(]*\\))/g,Cr=/_(?![^(]*\\))/g;function ze(e,t=!0){return e.includes(\"url(\")?e.split(/(url\\(.*?\\))/g).filter(Boolean).map(n=>/^url\\(.*?\\)$/.test(n)?n:ze(n,!1)).join(\"\"):(e=e.replace(/([^\\\\])_+/g,(n,r)=>r+\" \".repeat(n.length-1)).replace(/^_/g,\" \").replace(/\\\\_/g,\"_\"),t&&(e=e.trim()),e=e.replace(/(calc|min|max|clamp)\\(.+\\)/g,n=>n.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g,\"$1 $2 \")),e)}function ka(e){return e.startsWith(\"url(\")}function th(e){return!isNaN(Number(e))||Ai.some(t=>new RegExp(`^${t}\\\\(.+?`).test(e))}function Ta(e){return e.split(Cr).every(t=>/%$/g.test(t)||Ai.some(n=>new RegExp(`^${n}\\\\(.+?%`).test(t)))}var rh=[\"cm\",\"mm\",\"Q\",\"in\",\"pc\",\"pt\",\"px\",\"em\",\"ex\",\"ch\",\"rem\",\"lh\",\"vw\",\"vh\",\"vmin\",\"vmax\"],_a=`(?:${rh.join(\"|\")})`;function Oa(e){return e.split(Cr).every(t=>t===\"0\"||new RegExp(`${_a}$`).test(t)||Ai.some(n=>new RegExp(`^${n}\\\\(.+?${_a}`).test(t)))}var nh=new Set([\"thin\",\"medium\",\"thick\"]);function ih(e){return nh.has(e)}function oh(e){let t=(0,eh.parseBoxShadowValue)(ze(e));for(let n of t)if(!n.valid)return!1;return!0}function sh(e){let t=0;return e.split(Cr).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:(0,Zp.parseColor)(r,{loose:!0})!==null?(t++,!0):!1))?t>0:!1}function ah(e){let t=0;return e.split(Sa).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:ka(r)||Ea(r)||[\"element(\",\"image(\",\"cross-fade(\",\"image-set(\"].some(i=>r.startsWith(i))?(t++,!0):!1))?t>0:!1}var uh=new Set([\"linear-gradient\",\"radial-gradient\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"conic-gradient\"]);function Ea(e){e=ze(e);for(let t of uh)if(e.startsWith(`${t}(`))return!0;return!1}var lh=new Set([\"center\",\"top\",\"right\",\"bottom\",\"left\"]);function fh(e){let t=0;return e.split(Cr).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:lh.has(r)||Oa(r)||Ta(r)?(t++,!0):!1))?t>0:!1}function ch(e){let t=0;return e.split(Sa).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:r.includes(\" \")&&!/(['\"])([^\"']+)\\1/g.test(r)||/^\\d/g.test(r)?!1:(t++,!0)))?t>0:!1}var dh=new Set([\"serif\",\"sans-serif\",\"monospace\",\"cursive\",\"fantasy\",\"system-ui\",\"ui-serif\",\"ui-sans-serif\",\"ui-monospace\",\"ui-rounded\",\"math\",\"emoji\",\"fangsong\"]);function ph(e){return dh.has(e)}var hh=new Set([\"xx-small\",\"x-small\",\"small\",\"medium\",\"large\",\"x-large\",\"x-large\",\"xxx-large\"]);function mh(e){return hh.has(e)}var gh=new Set([\"larger\",\"smaller\"]);function vh(e){return gh.has(e)}});var Fa=I(Ci=>{\"use strict\";c();Object.defineProperty(Ci,\"__esModule\",{value:!0});function bh(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}bh(Ci,{updateAllClasses:()=>wh,asValue:()=>jt,parseColorFormat:()=>Ii,asColor:()=>Ca,asLookupValue:()=>Da,coerceValue:()=>Th});var yh=Li(aa()),xh=Li(ua()),Aa=Ti(),pe=Pa(),Ra=Li(vn());function Li(e){return e&&e.__esModule?e:{default:e}}function wh(e,t){return(0,yh.default)(i=>{i.walkClasses(s=>{let o=t(s.value);s.value=o,s.raws&&s.raws.value&&(s.raws.value=(0,xh.default)(s.raws.value))})}).processSync(e)}function La(e,t){if(!Ht(e))return;let n=e.slice(1,-1);if(!!t(n))return(0,pe.normalize)(n)}function _h(e,t={},n){let r=t[e];if(r!==void 0)return(0,Ra.default)(r);if(Ht(e)){let i=La(e,n);return i===void 0?void 0:(0,Ra.default)(i)}}function jt(e,t={},{validate:n=()=>!0}={}){var r;let i=(r=t.values)===null||r===void 0?void 0:r[e];return i!==void 0?i:t.supportsNegativeValues&&e.startsWith(\"-\")?_h(e.slice(1),t.values,n):La(e,n)}function Ht(e){return e.startsWith(\"[\")&&e.endsWith(\"]\")}function Sh(e){let t=e.lastIndexOf(\"/\");return t===-1||t===e.length-1?[e]:[e.slice(0,t),e.slice(t+1)]}function Ii(e){if(typeof e==\"string\"&&e.includes(\"<alpha-value>\")){let t=e;return({opacityValue:n=1})=>t.replace(\"<alpha-value>\",n)}return e}function Ca(e,t={},{tailwindConfig:n={}}={}){var r;if(((r=t.values)===null||r===void 0?void 0:r[e])!==void 0){var i;return Ii((i=t.values)===null||i===void 0?void 0:i[e])}let[s,o]=Sh(e);if(o!==void 0){var a,u,f,l;let p=(l=(a=t.values)===null||a===void 0?void 0:a[s])!==null&&l!==void 0?l:Ht(s)?s.slice(1,-1):void 0;return p===void 0?void 0:(p=Ii(p),Ht(o)?(0,Aa.withAlphaValue)(p,o.slice(1,-1)):((u=n.theme)===null||u===void 0||(f=u.opacity)===null||f===void 0?void 0:f[o])===void 0?void 0:(0,Aa.withAlphaValue)(p,n.theme.opacity[o]))}return jt(e,t,{validate:pe.color})}function Da(e,t={}){var n;return(n=t.values)===null||n===void 0?void 0:n[e]}function _e(e){return(t,n)=>jt(t,n,{validate:e})}var Ma={any:jt,color:Ca,url:_e(pe.url),image:_e(pe.image),length:_e(pe.length),percentage:_e(pe.percentage),position:_e(pe.position),lookup:Da,\"generic-name\":_e(pe.genericName),\"family-name\":_e(pe.familyName),number:_e(pe.number),\"line-width\":_e(pe.lineWidth),\"absolute-size\":_e(pe.absoluteSize),\"relative-size\":_e(pe.relativeSize),shadow:_e(pe.shadow)},Ia=Object.keys(Ma);function kh(e,t){let n=e.indexOf(t);return n===-1?[void 0,e]:[e.slice(0,n),e.slice(n+1)]}function Th(e,t,n,r){if(Ht(t)){let i=t.slice(1,-1),[s,o]=kh(i,\":\");if(!/^[\\w-_]+$/g.test(s))o=i;else if(s!==void 0&&!Ia.includes(s))return[];if(o.length>0&&Ia.includes(s))return[jt(`[${o}]`,n),s]}for(let i of[].concat(e)){let s=Ma[i](t,n,{tailwindConfig:r});if(s!==void 0)return[s,i]}return[]}});var Na=I(Di=>{\"use strict\";c();Object.defineProperty(Di,\"__esModule\",{value:!0});Object.defineProperty(Di,\"default\",{enumerable:!0,get:()=>Oh});function Oh(e){return typeof e==\"function\"?e({}):e}});var Ua=I(Fi=>{\"use strict\";c();Object.defineProperty(Fi,\"__esModule\",{value:!0});Object.defineProperty(Fi,\"default\",{enumerable:!0,get:()=>Hh});var Eh=Ke(vn()),Ph=Ke(Vo()),Ah=Ke(Ho()),Rh=Ke(xn()),Ih=Ke(Yo()),Wa=Xo(),$a=Qo(),Lh=Ko(),Ch=Ke(Zo()),Dh=es(),Mh=Fa(),Fh=Ti(),Nh=Ke(Na());function Ke(e){return e&&e.__esModule?e:{default:e}}function at(e){return typeof e==\"function\"}function Yt(e){return typeof e==\"object\"&&e!==null}function Xt(e,...t){let n=t.pop();for(let r of t)for(let i in r){let s=n(e[i],r[i]);s===void 0?Yt(e[i])&&Yt(r[i])?e[i]=Xt(e[i],r[i],n):e[i]=r[i]:e[i]=s}return e}var Mi={colors:Ih.default,negative(e){return Object.keys(e).filter(t=>e[t]!==\"0\").reduce((t,n)=>{let r=(0,Eh.default)(e[n]);return r!==void 0&&(t[`-${n}`]=r),t},{})},breakpoints(e){return Object.keys(e).filter(t=>typeof e[t]==\"string\").reduce((t,n)=>({...t,[`screen-${n}`]:e[n]}),{})}};function $h(e,...t){return at(e)?e(...t):e}function qh(e){return e.reduce((t,{extend:n})=>Xt(t,n,(r,i)=>r===void 0?[i]:Array.isArray(r)?[i,...r]:[i,r]),{})}function Wh(e){return{...e.reduce((t,n)=>(0,Wa.defaults)(t,n),{}),extend:qh(e)}}function qa(e,t){if(Array.isArray(e)&&Yt(e[0]))return e.concat(t);if(Array.isArray(t)&&Yt(t[0])&&Yt(e))return[e,...t];if(Array.isArray(t))return t}function Bh({extend:e,...t}){return Xt(t,e,(n,r)=>!at(n)&&!r.some(at)?Xt({},n,...r,qa):(i,s)=>Xt({},...[n,...r].map(o=>$h(o,i,s)),qa))}function*Uh(e){let t=(0,$a.toPath)(e);if(t.length===0||(yield t,Array.isArray(e)))return;let n=/^(.*?)\\s*\\/\\s*([^/]+)$/,r=e.match(n);if(r!==null){let[,i,s]=r,o=(0,$a.toPath)(i);o.alpha=s,yield o}}function zh(e){let t=(n,r)=>{for(let i of Uh(n)){let s=0,o=e;for(;o!=null&&s<i.length;)o=o[i[s++]],o=at(o)&&(i.alpha===void 0||s<=i.length-1)?o(t,Mi):o;if(o!==void 0){if(i.alpha!==void 0){let a=(0,Mh.parseColorFormat)(o);return(0,Fh.withAlphaValue)(a,i.alpha,(0,Nh.default)(a))}return(0,Ch.default)(o)?(0,Dh.cloneDeep)(o):o}}return r};return Object.assign(t,{theme:t,...Mi}),Object.keys(e).reduce((n,r)=>(n[r]=at(e[r])?e[r](t,Mi):e[r],n),{})}function Ba(e){let t=[];return e.forEach(n=>{t=[...t,n];var r;let i=(r=n==null?void 0:n.plugins)!==null&&r!==void 0?r:[];i.length!==0&&i.forEach(s=>{s.__isOptionsFunction&&(s=s());var o;t=[...t,...Ba([(o=s==null?void 0:s.config)!==null&&o!==void 0?o:{}])]})}),t}function Gh(e){return[...e].reduceRight((n,r)=>at(r)?r({corePlugins:n}):(0,Ah.default)(r,n),Ph.default)}function Vh(e){return[...e].reduceRight((n,r)=>[...n,...r],[])}function Hh(e){let t=[...Ba(e),{prefix:\"\",important:!1,separator:\":\",variantOrder:Rh.default.variantOrder}];var n,r;return(0,Lh.normalizeConfig)((0,Wa.defaults)({theme:zh(Bh(Wh(t.map(i=>(n=i==null?void 0:i.theme)!==null&&n!==void 0?n:{})))),corePlugins:Gh(t.map(i=>i.corePlugins)),plugins:Vh(e.map(i=>(r=i==null?void 0:i.plugins)!==null&&r!==void 0?r:[]))},...t))}});var za={};go(za,{default:()=>jh});var jh,Ga=Wr(()=>{c();jh={yellow:e=>e}});var Ya=I(Ni=>{\"use strict\";c();Object.defineProperty(Ni,\"__esModule\",{value:!0});function Yh(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Yh(Ni,{flagEnabled:()=>Jh,issueFlagNotices:()=>Kh,default:()=>Zh});var Xh=ja((Ga(),lr(za))),Qh=ja((br(),lr(vr)));function ja(e){return e&&e.__esModule?e:{default:e}}var Va={optimizeUniversalDefaults:!1},Qt={future:[\"hoverOnlyWhenSupported\",\"respectDefaultRingColorOpacity\"],experimental:[\"optimizeUniversalDefaults\",\"matchVariant\"]};function Jh(e,t){if(Qt.future.includes(t)){var n,r,i;return e.future===\"all\"||((i=(r=e==null||(n=e.future)===null||n===void 0?void 0:n[t])!==null&&r!==void 0?r:Va[t])!==null&&i!==void 0?i:!1)}if(Qt.experimental.includes(t)){var s,o,a;return e.experimental===\"all\"||((a=(o=e==null||(s=e.experimental)===null||s===void 0?void 0:s[t])!==null&&o!==void 0?o:Va[t])!==null&&a!==void 0?a:!1)}return!1}function Ha(e){if(e.experimental===\"all\")return Qt.experimental;var t;return Object.keys((t=e==null?void 0:e.experimental)!==null&&t!==void 0?t:{}).filter(n=>Qt.experimental.includes(n)&&e.experimental[n])}function Kh(e){if(process.env.JEST_WORKER_ID===void 0&&Ha(e).length>0){let t=Ha(e).map(n=>Xh.default.yellow(n)).join(\", \");Qh.default.warn(\"experimental-flags-enabled\",[`You have enabled experimental features: ${t}`,\"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"])}}var Zh=Qt});var Qa=I($i=>{\"use strict\";c();Object.defineProperty($i,\"__esModule\",{value:!0});Object.defineProperty($i,\"default\",{enumerable:!0,get:()=>Xa});var e0=r0(xn()),t0=Ya();function r0(e){return e&&e.__esModule?e:{default:e}}function Xa(e){var t;let n=((t=e==null?void 0:e.presets)!==null&&t!==void 0?t:[e0.default]).slice().reverse().flatMap(s=>Xa(typeof s==\"function\"?s():s)),r={respectDefaultRingColorOpacity:{theme:{ringColor:{DEFAULT:\"#3b82f67f\"}}}},i=Object.keys(r).filter(s=>(0,t0.flagEnabled)(e,s)).map(s=>r[s]);return[e,...i,...n]}});var Ka=I(qi=>{\"use strict\";c();Object.defineProperty(qi,\"__esModule\",{value:!0});Object.defineProperty(qi,\"default\",{enumerable:!0,get:()=>o0});var n0=Ja(Ua()),i0=Ja(Qa());function Ja(e){return e&&e.__esModule?e:{default:e}}function o0(...e){let[,...t]=(0,i0.default)(e[0]);return(0,n0.default)([...e,...t])}});var eu=I((Ig,Za)=>{c();var Wi=Ka();Za.exports=(Wi.__esModule?Wi:{default:Wi}).default});c();c();c();c();var bo={};var Br;Br=bo.default;function Du(e){Br=e}function Ie(){return Br}c();c();c();var dt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Mu=dt((e,t)=>{t.exports=[\"em\",\"ex\",\"ch\",\"rem\",\"vh\",\"vw\",\"vmin\",\"vmax\",\"px\",\"mm\",\"cm\",\"in\",\"pt\",\"pc\",\"mozmm\"]}),Fu=dt((e,t)=>{t.exports=[\"deg\",\"grad\",\"rad\",\"turn\"]}),Nu=dt((e,t)=>{t.exports=[\"dpi\",\"dpcm\",\"dppx\"]}),$u=dt((e,t)=>{t.exports=[\"Hz\",\"kHz\"]}),qu=dt((e,t)=>{t.exports=[\"s\",\"ms\"]}),Wu=Mu(),yo=Fu(),xo=Nu(),wo=$u(),_o=qu();function zr(e){if(/\\.\\D?$/.test(e))throw new Error(\"The dot should be followed by a number\");if(/^[+-]{2}/.test(e))throw new Error(\"Only one leading +/- is allowed\");if(Bu(e)>1)throw new Error(\"Only one dot is allowed\");if(/%$/.test(e)){this.type=\"percentage\",this.value=Ur(e),this.unit=\"%\";return}var t=zu(e);if(!t){this.type=\"number\",this.value=Ur(e);return}this.type=Vu(t),this.value=Ur(e.substr(0,e.length-t.length)),this.unit=t}zr.prototype.valueOf=function(){return this.value};zr.prototype.toString=function(){return this.value+(this.unit||\"\")};function We(e){return new zr(e)}function Bu(e){var t=e.match(/\\./g);return t?t.length:0}function Ur(e){var t=parseFloat(e);if(isNaN(t))throw new Error(\"Invalid number: \"+e);return t}var Uu=[].concat(yo,wo,Wu,xo,_o);function zu(e){var t=e.match(/\\D+$/),n=t&&t[0];if(n&&Uu.indexOf(n)===-1)throw new Error(\"Invalid unit: \"+n);return n}var Gu=Object.assign(fr(yo,\"angle\"),fr(wo,\"frequency\"),fr(xo,\"resolution\"),fr(_o,\"time\"));function fr(e,t){return Object.fromEntries(e.map(n=>[n,t]))}function Vu(e){return Gu[e]||\"length\"}function jr(e){let t=typeof e;return!(t===\"number\"||t===\"bigint\"||t===\"string\"||t===\"boolean\")}function ko(e){return/^class\\s/.test(e.toString())}function To(e){return\"dangerouslySetInnerHTML\"in e}function Oo(e){let t=typeof e>\"u\"?[]:[].concat(e).flat(1/0),n=[];for(let r=0;r<t.length;r++){let i=t[r];typeof i>\"u\"||typeof i==\"boolean\"||i===null||(typeof i==\"number\"&&(i=String(i)),typeof i==\"string\"&&n.length&&typeof n[n.length-1]==\"string\"?n[n.length-1]+=i:n.push(i))}return n}function ve(e,t,n,r,i=!1){if(typeof e==\"number\")return e;try{if(e=e.trim(),/[ /\\(,]/.test(e))return;if(e===String(+e))return+e;let s=new We(e);if(s.type===\"length\")switch(s.unit){case\"em\":return s.value*t;case\"rem\":return s.value*16;case\"vw\":return~~(s.value*r._viewportWidth/100);case\"vh\":return~~(s.value*r._viewportHeight/100);default:return s.value}else if(s.type===\"angle\")switch(s.unit){case\"deg\":return s.value;case\"rad\":return s.value*180/Math.PI;default:return s.value}else if(s.type===\"percentage\"&&i)return s.value/100*n}catch{}}function pt(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]}function ue(e,t,n,r){let i=t[e];if(typeof i>\"u\"){if(r&&typeof e<\"u\")throw new Error(`Invalid value for CSS property \"${r}\". Allowed values: ${Object.keys(t).map(s=>`\"${s}\"`).join(\" | \")}. Received: \"${e}\".`);i=n}return i}var So=void 0,Gr,Vr,cr=[32,160,4961,65792,65793,4153,4241,10].map(e=>String.fromCodePoint(e));function je(e,t){if(!Gr||!Vr){if(!(typeof Intl<\"u\"&&\"Segmenter\"in Intl))throw new Error(\"Intl.Segmenter does not exist, please use import a polyfill.\");Gr=new Intl.Segmenter(So,{granularity:\"word\"}),Vr=new Intl.Segmenter(So,{granularity:\"grapheme\"})}return t===\"word\"?[...Gr.segment(e)].map(n=>n.segment):[...Vr.segment(e)].map(n=>n.segment)}function R(e,t,n){let r=\"\";for(let[i,s]of Object.entries(t))typeof s<\"u\"&&(r+=` ${i}=\"${s}\"`);return n?`<${e}${r}>${n}</${e}>`:`<${e}${r}/>`}function Eo(e=20){let t=new Map;function n(i,s){if(t.size>=e){let o=t.keys().next().value;t.delete(o)}t.set(i,s)}function r(i){if(!t.has(i))return;let o=t.get(i);return t.delete(i),t.set(i,o),o}return{set:n,get:r}}var Po={accentHeight:\"accent-height\",alignmentBaseline:\"alignment-baseline\",arabicForm:\"arabic-form\",baselineShift:\"baseline-shift\",capHeight:\"cap-height\",clipPath:\"clip-path\",clipRule:\"clip-rule\",colorInterpolation:\"color-interpolation\",colorInterpolationFilters:\"color-interpolation-filters\",colorProfile:\"color-profile\",colorRendering:\"color-rendering\",dominantBaseline:\"dominant-baseline\",enableBackground:\"enable-background\",fillOpacity:\"fill-opacity\",fillRule:\"fill-rule\",floodColor:\"flood-color\",floodOpacity:\"flood-opacity\",fontFamily:\"font-family\",fontSize:\"font-size\",fontSizeAdjust:\"font-size-adjust\",fontStretch:\"font-stretch\",fontStyle:\"font-style\",fontVariant:\"font-variant\",fontWeight:\"font-weight\",glyphName:\"glyph-name\",glyphOrientationHorizontal:\"glyph-orientation-horizontal\",glyphOrientationVertical:\"glyph-orientation-vertical\",horizAdvX:\"horiz-adv-x\",horizOriginX:\"horiz-origin-x\",imageRendering:\"image-rendering\",letterSpacing:\"letter-spacing\",lightingColor:\"lighting-color\",markerEnd:\"marker-end\",markerMid:\"marker-mid\",markerStart:\"marker-start\",overlinePosition:\"overline-position\",overlineThickness:\"overline-thickness\",paintOrder:\"paint-order\",panose1:\"panose-1\",pointerEvents:\"pointer-events\",renderingIntent:\"rendering-intent\",shapeRendering:\"shape-rendering\",stopColor:\"stop-color\",stopOpacity:\"stop-opacity\",strikethroughPosition:\"strikethrough-position\",strikethroughThickness:\"strikethrough-thickness\",strokeDasharray:\"stroke-dasharray\",strokeDashoffset:\"stroke-dashoffset\",strokeLinecap:\"stroke-linecap\",strokeLinejoin:\"stroke-linejoin\",strokeMiterlimit:\"stroke-miterlimit\",strokeOpacity:\"stroke-opacity\",strokeWidth:\"stroke-width\",textAnchor:\"text-anchor\",textDecoration:\"text-decoration\",textRendering:\"text-rendering\",underlinePosition:\"underline-position\",underlineThickness:\"underline-thickness\",unicodeBidi:\"unicode-bidi\",unicodeRange:\"unicode-range\",unitsPerEm:\"units-per-em\",vAlphabetic:\"v-alphabetic\",vHanging:\"v-hanging\",vIdeographic:\"v-ideographic\",vMathematical:\"v-mathematical\",vectorEffect:\"vector-effect\",vertAdvY:\"vert-adv-y\",vertOriginX:\"vert-origin-x\",vertOriginY:\"vert-origin-y\",wordSpacing:\"word-spacing\",writingMode:\"writing-mode\",xHeight:\"x-height\",xlinkActuate:\"xlink:actuate\",xlinkArcrole:\"xlink:arcrole\",xlinkHref:\"xlink:href\",xlinkRole:\"xlink:role\",xlinkShow:\"xlink:show\",xlinkTitle:\"xlink:title\",xlinkType:\"xlink:type\",xmlBase:\"xml:base\",xmlLang:\"xml:lang\",xmlSpace:\"xml:space\",xmlnsXlink:\"xmlns:xlink\"},Hu=/[\\r\\n%#()<>?[\\\\\\]^`{|}\"']/g;function Hr(e){if(!e)return\"\";if(Array.isArray(e))return e.map(Hr).join(\"\");if(typeof e!=\"object\")return String(e);let t=e.type;if(t===\"text\")throw new Error(\"<text> nodes are not currently supported, please convert them to <path>\");let{children:n,...r}=e.props||{};return`<${t}${Object.entries(r).map(([i,s])=>` ${Po[i]||i}=\"${s}\"`).join(\"\")}>${Hr(n)}</${t}>`}function ht(e){return e.split(/[, ]/).filter(Boolean).map(Number)}function Ao(e){let{viewBox:t,viewbox:n,width:r,height:i,className:s,style:o,children:a,...u}=e.props||{};t||(t=n);let f=ht(t);return u.xmlns=\"http://www.w3.org/2000/svg\",u.viewBox=t,u.width=f[2],u.height=f[3],`data:image/svg+xml;utf8,${`<svg${Object.entries(u).map(([l,p])=>` ${Po[l]||l}=\"${p}\"`).join(\"\")}>${Hr(a)}</svg>`.replace(Hu,encodeURIComponent)}`}c();c();var be=\"flex\",Ro={p:{display:be,marginTop:\"1em\",marginBottom:\"1em\"},div:{display:be},blockquote:{display:be,marginTop:\"1em\",marginBottom:\"1em\",marginLeft:40,marginRight:40},center:{display:be,textAlign:\"center\"},hr:{display:be,marginTop:\"0.5em\",marginBottom:\"0.5em\",marginLeft:\"auto\",marginRight:\"auto\",borderWidth:1,borderStyle:\"solid\"},h1:{display:be,fontSize:\"2em\",marginTop:\"0.67em\",marginBottom:\"0.67em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h2:{display:be,fontSize:\"1.5em\",marginTop:\"0.83em\",marginBottom:\"0.83em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h3:{display:be,fontSize:\"1.17em\",marginTop:\"1em\",marginBottom:\"1em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h4:{display:be,marginTop:\"1.33em\",marginBottom:\"1.33em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h5:{display:be,fontSize:\"0.83em\",marginTop:\"1.67em\",marginBottom:\"1.67em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h6:{display:be,fontSize:\"0.67em\",marginTop:\"2.33em\",marginBottom:\"2.33em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},u:{textDecoration:\"underline\"},strong:{fontWeight:\"bold\"},b:{fontWeight:\"bold\"},i:{fontStyle:\"italic\"},em:{fontStyle:\"italic\"},code:{fontFamily:\"monospace\"},kbd:{fontFamily:\"monospace\"},pre:{display:be,fontFamily:\"monospace\",whiteSpace:\"pre\",marginTop:\"1em\",marginBottom:\"1em\"},mark:{backgroundColor:\"yellow\",color:\"black\"},big:{fontSize:\"larger\"},small:{fontSize:\"smaller\"},s:{textDecoration:\"line-through\"}};c();var ju=new Set([\"color\",\"font\",\"fontFamily\",\"fontSize\",\"fontStyle\",\"fontWeight\",\"letterSpacing\",\"lineHeight\",\"textAlign\",\"textTransform\",\"textShadowOffset\",\"textShadowColor\",\"textShadowRadius\",\"textDecorationLine\",\"textDecorationStyle\",\"textDecorationColor\",\"whiteSpace\",\"transform\",\"wordBreak\",\"opacity\",\"filter\",\"_viewportWidth\",\"_viewportHeight\",\"_inheritedClipPathId\",\"_inheritedMaskId\",\"_inheritedBackgroundClipTextPath\"]);function Yr(e){let t={};for(let n in e)ju.has(n)&&(t[n]=e[n]);return t}c();import{getPropertyName as Qu,getStylesForProperty as Ye}from\"css-to-react-native\";import{parseElementStyle as Ju}from\"css-background-parser\";import{parse as Ku}from\"css-box-shadow\";c();import Yu from\"postcss-value-parser\";function Xu(e,t){try{let n=new We(e);switch(n.unit){case\"px\":return{absolute:n.value};case\"em\":return{absolute:n.value*t};case\"rem\":return{absolute:n.value*16};case\"%\":return{relative:n.value};default:return{}}}catch{return{}}}function Xr(e,t,n){switch(e){case\"top\":return{yRelative:0};case\"left\":return{xRelative:0};case\"right\":return{xRelative:100};case\"bottom\":return{yRelative:100};case\"center\":return{};default:{let r=Xu(e,t);return r.absolute?{[n?\"xAbsolute\":\"yAbsolute\"]:r.absolute}:r.relative?{[n?\"xRelative\":\"yRelative\"]:r.relative}:{}}}}function Qr(e,t){if(typeof e==\"number\")return{xAbsolute:e};let n;try{n=Yu(e).nodes.filter(r=>r.type===\"word\").map(r=>r.value)}catch{return{}}return n.length===1?Xr(n[0],t,!0):n.length===2?((n[0]===\"top\"||n[0]===\"bottom\"||n[1]===\"left\"||n[1]===\"right\")&&n.reverse(),{...Xr(n[0],t,!0),...Xr(n[1],t,!1)}):{}}var Zu=new Set([\"flex\",\"flexGrow\",\"flexShrink\",\"flexBasis\",\"fontWeight\",\"lineHeight\",\"opacity\",\"scale\",\"scaleX\",\"scaleY\"]),el=new Set([\"lineHeight\"]);function tl(e,t,n,r){return e===\"textDecoration\"&&!n.includes(t.textDecorationColor)&&(t.textDecorationColor=r),t}function mt(e,t){return typeof t==\"number\"?Zu.has(e)?el.has(e)?t:String(t):t+\"px\":t}function rl(e,t,n){if(e===\"lineHeight\")return{lineHeight:mt(e,t)};if(e===\"fontFamily\")return{fontFamily:t.split(\",\").map(r=>r.trim().replace(/(^['\"])|(['\"]$)/g,\"\").toLocaleLowerCase())};if(e===\"borderRadius\"){if(typeof t!=\"string\"||!t.includes(\"/\"))return;let[r,i]=t.split(\"/\"),s=Ye(e,r,!0),o=Ye(e,i,!0);for(let a in s)o[a]=mt(e,s[a])+\" \"+mt(e,o[a]);return o}if(/^border(Top|Right|Bottom|Left)?$/.test(e)){let r=Ye(\"border\",t,!0);r.borderWidth===1&&!String(t).includes(\"1px\")&&(r.borderWidth=3),r.borderColor===\"black\"&&!String(t).includes(\"black\")&&(r.borderColor=n);let i={Width:mt(e+\"Width\",r.borderWidth),Style:ue(r.borderStyle,{solid:\"solid\",dashed:\"dashed\"},\"solid\",e+\"Style\"),Color:r.borderColor},s={};for(let o of e===\"border\"?[\"Top\",\"Right\",\"Bottom\",\"Left\"]:[e.slice(6)])for(let a in i)s[\"border\"+o+a]=i[a];return s}if(e===\"boxShadow\"){if(!t)throw new Error('Invalid `boxShadow` value: \"'+t+'\".');return{[e]:typeof t==\"string\"?Ku(t):t}}if(e===\"transform\"){if(typeof t!=\"string\")throw new Error(\"Invalid `transform` value.\");let r={},i=t.replace(/(-?[\\d.]+%)/g,(o,a)=>{let u=~~(Math.random()*1e9);return r[u]=a,u+\"px\"}),s=Ye(\"transform\",i,!0);for(let o of s.transform)for(let a in o)r[o[a]]&&(o[a]=r[o[a]]);return s}if(e===\"background\")return t=t.toString().trim(),/^(linear-gradient|radial-gradient|url)\\(/.test(t)?Ye(\"backgroundImage\",t,!0):Ye(\"background\",t,!0)}function Io(e){return e===\"transform\"?\" Only absolute lengths such as `10px` are supported.\":\"\"}var Lo=/rgb\\((\\d+)\\s+(\\d+)\\s+(\\d+)\\s*\\/\\s*([\\.\\d]+)\\)/;function Co(e){if(typeof e==\"string\"&&Lo.test(e.trim()))return e.trim().replace(Lo,(t,n,r,i,s)=>`rgba(${n}, ${r}, ${i}, ${s})`);if(typeof e==\"object\"&&e!==null){for(let t in e)e[t]=Co(e[t]);return e}return e}function dr(e,t){var i;let n={};for(let s in e){if(s.startsWith(\"_\")){n[s]=e[s];continue}let o=Qu(s),a=e.color||t.color;try{let u=rl(o,e[s],a)||tl(o,Ye(o,mt(o,e[s]),!0),e[s],a);Object.assign(n,u)}catch(u){throw new Error(u.message+(u.message.includes(e[s])?`\n  `+Io(o):`\n  in CSS rule \\`${o}: ${e[s]}\\`.${Io(o)}`))}}if(n.backgroundImage){let{backgrounds:s}=Ju(n);n.backgroundImage=s}let r=typeof n.fontSize==\"number\"?n.fontSize:t.fontSize;if(typeof r==\"string\")try{let s=new We(r);switch(s.unit){case\"em\":r=s.value*t.fontSize;break;case\"rem\":r=s.value*16;break}}catch{r=16}typeof n.fontSize<\"u\"&&(n.fontSize=r),n.transformOrigin&&(n.transformOrigin=Qr(n.transformOrigin,r));for(let s in n){let o=n[s];if(s===\"lineHeight\")typeof o==\"string\"&&(o=n[s]=ve(o,r,r,t,!0)/r);else{if(typeof o==\"string\"){let a=ve(o,r,r,t);typeof a<\"u\"&&(n[s]=a),o=n[s]}if(typeof o==\"string\"||typeof o==\"object\"){let a=Co(o);a&&(n[s]=a),o=n[s]}}if(s===\"opacity\"&&(o=n[s]=o*t.opacity),s===\"transform\"){let a=o;for(let u of a){let f=Object.keys(u)[0],l=u[f],p=typeof l==\"string\"&&(i=ve(l,r,r,t))!=null?i:l;u[f]=p}}}return n}c();var nl=\"image/avif\",il=\"image/webp\",Zr=\"image/png\",en=\"image/jpeg\",tn=\"image/gif\",Do=\"image/svg+xml\";function ol(e){let t=new DataView(e),n=4,r=t.byteLength;for(;n<r;){let i=t.getUint16(n,!1);if(i>r)throw new TypeError(\"Invalid JPEG\");let s=t.getUint8(i+1+n);if(s===192||s===193||s===194)return[t.getUint16(i+7+n,!1),t.getUint16(i+5+n,!1)];n+=i+2}throw new TypeError(\"Invalid JPEG\")}function sl(e){let t=new Uint8Array(e.slice(6,10));return[t[0]|t[1]<<8,t[2]|t[3]<<8]}function al(e){let t=new DataView(e);return[t.getUint16(18,!1),t.getUint16(22,!1)]}var Jr=Eo(100),Kr=new Map,ul=[Zr,en,tn,Do];function ll(e){let t=\"\",n=new Uint8Array(e);for(let r=0;r<n.byteLength;r++)t+=String.fromCharCode(n[r]);return btoa(t)}async function pr(e){if(!e)throw new Error(\"Image source is not provided.\");if(/\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/.test(e)&&(e=e.slice(1,-1)),e.startsWith(\"data:\"))return[e];if(!globalThis.fetch)throw new Error(\"`fetch` is required to be polyfilled to load images.\");if(Kr.has(e))return Kr.get(e);let t=Jr.get(e);if(t)return t;let n=new Promise((r,i)=>{fetch(e).then(s=>{let o=s.headers.get(\"content-type\");return o===\"image/svg+xml\"||o===\"application/svg+xml\"?s.text():s.arrayBuffer()}).then(s=>{if(typeof s==\"string\")try{let f=`data:image/svg+xml;base64,${btoa(s)}`,l=s.match(/<svg[^>]*>/)[0],p=l.match(/viewBox=['\"](.+)['\"]/),y=p?ht(p[1]):null,h=l.match(/width=\"(\\d*\\.\\d+|\\d+)\"/),d=l.match(/height=\"(\\d*\\.\\d+|\\d+)\"/);if(!y&&(!h||!d))throw new Error(`Failed to parse SVG from ${e}: missing \"viewBox\"`);let m=y?[y[2],y[3]]:[+h[1],+d[1]],b=m[0]/m[1],g=h&&d?[+h[1],+d[1]]:h?[+h[1],+h[1]/b]:d?[+d[1]*b,+d[1]]:[m[0],m[1]];Jr.set(e,[f,...g]),r([f,...g]);return}catch(f){throw new Error(`Failed to parse SVG image: ${f.message}`)}let o,a=fl(new Uint8Array(s));switch(a){case Zr:o=al(s);break;case tn:o=sl(s);break;case en:o=ol(s);break}if(!ul.includes(a))throw new Error(`Unsupported image type: ${a||\"unknown\"}`);let u=`data:${a};base64,${ll(s)}`;Jr.set(e,[u,...o]),r([u,...o])}).catch(s=>{i(new Error(`Can't load image ${e}: `+s.message))})});return Kr.set(e,n),n}function fl(e){return[255,216,255].every((t,n)=>e[n]===t)?en:[137,80,78,71,13,10,26,10].every((t,n)=>e[n]===t)?Zr:[71,73,70,56].every((t,n)=>e[n]===t)?tn:[82,73,70,70,0,0,0,0,87,69,66,80].every((t,n)=>!t||e[n]===t)?il:[60,63,120,109,108].every((t,n)=>e[n]===t)?Do:[0,0,0,0,102,116,121,112,97,118,105,102].every((t,n)=>!t||e[n]===t)?nl:null}async function rn(e,t,n,r,i){let s=Ie(),o={...n,...dr(Ro[t],n),...dr(r,n)};if(t===\"img\"){let[a,u,f]=await pr(i.src);if(u===void 0&&f===void 0){if(i.width===void 0||i.height===void 0)throw new Error(\"Image size cannot be determined. Please provide the width and height of the image.\");u=parseInt(i.width),f=parseInt(i.height)}let l=f/u,p=(o.borderLeftWidth||0)+(o.borderRightWidth||0)+(o.paddingLeft||0)+(o.paddingRight||0),y=(o.borderTopWidth||0)+(o.borderBottomWidth||0)+(o.paddingTop||0)+(o.paddingBottom||0),h=o.width||i.width,d=o.height||i.height,m=typeof h!=\"string\"&&typeof d!=\"string\";typeof h==\"number\"&&m&&(h-=p),typeof d==\"number\"&&m&&(d-=y),h===void 0&&d===void 0?(h=u,d=f):h===void 0?typeof d==\"number\"?h=d/l:e.setAspectRatio(1/l):d===void 0&&(typeof h==\"number\"?d=h*l:e.setAspectRatio(1/l)),o.width=m?h+p:h,o.height=m?d+y:d,o.__src=a}if(t===\"svg\"){let a=i.viewBox||i.viewbox,u=ht(a),f=u[3]/u[2],{width:l,height:p}=i;typeof l>\"u\"&&p?typeof p==\"string\"&&p.endsWith(\"%\")?l=parseInt(p)/f+\"%\":(p=ve(p,n.fontSize,1,n),l=p/f):typeof p>\"u\"&&l?typeof l==\"string\"&&l.endsWith(\"%\")?p=parseInt(l)*f+\"%\":(l=ve(l,n.fontSize,1,n),p=l*f):(typeof l<\"u\"&&(l=ve(l,n.fontSize,1,n)||l),typeof p<\"u\"&&(p=ve(p,n.fontSize,1,n)||p),l||(l=u[2]),p||(p=u[3])),o.width||(o.width=l),o.height||(o.height=p)}return e.setDisplay(ue(o.display,{flex:s.DISPLAY_FLEX,none:s.DISPLAY_NONE},s.DISPLAY_FLEX,\"display\")),e.setAlignContent(ue(o.alignContent,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,\"space-between\":s.ALIGN_SPACE_BETWEEN,\"space-around\":s.ALIGN_SPACE_AROUND,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_AUTO,\"alignContent\")),e.setAlignItems(ue(o.alignItems,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_FLEX_START,\"alignItems\")),e.setAlignSelf(ue(o.alignSelf,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_AUTO,\"alignSelf\")),e.setJustifyContent(ue(o.justifyContent,{center:s.JUSTIFY_CENTER,\"flex-start\":s.JUSTIFY_FLEX_START,\"flex-end\":s.JUSTIFY_FLEX_END,\"space-between\":s.JUSTIFY_SPACE_BETWEEN,\"space-around\":s.JUSTIFY_SPACE_AROUND},s.JUSTIFY_FLEX_START,\"justifyContent\")),e.setFlexDirection(ue(o.flexDirection,{row:s.FLEX_DIRECTION_ROW,column:s.FLEX_DIRECTION_COLUMN,\"row-reverse\":s.FLEX_DIRECTION_ROW_REVERSE,\"column-reverse\":s.FLEX_DIRECTION_COLUMN_REVERSE},s.FLEX_DIRECTION_ROW,\"flexDirection\")),e.setFlexWrap(ue(o.flexWrap,{wrap:s.WRAP_WRAP,nowrap:s.WRAP_NO_WRAP,\"wrap-reverse\":s.WRAP_WRAP_REVERSE},s.WRAP_NO_WRAP,\"flexWrap\")),typeof o.flexBasis<\"u\"&&e.setFlexBasis(o.flexBasis),e.setFlexGrow(typeof o.flexGrow>\"u\"?0:o.flexGrow),e.setFlexShrink(typeof o.flexShrink>\"u\"?0:o.flexShrink),typeof o.maxHeight<\"u\"&&e.setMaxHeight(o.maxHeight),typeof o.maxWidth<\"u\"&&e.setMaxWidth(o.maxWidth),typeof o.minHeight<\"u\"&&e.setMinHeight(o.minHeight),typeof o.minWidth<\"u\"&&e.setMinWidth(o.minWidth),e.setOverflow(ue(o.overflow,{visible:s.OVERFLOW_VISIBLE,hidden:s.OVERFLOW_HIDDEN},s.OVERFLOW_VISIBLE,\"overflow\")),e.setMargin(s.EDGE_TOP,o.marginTop||0),e.setMargin(s.EDGE_BOTTOM,o.marginBottom||0),e.setMargin(s.EDGE_LEFT,o.marginLeft||0),e.setMargin(s.EDGE_RIGHT,o.marginRight||0),e.setBorder(s.EDGE_TOP,o.borderTopWidth||0),e.setBorder(s.EDGE_BOTTOM,o.borderBottomWidth||0),e.setBorder(s.EDGE_LEFT,o.borderLeftWidth||0),e.setBorder(s.EDGE_RIGHT,o.borderRightWidth||0),e.setPadding(s.EDGE_TOP,o.paddingTop||0),e.setPadding(s.EDGE_BOTTOM,o.paddingBottom||0),e.setPadding(s.EDGE_LEFT,o.paddingLeft||0),e.setPadding(s.EDGE_RIGHT,o.paddingRight||0),e.setPositionType(ue(o.position,{absolute:s.POSITION_TYPE_ABSOLUTE,relative:s.POSITION_TYPE_RELATIVE},s.POSITION_TYPE_RELATIVE,\"position\")),typeof o.top<\"u\"&&e.setPosition(s.EDGE_TOP,o.top),typeof o.bottom<\"u\"&&e.setPosition(s.EDGE_BOTTOM,o.bottom),typeof o.left<\"u\"&&e.setPosition(s.EDGE_LEFT,o.left),typeof o.right<\"u\"&&e.setPosition(s.EDGE_RIGHT,o.right),typeof o.height<\"u\"?e.setHeight(o.height):e.setHeightAuto(),typeof o.width<\"u\"?e.setWidth(o.width):e.setWidthAuto(),[o,Yr(o)]}c();c();c();var Mo=[1,0,0,1,0,0];function cl(e,t,n){let r=[...Mo];for(let i of e){let s=Object.keys(i)[0],o=i[s];if(typeof o==\"string\")if(s===\"translateX\")o=parseFloat(o)/100*t,i[s]=o;else if(s===\"translateY\")o=parseFloat(o)/100*n,i[s]=o;else throw new Error(`Invalid transform: \"${s}: ${o}\".`);let a=o,u=[...Mo];switch(s){case\"translateX\":u[4]=a;break;case\"translateY\":u[5]=a;break;case\"scale\":u[0]=a,u[3]=a;break;case\"scaleX\":u[0]=a;break;case\"scaleY\":u[3]=a;break;case\"rotate\":{let f=a*Math.PI/180,l=Math.cos(f),p=Math.sin(f);u[0]=l,u[1]=p,u[2]=-p,u[3]=l;break}case\"skewX\":u[2]=Math.tan(a*Math.PI/180);break;case\"skewY\":u[1]=Math.tan(a*Math.PI/180);break}r=pt(u,r)}e.splice(0,e.length),e.push(...r),e.__resolved=!0}function gt({left:e,top:t,width:n,height:r},i,s,o){var f,l,p,y;let a;i.__resolved||cl(i,n,r);let u=i;if(s)a=u;else{let h=(l=o==null?void 0:o.xAbsolute)!=null?l:((f=o==null?void 0:o.xRelative)!=null?f:50)*n/100,d=(y=o==null?void 0:o.yAbsolute)!=null?y:((p=o==null?void 0:o.yRelative)!=null?p:50)*r/100,m=e+h,b=t+d;a=pt([1,0,0,1,m,b],pt(u,[1,0,0,1,-m,-b])),u.__parent&&(a=pt(u.__parent,a)),u.splice(0,6,...a)}return`matrix(${a.map(h=>h.toFixed(2)).join(\",\")})`}function Fo({left:e,top:t,width:n,height:r,isInheritingTransform:i},s){let o=\"\",a=1;return s.transform&&(o=gt({left:e,top:t,width:n,height:r},s.transform,i,s.transformOrigin)),s.opacity!==void 0&&(a=+s.opacity),{matrix:o,opacity:a}}function nn({id:e,content:t,filter:n,left:r,top:i,width:s,height:o,matrix:a,opacity:u,image:f,clipPathId:l,debug:p,shape:y,decorationShape:h},d){let m=\"\";if(p&&(m=R(\"rect\",{x:r,y:i-o,width:s,height:o,fill:\"transparent\",stroke:\"#575eff\",\"stroke-width\":1,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0})),f){let g={href:f,x:r,y:i,width:s,height:o,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0,style:d.filter?`filter:${d.filter}`:void 0};return[(n?`${n}<g filter=\"url(#satori_s-${e})\">`:\"\")+R(\"image\",{...g,opacity:u!==1?u:void 0})+(h||\"\")+(n?\"</g>\":\"\")+m,\"\"]}let b={x:r,y:i,width:s,height:o,\"font-weight\":d.fontWeight,\"font-style\":d.fontStyle,\"font-size\":d.fontSize,\"font-family\":d.fontFamily,\"letter-spacing\":d.letterSpacing||void 0,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0,style:d.filter?`filter:${d.filter}`:void 0};return[(n?`${n}<g filter=\"url(#satori_s-${e})\">`:\"\")+R(\"text\",{...b,fill:d.color,opacity:u!==1?u:void 0},t)+(h||\"\")+(n?\"</g>\":\"\")+m,y?R(\"text\",b,t):\"\"]}c();function dl(e,t,n){return e.replace(/([MA])([0-9.-]+),([0-9.-]+)/g,function(r,i,s,o){return i+(parseFloat(s)+t)+\",\"+(parseFloat(o)+n)})}function No({id:e,width:t,height:n},r){if(!r.shadowColor||!r.shadowOffset||typeof r.shadowRadius>\"u\")return\"\";let i=r.shadowRadius*r.shadowRadius/4,s=Math.min(r.shadowOffset.width-i,0),o=Math.max(r.shadowOffset.width+i+t,t),a=Math.min(r.shadowOffset.height-i,0),u=Math.max(r.shadowOffset.height+i+n,n);return`<defs><filter id=\"satori_s-${e}\" x=\"${s/t*100}%\" y=\"${a/n*100}%\" width=\"${(o-s)/t*100}%\" height=\"${(u-a)/n*100}%\"><feDropShadow dx=\"${r.shadowOffset.width}\" dy=\"${r.shadowOffset.height}\" stdDeviation=\"${r.shadowRadius/2}\" flood-color=\"${r.shadowColor}\" flood-opacity=\"1\"/></filter></defs>`}function $o({width:e,height:t,shape:n,opacity:r,id:i},s){if(!s.boxShadow)return null;let o=\"\",a=\"\";for(let u=s.boxShadow.length-1;u>=0;u--){let f=\"\",l=s.boxShadow[u];l.spreadRadius&&l.inset&&(l.spreadRadius=-l.spreadRadius);let p=l.blurRadius*l.blurRadius/4+(l.spreadRadius||0),y=Math.min(-p-(l.inset?l.offsetX:0),0),h=Math.max(p+e-(l.inset?l.offsetX:0),e),d=Math.min(-p-(l.inset?l.offsetY:0),0),m=Math.max(p+t-(l.inset?l.offsetY:0),t),b=`satori_s-${i}-${u}`,g=`satori_ms-${i}-${u}`,_=l.spreadRadius?n.replace('stroke-width=\"0\"',`stroke-width=\"${l.spreadRadius*2}\"`):n;f+=R(\"mask\",{id:g,maskUnits:\"userSpaceOnUse\"},R(\"rect\",{x:0,y:0,width:s._viewportWidth,height:s._viewportHeight,fill:l.inset?\"#000\":\"#fff\"})+_.replace('fill=\"#fff\"',l.inset?'fill=\"#fff\"':'fill=\"#000\"').replace('stroke=\"#fff\"',\"\"));let O=_.replace(/d=\"([^\"]+)\"/,(A,L)=>'d=\"'+dl(L,l.offsetX,l.offsetY)+'\"').replace(/x=\"([^\"]+)\"/,(A,L)=>'x=\"'+(parseFloat(L)+l.offsetX)+'\"').replace(/y=\"([^\"]+)\"/,(A,L)=>'y=\"'+(parseFloat(L)+l.offsetY)+'\"');l.spreadRadius&&l.spreadRadius<0&&(f+=R(\"mask\",{id:g+\"-neg\",maskUnits:\"userSpaceOnUse\"},O.replace('stroke=\"#fff\"','stroke=\"#000\"').replace(/stroke-width=\"[^\"]+\"/,`stroke-width=\"${-l.spreadRadius*2}\"`))),l.spreadRadius&&l.spreadRadius<0&&(O=R(\"g\",{mask:`url(#${g}-neg)`},O)),f+=R(\"defs\",{},R(\"filter\",{id:b,x:`${y/e*100}%`,y:`${d/t*100}%`,width:`${(h-y)/e*100}%`,height:`${(m-d)/t*100}%`},R(\"feGaussianBlur\",{stdDeviation:l.blurRadius/2,result:\"b\"})+R(\"feFlood\",{\"flood-color\":l.color,in:\"SourceGraphic\",result:\"f\"})+R(\"feComposite\",{in:\"f\",in2:\"b\",operator:l.inset?\"out\":\"in\"})))+R(\"g\",{mask:`url(#${g})`,filter:`url(#${b})`,opacity:r},O),l.inset?a+=f:o+=f}return[o,a]}c();function on({width:e,left:t,top:n,ascender:r,clipPathId:i},s){let{textDecorationColor:o,textDecorationStyle:a,textDecorationLine:u,fontSize:f}=s;if(!u||u===\"none\")return\"\";let l=Math.max(1,f*.1),p=u===\"line-through\"?n+r*.5:u===\"underline\"?n+r*1.1:n,y=a===\"dashed\"?`${l*1.2} ${l*2}`:a===\"dotted\"?`0 ${l*2}`:void 0;return R(\"line\",{x1:t,y1:p,x2:t+e,y2:p,stroke:o,\"stroke-width\":l,\"stroke-dasharray\":y,\"stroke-linecap\":a===\"dotted\"?\"round\":\"square\",\"clip-path\":i?`url(#${i})`:void 0})}var sn=void 0;async function*an(e,t){var po;let n=Ie(),{parentStyle:r,inheritedStyle:i,parent:s,font:o,id:a,isInheritingTransform:u,debug:f,embedFont:l,graphemeImages:p,canLoadAdditionalAssets:y}=t;r.textTransform===\"uppercase\"?e=e.toLocaleUpperCase(sn):r.textTransform===\"lowercase\"?e=e.toLocaleLowerCase(sn):r.textTransform===\"capitalize\"&&(e=je(e,\"word\").map(V=>je(V,\"grapheme\").map((Q,H)=>H===0?Q.toLocaleUpperCase(sn):Q).join(\"\")).join(\"\"));let h=ue(r.wordBreak,{normal:\"word\",\"break-all\":\"grapheme\",\"break-word\":\"grapheme\",\"keep-all\":\"word\"},\"word\",\"wordBreak\"),d=je(e,h),m=n.Node.create();m.setAlignItems(n.ALIGN_BASELINE),m.setJustifyContent(ue(r.textAlign,{left:n.JUSTIFY_FLEX_START,right:n.JUSTIFY_FLEX_END,center:n.JUSTIFY_CENTER,justify:n.JUSTIFY_SPACE_BETWEEN,start:n.JUSTIFY_FLEX_START,end:n.JUSTIFY_FLEX_END},n.JUSTIFY_FLEX_START,\"textAlign\")),s.insertChild(m,s.getChildCount());let{textAlign:b,textOverflow:g,whiteSpace:_,lineHeight:O,filter:A,_inheritedBackgroundClipTextPath:L}=r,N=r.fontSize,C=o.getEngine(N,O,r),D=y?d.filter(V=>!C.has(V)):[];yield D,D.length&&(C=o.getEngine(N,O,r));let $=[],z=[],U=[],M=[],q=new Map,ee=V=>{let Q=0;for(let H of V){if(q.has(H)){Q+=q.get(H);continue}let le=C.measure(H,r);q.set(H,le),Q+=le}return Q},G=0,re=[],Me=0;for(let V of d){let Q=!1,H=p&&p[V];_===\"pre\"?Q=V[0]===`\n`:_!==\"nowrap\"&&(H||cr.includes(V[0]))&&(Q=!0),Q?(_===\"nowrap\"?Me+=ee(re)+r.fontSize:(G=Math.max(G,ee(re)),H&&(G=Math.max(G,r.fontSize))),re=[]):(!cr.includes(V[0])||!re.length)&&re.push(V===`\n`?\" \":V)}G=Math.max(G,ee(re)+Me);let k=s.getMinWidth(),F=s.getMaxWidth(),te=s.getWidth();isNaN(te.value)&&(isNaN(k.value)||k.unit===1&&k.value>G)&&(isNaN(F.value)||F.unit===1&&(G=Math.min(G,F.value)),s.setMinWidth(G)),typeof r.flexShrink>\"u\"&&s.setFlexShrink(1);let ke=[\"pre\",\"pre-wrap\",\"pre-line\"].includes(_),io=![\"pre\",\"pre-wrap\"].includes(_);m.setMeasureFunc(V=>{let Q=0,H=\"\",le=0,me=0,fe=0,ce=-1,Ve=0,Z=0,He=0;$=[],U=[0];for(let $e=0;$e<d.length;$e++){let se=d[$e],Re=ke&&se===`\n`;if(io&&cr.includes(se[0])&&!Re)H||(H=\" \"),le=ee([H]),M[$e]=null;else{let ge=Re?0:p&&p[se]?r.fontSize:ee([se]);Re&&Z===0&&(Z=C.height(se)),me||(H=\"\",le=0);let ie=le||\",.!?:-@)>]}%#\".indexOf(se[0])<0,ae=!me||!!le;if(Re||$e&&ie&&me+le+ge>V&&_!==\"nowrap\"&&_!==\"pre\")$.push(me),z.push(He),Q++,Ve+=Z,me=ge,Z=ge?C.height(se):0,He=ge?C.baseline(se):0,U.push(1),ce=-1,Re||(fe=Math.max(fe,V));else{me+=le+ge;let qe=C.height(se);qe>Z&&(Z=qe,He=C.baseline(se)),ae&&U[U.length-1]++}H=\"\",le=0,ae&&ce++,fe=Math.max(fe,me),M[$e]={y:Ve,x:me-ge,width:ge,line:Q,lineIndex:ce}}}return me&&(Q++,$.push(me),z.push(He),Ve+=Z),{width:fe,height:Ve}});let[ft,Ou]=yield,Nr=\"\",rr=\"\",Fe=i._inheritedClipPathId,oo=i._inheritedMaskId,{left:so,top:ao,width:nr,height:uo}=m.getComputedLayout(),$r=s.getComputedWidth()-s.getComputedPadding(n.EDGE_LEFT)-s.getComputedPadding(n.EDGE_RIGHT)-s.getComputedBorder(n.EDGE_LEFT)-s.getComputedBorder(n.EDGE_RIGHT),tt=ft+so,rt=Ou+ao,{matrix:Ae,opacity:ir}=Fo({left:so,top:ao,width:nr,height:uo,isInheritingTransform:u},r),or=\"\";r.textShadowOffset&&(or=No({width:nr,height:uo,id:a},{shadowColor:r.textShadowColor,shadowOffset:r.textShadowOffset,shadowRadius:r.textShadowRadius}));let ct=\"\",sr=\"\",lo=\"\",qr=-1,fo=g===\"ellipsis\"?ee([\"\\u2026\"]):0,Eu=g===\"ellipsis\"?ee([\" \"]):0,ar={},Ne=null,co=0;for(let V=0;V<d.length;V++){if(!M[V])continue;let Q=M[V],H=d[V],le=null,me=p?p[H]:null,fe=Q.y,ce=Q.x,Ve=Q.width,Z=Q.line;if(Z===qr)continue;let He=!1;if($.length>1){let ie=nr-$[Z];if(b===\"right\"||b===\"end\")ce+=ie;else if(b===\"center\")ce+=ie/2;else if(b===\"justify\"&&Z<$.length-1){let ae=U[Z];ce+=(ae>1?ie/(ae-1):0)*Q.lineIndex,He=!0}}if(ar[Z]||(ar[Z]=[ce,He?nr:$[Z]]),g===\"ellipsis\"&&$[Z]>$r&&Q.x+Ve+fo+Eu>$r){let ie=je(H,\"grapheme\"),ae=\"\",qe=0;for(let ho of ie){let mo=Q.x+ee([ae+ho]);if(ae&&mo+fo>$r)break;ae+=ho,qe=mo}H=ae+\"\\u2026\",qr=Z,ar[Z][1]=qe}let $e=z[Z],se=C.baseline(H),Re=C.height(H),ge=$e-se;if(me)fe+=0;else if(l){if(d[V+1]&&M[V+1]&&fe===M[V+1].y){Ne===null&&(co=ce),Ne=Ne===null?H:Ne+H;continue}let ie=Ne===null?H:Ne+H,ae=Ne===null?ce:co,qe=Q.width+ce-ae;le=C.getSVG(ie,{...r,left:tt+ae,top:rt+fe+se+ge,letterSpacing:r.letterSpacing}),Ne=null,f&&(lo+=R(\"rect\",{x:tt+ae,y:rt+fe+ge,width:qe,height:Re,fill:\"transparent\",stroke:\"#575eff\",\"stroke-width\":1,transform:Ae||void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0})+R(\"line\",{x1:tt+ce,x2:tt+ce+Q.width,y1:rt+fe+ge+se,y2:rt+fe+ge+se,stroke:\"#14c000\",\"stroke-width\":1,transform:Ae||void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0}))}else fe+=se+ge;if(r.textDecorationLine&&(Z!==((po=M[V+1])==null?void 0:po.line)||qr===Z)){let ie=ar[Z];ie&&!ie[2]&&(ct+=on({left:tt+ie[0],top:rt+Re*+Z,width:ie[1],ascender:C.baseline(H),clipPathId:Fe},r),ie[2]=1)}if(le!==null)sr+=le+\" \";else{let[ie,ae]=nn({content:H,filter:or,id:a,left:tt+ce,top:rt+fe,width:Ve,height:Re,matrix:Ae,opacity:ir,image:me,clipPathId:Fe,debug:f,shape:!!L,decorationShape:ct},r);Nr+=ie,rr+=ae,ct=\"\"}}if(sr){let V=r.color!==\"transparent\"&&ir!==0?R(\"path\",{fill:r.color,d:sr,transform:Ae||void 0,opacity:ir!==1?ir:void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0,mask:oo?`url(#${oo})`:void 0,style:A?`filter:${A}`:void 0}):\"\";L&&(rr=R(\"path\",{d:sr,transform:Ae||void 0})),Nr+=(or?or+R(\"g\",{filter:`url(#satori_s-${a})`},V+ct):V+ct)+lo}return rr&&(r._inheritedBackgroundClipTextPath.value+=rr),Nr}c();c();c();var un=un||{},qo={type:\"directional\",value:\"bottom\"};un.parse=function(){var e={linearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,repeatingLinearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,radialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,repeatingRadialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,sideOrCorner:/^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i,extentKeywords:/^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,positionKeywords:/^(left|center|right|top|bottom)/i,pixelValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,percentageValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,emValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,angleValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,zeroValue:/[0]/,startCall:/^\\(/,endCall:/^\\)/,comma:/^,/,hexColor:/^\\#([0-9a-fA-F]+)/,literalColor:/^([a-zA-Z]+)/,rgbColor:/^rgb/i,rgbaColor:/^rgba/i,number:/^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/},t=\"\";function n(k){var F=new Error(t+\": \"+k);throw F.source=t,F}function r(){var k=i();return t.length>0&&n(\"Invalid input not EOF\"),k}function i(){return A(s)}function s(){return o(\"linear-gradient\",e.linearGradient,u,qo)||o(\"repeating-linear-gradient\",e.repeatingLinearGradient,u,qo)||o(\"radial-gradient\",e.radialGradient,y)||o(\"repeating-radial-gradient\",e.repeatingRadialGradient,y)}function o(k,F,te,ke){return a(F,function(io){var ft=te();return ft?re(e.comma)||n(\"Missing comma before color stops\"):ft=ke,{type:k,orientation:ft,colorStops:A(L)}})}function a(k,F){var te=re(k);if(te){re(e.startCall)||n(\"Missing (\");var ke=F(te);return re(e.endCall)||n(\"Missing )\"),ke}}function u(){return f()||l()||p()}function f(){return G(\"directional\",e.sideOrCorner,1)}function l(){return G(\"angular\",e.angleValue,1)}function p(){return G(\"directional\",e.zeroValue,0)}function y(){var k,F=h(),te;return F&&(k=[],k.push(F),te=t,re(e.comma)&&(F=h(),F?k.push(F):t=te)),k}function h(){var k=d()||m();if(k)k.at=g();else{var F=b();if(F){k=F;var te=g();te&&(k.at=te)}else{var ke=_();ke&&(k={type:\"default-radial\",at:ke})}}return k}function d(){var k=G(\"shape\",/^(circle)/i,0);return k&&(k.style=ee()||b()),k}function m(){var k=G(\"shape\",/^(ellipse)/i,0);return k&&(k.style=M()||b()),k}function b(){return G(\"extent-keyword\",e.extentKeywords,1)}function g(){if(G(\"position\",/^at/,0)){var k=_();return k||n(\"Missing positioning value\"),k}}function _(){var k=O();if(k.x||k.y)return{type:\"position\",value:k}}function O(){return{x:M(),y:M()}}function A(k){var F=k(),te=[];if(F)for(te.push(F);re(e.comma);)F=k(),F?te.push(F):n(\"One extra comma\");return te}function L(){var k=N();return k||n(\"Expected color definition\"),k.length=M(),k}function N(){return D()||z()||$()||C()}function C(){return G(\"literal\",e.literalColor,0)}function D(){return G(\"hex\",e.hexColor,1)}function $(){return a(e.rgbColor,function(){return{type:\"rgb\",value:A(U)}})}function z(){return a(e.rgbaColor,function(){return{type:\"rgba\",value:A(U)}})}function U(){return re(e.number)[1]}function M(){return G(\"%\",e.percentageValue,1)||q()||ee()}function q(){return G(\"position-keyword\",e.positionKeywords,1)}function ee(){return G(\"px\",e.pixelValue,1)||G(\"em\",e.emValue,1)}function G(k,F,te){var ke=re(F);if(ke)return{type:k,value:ke[te]}}function re(k){var F,te;return te=/^[\\n\\r\\t\\s]+/.exec(t),te&&Me(te[0].length),F=k.exec(t),F&&Me(F[0].length),F}function Me(k){t=t.substr(k)}return function(k){return t=k.toString(),r()}}();var ln=un;function pl(e){return e.type===\"literal\"?e.value:e.type===\"hex\"?`#${e.value}`:e.type===\"rgb\"?`rgb(${e.value.join(\",\")})`:e.type===\"rgba\"?`rgba(${e.value.join(\",\")})`:\"transparent\"}function hl(e){let t=0,n=0,r=0,i=0;return e.includes(\"top\")?n=1:e.includes(\"bottom\")&&(i=1),e.includes(\"left\")?t=1:e.includes(\"right\")&&(r=1),!t&&!r&&!n&&!i&&(n=1),[t,n,r,i]}function ml(e,t){return typeof e==\"string\"&&e.endsWith(\"%\")?t*parseFloat(e)/100:+e}function fn(e,{x:t,y:n,defaultX:r,defaultY:i}){return(e?e.split(\" \").map(s=>{try{let o=new We(s);return o.type===\"length\"||o.type===\"number\"?o.value:o.value+o.unit}catch{return null}}).filter(s=>s!==null):[r,i]).map((s,o)=>ml(s,[t,n][o]))}function Wo(e,t){let n=[];for(let o of t){let a=pl(o);if(!n.length&&(n.push({offset:0,color:a}),typeof o.length>\"u\"||o.length.value===\"0\"))continue;let u=typeof o.length>\"u\"?void 0:o.length.type===\"%\"?o.length.value/100:o.length.value/e;n.push({offset:u,color:a})}n.length||n.push({offset:0,color:\"transparent\"});let r=n[n.length-1];r.offset!==1&&(typeof r.offset>\"u\"?r.offset=1:n.push({offset:1,color:r.color}));let i=0,s=1;for(let o=0;o<n.length;o++)if(typeof n[o].offset>\"u\"){for(s<o&&(s=o);typeof n[s].offset>\"u\";)s++;n[o].offset=(n[s].offset-n[i].offset)/(s-i)*(o-i)+n[i].offset}else i=o;return n}async function cn({id:e,width:t,height:n,left:r,top:i},{image:s,size:o,position:a,repeat:u}){u=u||\"repeat\";let f=u===\"repeat-x\"||u===\"repeat\",l=u===\"repeat-y\"||u===\"repeat\",p=fn(o,{x:t,y:n,defaultX:t,defaultY:n}),y=fn(a,{x:t,y:n,defaultX:0,defaultY:0});if(s.startsWith(\"linear-gradient(\")){let h=ln.parse(s)[0],[d,m]=p,b,g,_,O;if(h.orientation.type===\"directional\")[b,g,_,O]=hl(h.orientation.value);else if(h.orientation.type===\"angular\"){let D=+h.orientation.value/180*Math.PI-Math.PI/2,$=Math.cos(D),z=Math.sin(D);b=0,g=0,_=$,O=z,_<0&&(b-=_,_=0),O<0&&(g-=O,O=0)}let A=Wo(t,h.colorStops),L=`satori_bi${e}`,N=`satori_pattern_${e}`,C=R(\"pattern\",{id:N,x:y[0]/t,y:y[1]/n,width:f?d/t:\"1\",height:l?m/n:\"1\",patternUnits:\"objectBoundingBox\"},R(\"linearGradient\",{id:L,x1:b,y1:g,x2:_,y2:O},A.map(D=>R(\"stop\",{offset:D.offset*100+\"%\",\"stop-color\":D.color})).join(\"\"))+R(\"rect\",{x:0,y:0,width:d,height:m,fill:`url(#${L})`}));return[N,C]}if(s.startsWith(\"radial-gradient(\")){let h=ln.parse(s)[0],d=h.orientation[0],[m,b]=p,g=\"circle\",_=m/2,O=b/2;if(d.type===\"shape\"){if(g=d.value,d.at)if(d.at.type===\"position\")_=d.at.value.x.value,O=d.at.value.y.value;else throw new Error(\"orientation.at.type not implemented: \"+d.at.type)}else throw new Error(\"orientation.type not implemented: \"+d.type);let A=Wo(t,h.colorStops),L=`satori_radial_${e}`,N=`satori_pattern_${e}`,C=`satori_mask_${e}`,D={},$=Math.max(Math.abs(m-_),Math.abs(_)),z=Math.max(Math.abs(b-O),Math.abs(O));if(g===\"circle\")D.r=Math.sqrt($*$+z*z);else if(g===\"ellipse\"){let q=z!==0?$/z:1;D.ry=Math.sqrt($*$+z*z*q*q)/q,D.rx=D.ry*q}let U=R(\"pattern\",{id:N,x:y[0]/t,y:y[1]/n,width:f?m/t:\"1\",height:l?b/n:\"1\",patternUnits:\"objectBoundingBox\"},R(\"radialGradient\",{id:L},A.map(q=>R(\"stop\",{offset:q.offset,\"stop-color\":q.color})).join(\"\"))+R(\"mask\",{id:C},R(\"rect\",{x:0,y:0,width:m,height:b,fill:\"#fff\"}))+R(g,{cx:_,cy:O,width:m,height:b,...D,fill:`url(#${L})`,mask:`url(#${C})`}));return[N,U]}if(s.startsWith(\"url(\")){let h=fn(o,{x:t,y:n,defaultX:0,defaultY:0}),[d,m,b]=await pr(s.slice(4,-1)),g=h[0]||m,_=h[1]||b;return[`satori_bi${e}`,R(\"pattern\",{id:`satori_bi${e}`,patternContentUnits:\"userSpaceOnUse\",patternUnits:\"userSpaceOnUse\",x:y[0]+r,y:y[1]+i,width:f?g:\"100%\",height:l?_:\"100%\"},R(\"image\",{x:0,y:0,width:g,height:_,preserveAspectRatio:\"none\",href:d}))]}throw new Error(`Invalid background image: \"${s}\"`)}c();function gl([e,t]){return Math.round(e*1e3)===0&&Math.round(t*1e3)===0?0:Math.round(e*t/Math.sqrt(e*e+t*t)*1e3)/1e3}function hr(e,t,n){return n<e+t&&(n/2<e&&n/2<t?e=t=n/2:n/2<e?e=n-t:n/2<t&&(t=n-e)),[e,t]}function mr(e){e[0]=e[1]=Math.min(e[0],e[1])}function gr(e,t,n,r,i){if(typeof e==\"string\"){let s=e.split(\" \").map(a=>a.trim()),o=!s[1]&&!s[0].endsWith(\"%\");return s[1]=s[1]||s[0],[o,[Math.min(ve(s[0],r,t,i,!0),t),Math.min(ve(s[1],r,n,i,!0),n)]]}return typeof e==\"number\"?[!0,[Math.min(e,t),Math.min(e,n)]]:[!0,void 0]}function nt({left:e,top:t,width:n,height:r},i,s){let{borderTopLeftRadius:o,borderTopRightRadius:a,borderBottomLeftRadius:u,borderBottomRightRadius:f,fontSize:l}=i,p,y,h,d;if([p,o]=gr(o,n,r,l,i),[y,a]=gr(a,n,r,l,i),[h,u]=gr(u,n,r,l,i),[d,f]=gr(f,n,r,l,i),!s&&!o&&!a&&!u&&!f)return\"\";o||(o=[0,0]),a||(a=[0,0]),u||(u=[0,0]),f||(f=[0,0]),[o[0],a[0]]=hr(o[0],a[0],n),[u[0],f[0]]=hr(u[0],f[0],n),[o[1],u[1]]=hr(o[1],u[1],r),[a[1],f[1]]=hr(a[1],f[1],r),p&&mr(o),y&&mr(a),h&&mr(u),d&&mr(f);let m=[];m[0]=[a,a],m[1]=[f,[-f[0],f[1]]],m[2]=[u,[-u[0],-u[1]]],m[3]=[o,[o[0],-o[1]]];let b=`h${n-o[0]-a[0]} a${m[0][0]} 0 0 1 ${m[0][1]}`,g=`v${r-a[1]-f[1]} a${m[1][0]} 0 0 1 ${m[1][1]}`,_=`h${f[0]+u[0]-n} a${m[2][0]} 0 0 1 ${m[2][1]}`,O=`v${u[1]+o[1]-r} a${m[3][0]} 0 0 1 ${m[3][1]}`;if(s){let L=function(M){let q=gl([o,a,f,u][M]);return M===0?[[e+o[0]-q,t+o[1]-q],[e+o[0],t]]:M===1?[[e+n-a[0]+q,t+a[1]-q],[e+n,t+a[1]]]:M===2?[[e+n-f[0]+q,t+r-f[1]+q],[e+n-f[0],t+r]]:[[e+u[0]-q,t+r-u[1]+q],[e,t+r-u[1]]]},A=s.indexOf(!1);if(!s.includes(!0))throw new Error(\"Invalid `partialSides`.\");if(A===-1)A=0;else for(;!s[A];)A=(A+1)%4;let N=\"\",C=L(A),D=`M${C[0]} A${m[(A+3)%4][0]} 0 0 1 ${C[1]}`,$=0;for(;$<4&&s[(A+$)%4];$++)N+=D+\" \",D=[b,g,_,O][(A+$)%4];let z=(A+$)%4;N+=D.split(\" \")[0];let U=L(z);return N+=` A${m[(z+3)%4][0]} 0 0 1 ${U[0]}`,N}return`M${e+o[0]},${t} ${b} ${g} ${_} ${O}`}c();c();c();function Bo(e,t,n){return n[e+\"Width\"]===n[t+\"Width\"]&&n[e+\"Style\"]===n[t+\"Style\"]&&n[e+\"Color\"]===n[t+\"Color\"]}function Uo({id:e,currentClipPathId:t,borderPath:n,borderType:r,left:i,top:s,width:o,height:a},u){if(!(u.borderTopWidth||u.borderRightWidth||u.borderBottomWidth||u.borderLeftWidth))return null;let l=`satori_bc-${e}`;return[R(\"clipPath\",{id:l,\"clip-path\":t?`url(#${t})`:void 0},R(r,{x:i,y:s,width:o,height:a,d:n||void 0})),l]}function vt({left:e,top:t,width:n,height:r,props:i,asContentMask:s,maskBorderOnly:o},a){let u=[\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\"];if(!s&&!u.some(h=>a[h+\"Width\"]))return\"\";let f=\"\",l=0;for(;l>0&&Bo(u[l],u[(l+3)%4],a);)l=(l+3)%4;let p=[!1,!1,!1,!1],y=[];for(let h=0;h<4;h++){let d=(l+h)%4,m=(l+h+1)%4,b=u[d],g=u[m];if(p[d]=!0,y=[a[b+\"Width\"],a[b+\"Style\"],a[b+\"Color\"],b],!Bo(b,g,a)){let _=(y[0]||0)+(s&&!o&&a[b.replace(\"border\",\"padding\")]||0);_&&(f+=R(\"path\",{width:n,height:r,...i,fill:\"none\",stroke:s?\"#000\":y[2],\"stroke-width\":_*2,\"stroke-dasharray\":!s&&y[1]===\"dashed\"?_*2+\" \"+_:void 0,d:nt({left:e,top:t,width:n,height:r},a,p)})),p=[!1,!1,!1,!1]}}if(p.some(Boolean)){let h=(y[0]||0)+(s&&!o&&a[y[3].replace(\"border\",\"padding\")]||0);h&&(f+=R(\"path\",{width:n,height:r,...i,fill:\"none\",stroke:s?\"#000\":y[2],\"stroke-width\":h*2,\"stroke-dasharray\":!s&&y[1]===\"dashed\"?h*2+\" \"+h:void 0,d:nt({left:e,top:t,width:n,height:r},a,p)}))}return f}function dn({id:e,left:t,top:n,width:r,height:i,matrix:s,borderOnly:o},a){let u=(a.borderLeftWidth||0)+(o?0:a.paddingLeft||0),f=(a.borderTopWidth||0)+(o?0:a.paddingTop||0),l=(a.borderRightWidth||0)+(o?0:a.paddingRight||0),p=(a.borderBottomWidth||0)+(o?0:a.paddingBottom||0),y={x:t+u,y:n+f,width:r-u-l,height:i-f-p};return R(\"mask\",{id:e},R(\"rect\",{...y,fill:\"#fff\",mask:a._inheritedMaskId?`url(#${a._inheritedMaskId})`:void 0})+vt({left:t,top:n,width:r,height:i,props:{transform:s||void 0},asContentMask:!0,maskBorderOnly:o},a))}function pn({left:e,top:t,width:n,height:r,path:i,matrix:s,id:o,currentClipPath:a,src:u},f){if(f.overflow!==\"hidden\"&&!u)return\"\";let l=dn({id:`satori_om-${o}`,left:e,top:t,width:n,height:r,matrix:s,borderOnly:!u},f);return R(\"clipPath\",{id:`satori_cp-${o}`,\"clip-path\":a},R(i?\"path\":\"rect\",{x:e,y:t,width:n,height:r,d:i||void 0}))+l}async function bt({id:e,left:t,top:n,width:r,height:i,isInheritingTransform:s,src:o,debug:a},u){if(u.display===\"none\")return\"\";let f=!!o,l=\"rect\",p=\"\",y=\"\",h=[],d=1,m=\"\";u.backgroundColor&&h.push(u.backgroundColor),u.opacity!==void 0&&(d=+u.opacity),u.transform&&(p=gt({left:t,top:n,width:r,height:i},u.transform,s,u.transformOrigin));let b=\"\";if(u.backgroundImage){let U=[];for(let M=0;M<u.backgroundImage.length;M++){let q=u.backgroundImage[M],ee=await cn({id:e+\"_\"+M,width:r,height:i,left:t,top:n},q);ee&&U.unshift(ee)}for(let M of U)h.push(`url(#${M[0]})`),y+=M[1],M[2]&&(b+=M[2])}let g=nt({left:t,top:n,width:r,height:i},u);g&&(l=\"path\");let _=u._inheritedClipPathId,O=u._inheritedMaskId;a&&(m=R(\"rect\",{x:t,y:n,width:r,height:i,fill:\"transparent\",stroke:\"#ff5757\",\"stroke-width\":1,transform:p||void 0,\"clip-path\":_?`url(#${_})`:void 0}));let{backgroundClip:A,filter:L}=u,N=A===\"text\"?`url(#satori_bct-${e})`:_?`url(#${_})`:void 0,C=pn({left:t,top:n,width:r,height:i,path:g,id:e,matrix:p,currentClipPath:N,src:o},u),D=h.map(U=>R(l,{x:t,y:n,width:r,height:i,fill:U,d:g||void 0,transform:p||void 0,\"clip-path\":N,style:L?`filter:${L}`:void 0,mask:O?`url(#${O})`:void 0})).join(\"\"),$=Uo({id:e,left:t,top:n,width:r,height:i,currentClipPathId:_,borderPath:g,borderType:l},u);if(f){let U=(u.borderLeftWidth||0)+(u.paddingLeft||0),M=(u.borderTopWidth||0)+(u.paddingTop||0),q=(u.borderRightWidth||0)+(u.paddingRight||0),ee=(u.borderBottomWidth||0)+(u.paddingBottom||0),G=u.objectFit===\"contain\"?\"xMidYMid\":u.objectFit===\"cover\"?\"xMidYMid slice\":\"none\";D+=R(\"image\",{x:t+U,y:n+M,width:r-U-q,height:i-M-ee,href:o,preserveAspectRatio:G,transform:p||void 0,style:L?`filter:${L}`:void 0,\"clip-path\":`url(#satori_cp-${e})`,mask:`url(#satori_om-${e})`})}if($){y+=$[0];let U=$[1];D+=vt({left:t,top:n,width:r,height:i,props:{transform:p||void 0,\"clip-path\":`url(#${U})`}},u)}let z=$o({width:r,height:i,id:e,opacity:d,shape:R(l,{x:t,y:n,width:r,height:i,fill:\"#fff\",stroke:\"#fff\",\"stroke-width\":0,d:g||void 0,transform:p||void 0,\"clip-path\":N,mask:O?`url(#${O})`:void 0})},u);return(y?R(\"defs\",{},y):\"\")+(z?z[0]:\"\")+C+(d!==1?`<g opacity=\"${d}\">`:\"\")+(b||D)+(d!==1?\"</g>\":\"\")+(z?z[1]:\"\")+m}async function*yt(e,t){let n=Ie(),{id:r,inheritedStyle:i,parent:s,font:o,debug:a,embedFont:u=!0,graphemeImages:f,canLoadAdditionalAssets:l,getTwStyles:p}=t;if(e===null||typeof e>\"u\")return yield,yield,\"\";if(!jr(e)||typeof e.type==\"function\"){let k;if(!jr(e))k=an(String(e),t),yield(await k.next()).value;else{if(ko(e.type))throw new Error(\"Class component is not supported.\");k=yt(e.type(e.props),t),yield(await k.next()).value}await k.next();let F=yield;return(await k.next(F)).value}let{type:y,props:h}=e;if(h&&To(h))throw new Error(\"dangerouslySetInnerHTML property is not supported. See documentation for more information https://github.com/vercel/satori#jsx.\");let{style:d,children:m,tw:b}=h||{};if(b){let k=p(b,d);d=Object.assign(k,d)}let g=n.Node.create();s.insertChild(g,s.getChildCount());let[_,O]=await rn(g,y,i,d,h),A=_.transform===i.transform;if(A||(_.transform.__parent=i.transform),_.overflow===\"hidden\"&&(O._inheritedClipPathId=`satori_cp-${r}`,O._inheritedMaskId=`satori_om-${r}`),_.backgroundClip===\"text\"){let k={value:\"\"};O._inheritedBackgroundClipTextPath=k,_._inheritedBackgroundClipTextPath=k}let L=Oo(m),N=[],C=0,D=[];for(let k of L){let F=yt(k,{id:r+\"-\"+C++,parentStyle:_,inheritedStyle:O,isInheritingTransform:!0,parent:g,font:o,embedFont:u,debug:a,graphemeImages:f,canLoadAdditionalAssets:l,getTwStyles:p});l?D.push(...(await F.next()).value||[]):await F.next(),N.push(F)}yield D;for(let k of N)await k.next();let[$,z]=yield,{left:U,top:M,width:q,height:ee}=g.getComputedLayout();U+=$,M+=z;let G=\"\",re=\"\",Me=\"\";if(y===\"img\"){let k=_.__src;re=await bt({id:r,left:U,top:M,width:q,height:ee,src:k,isInheritingTransform:A,debug:a},_)}else if(y===\"svg\"){let k=Ao(e);re=await bt({id:r,left:U,top:M,width:q,height:ee,src:k,isInheritingTransform:A,debug:a},_)}else{let k=d==null?void 0:d.display;if(y===\"div\"&&m&&typeof m!=\"string\"&&k!==\"flex\"&&k!==\"none\")throw new Error('Expected <div> to have explicit \"display: flex\" or \"display: none\" if it has more than one child node.');re=await bt({id:r,left:U,top:M,width:q,height:ee,isInheritingTransform:A,debug:a},_)}for(let k of N)G+=(await k.next([U,M])).value;return _._inheritedBackgroundClipTextPath&&(Me+=R(\"clipPath\",{id:`satori_bct-${r}`,\"clip-path\":_._inheritedClipPathId?`url(#${_._inheritedClipPathId})`:void 0},_._inheritedBackgroundClipTextPath.value)),Me+re+G}c();import hn from\"@shuding/opentype.js\";function vl(e,t,[n,r],[i,s]){if(n!==i)return n?!i||n===e?-1:i===e?1:e===400&&n===500||e===500&&n===400?-1:e===400&&i===500||e===500&&i===400?1:e<400?n<e&&i<e?i-n:n<e?-1:i<e?1:n-i:e<n&&e<i?n-i:e<n?-1:e<i?1:i-n:1;if(r!==s){if(r===t)return-1;if(s===t)return 1}return-1}var xt=class{constructor(t){this.fonts=new Map;this.addFonts(t)}get({name:t,weight:n,style:r}){if(!this.fonts.has(t))return null;n===\"normal\"&&(n=400),n===\"bold\"&&(n=700),typeof n==\"string\"&&(n=Number.parseInt(n,10));let i=[...this.fonts.get(t)],s=i[0];for(let o=1;o<i.length;o++){let[,a,u]=s,[,f,l]=i[o];vl(n,r,[a,u],[f,l])>0&&(s=i[o])}return s[0]}addFonts(t){for(let n of t){let r=n.data,i=hn.parse(\"buffer\"in r?r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength):r,{lowMemory:!0}),s=i.charToGlyphIndex;i.charToGlyphIndex=a=>{let u=s.call(i,a);return u===0&&i._trackBrokenChars&&i._trackBrokenChars.push(a),u},this.defaultFont||(this.defaultFont=i);let o=n.name.toLowerCase();this.fonts.has(o)||this.fonts.set(o,[]),this.fonts.get(o).push([i,n.weight,n.style])}}getEngine(t=16,n=1.2,{fontFamily:r,fontWeight:i=400,fontStyle:s=\"normal\"}){if(!this.fonts.size)throw new Error(\"No fonts are loaded. At least one font is required to calculate the layout.\");r=(Array.isArray(r)?r:[r]).map(d=>d.toLowerCase());let o=r.map(d=>this.get({name:d,weight:i,style:s})).filter(Boolean),a=Array.from(this.fonts.keys());for(let d of a)r.includes(d)||o.push(this.get({name:d,weight:i,style:s}));let u=new Map,f=(d,m=!0)=>{let b=d.charCodeAt(0);if(u.has(b))return u.get(b);let g=o.find((_,O)=>!!_.charToGlyphIndex(d)||m&&O===o.length-1);return g&&u.set(b,g),g},l=(d,m=!1)=>{var g,_;return((m?(_=(g=d.tables)==null?void 0:g.os2)==null?void 0:_.sTypoAscender:0)||d.ascender)/d.unitsPerEm*t},p=(d,m=!1)=>{var g,_;return((m?(_=(g=d.tables)==null?void 0:g.os2)==null?void 0:_.sTypoDescender:0)||d.descender)/d.unitsPerEm*t},y=d=>f(d,!1),h={has:d=>{if(d===`\n`)return!0;let m=y(d);return m?(m._trackBrokenChars=[],m.stringToGlyphs(d),m._trackBrokenChars.length?(m._trackBrokenChars=void 0,!1):!0):!1},baseline:(d,m=typeof d>\"u\"?o[0]:f(d))=>{let b=l(m,!0),g=p(m,!0),_=h.height(d,m),{yMax:O,yMin:A}=m.tables.head,L=b-g,N=(O/(O-A)-1)*L;return _*((1.2/n+1)/2)+N},height:(d,m=typeof d>\"u\"?o[0]:f(d))=>(l(m)-p(m))*(n/1.2),measure:(d,m)=>this.measure(f,d,m),getSVG:(d,m)=>this.getSVG(f,d,m)};return h}patchFontFallbackResolver(t,n){let r=[];t._trackBrokenChars=r;let i=t.stringToGlyphs;return t.stringToGlyphs=(s,...o)=>{let a=i.call(t,s,...o);for(let u=0;u<a.length;u++)if(a[u].unicode===void 0){let f=r.shift(),l=n(f);if(l!==t){let p=l.charToGlyph(f),y=t.unitsPerEm/l.unitsPerEm,h=new hn.Path;h.unitsPerEm=t.unitsPerEm,h.commands=p.path.commands.map(m=>{let b={...m};for(let g in b)typeof b[g]==\"number\"&&(b[g]*=y);return b});let d=new hn.Glyph({...p,advanceWidth:p.advanceWidth*y,xMin:p.xMin*y,xMax:p.xMax*y,yMin:p.yMin*y,yMax:p.yMax*y,path:h});a[u]=d}}return a},()=>{t.stringToGlyphs=i,t._trackBrokenChars=void 0}}measure(t,n,{fontSize:r,letterSpacing:i=0}){let s=t(n),o=this.patchFontFallbackResolver(s,t);try{return s.getAdvanceWidth(n,r,{letterSpacing:i/r})}finally{o()}}getSVG(t,n,{fontSize:r,top:i,left:s,letterSpacing:o=0}){let a=t(n),u=this.patchFontFallbackResolver(a,t);try{return r===0?\"\":a.getPath(n.replace(/\\n/g,\"\"),s,i,r,{letterSpacing:o/r}).toPathData(1)}finally{u()}}};c();function mn({width:e,height:t,content:n}){return R(\"svg\",{width:e,height:t,viewBox:`0 0 ${e} ${t}`,xmlns:\"http://www.w3.org/2000/svg\"},n)}c();import bl from\"emoji-regex\";var yl=new RegExp(bl(),\"\"),zo={emoji:yl,ja:/\\p{scx=Hira}|\\p{scx=Kana}|[，；：]/u,ko:/\\p{scx=Hangul}/u,zh:/\\p{scx=Han}/u,th:/\\p{scx=Thai}/u,bn:/\\p{scx=Bengali}/u,ar:/\\p{scx=Arabic}/u,ta:/\\p{scx=Tamil}/u,ml:/\\p{scx=Malayalam}/u,he:/\\p{scx=Hebrew}/u,te:/\\p{scx=Telugu}/u,devanagari:/\\p{scx=Devanagari}/u,symbol:/\\p{Symbol}/u,math:/\\p{Math}/u};function Go(e){for(let t in zo)if(zo[t].test(e))return t;return\"unknown\"}c();c();var Su=Cu(eu());c();c();c();c();var s0=[\"ios\",\"android\",\"windows\",\"macos\",\"web\"];function ru(e){return s0.includes(e)}var a0=[\"portrait\",\"landscape\"];function nu(e){return a0.includes(e)}var tu;(function(e){e.fontSize=\"fontSize\",e.lineHeight=\"lineHeight\"})(tu||(tu={}));var B;(function(e){e.rem=\"rem\",e.em=\"em\",e.px=\"px\",e.percent=\"%\",e.vw=\"vw\",e.vh=\"vh\",e.none=\"<no-css-unit>\"})(B||(B={}));function Bi(e){return typeof e==\"string\"}function Ui(e){return typeof e==\"object\"}var zi;function v(e){return{kind:\"complete\",style:e}}function ne(e,t={}){let{fractions:n}=t;if(n&&e.includes(\"/\")){let[s=\"\",o=\"\"]=e.split(\"/\",2),a=ne(s),u=ne(o);return!a||!u?null:[a[0]/u[0],u[1]]}let r=parseFloat(e);if(Number.isNaN(r))return null;let i=e.match(/(([a-z]{2,}|%))$/);if(!i)return[r,B.none];switch(i==null?void 0:i[1]){case\"rem\":return[r,B.rem];case\"px\":return[r,B.px];case\"em\":return[r,B.em];case\"%\":return[r,B.percent];case\"vw\":return[r,B.vw];case\"vh\":return[r,B.vh];default:return null}}function De(e,t,n={}){let r=Ee(t,n);return r===null?null:v({[e]:r})}function Dr(e,t,n){let r=Ee(t);return r!==null&&(n[e]=r),n}function ou(e,t){let n=Ee(t);return n===null?null:{[e]:n}}function Ee(e,t={}){if(e===void 0)return null;let n=ne(String(e),t);return n?Ge(...n,t):null}function Ge(e,t,n={}){let{isNegative:r,device:i}=n;switch(t){case B.rem:return e*16*(r?-1:1);case B.px:return e*(r?-1:1);case B.percent:return`${r?\"-\":\"\"}${e}%`;case B.none:return e*(r?-1:1);case B.vw:return i!=null&&i.windowDimensions?i.windowDimensions.width*(e/100):(he(\"`vw` CSS unit requires configuration with `useDeviceContext()`\"),null);case B.vh:return i!=null&&i.windowDimensions?i.windowDimensions.height*(e/100):(he(\"`vh` CSS unit requires configuration with `useDeviceContext()`\"),null);default:return null}}function Gi(e){let t=ne(e);if(!t)return null;let[n,r]=t;switch(r){case B.rem:return n*16;case B.px:return n;default:return null}}var u0={t:\"Top\",tr:\"TopRight\",tl:\"TopLeft\",b:\"Bottom\",br:\"BottomRight\",bl:\"BottomLeft\",l:\"Left\",r:\"Right\",x:\"Horizontal\",y:\"Vertical\"};function Vi(e){return u0[e!=null?e:\"\"]||\"All\"}function Hi(e){let t=\"All\";return[e.replace(/^-(t|b|r|l|tr|tl|br|bl)(-|$)/,(r,i)=>(t=Vi(i),\"\")),t]}function Ze(e,t={}){if(e.includes(\"/\")){let n=iu(e,{...t,fractions:!0});if(n)return n}return e[0]===\"[\"&&(e=e.slice(1,-1)),iu(e,t)}function Se(e,t,n={}){let r=Ze(t,n);return r===null?null:v({[e]:r})}function iu(e,t={}){if(e===\"px\")return 1;let n=ne(e,t);if(!n)return null;let[r,i]=n;return t.fractions&&(i=B.percent,r*=100),i===B.none&&(r=r/4,i=B.rem),Ge(r,i,t)}function l0(...e){console.warn(...e)}function f0(...e){}var he=typeof process>\"u\"||((zi=process==null?void 0:process.env)===null||zi===void 0?void 0:zi.JEST_WORKER_ID)===void 0?l0:f0;var c0=[[\"aspect-square\",v({aspectRatio:1})],[\"aspect-video\",v({aspectRatio:16/9})],[\"items-center\",v({alignItems:\"center\"})],[\"items-start\",v({alignItems:\"flex-start\"})],[\"items-end\",v({alignItems:\"flex-end\"})],[\"items-baseline\",v({alignItems:\"baseline\"})],[\"items-stretch\",v({alignItems:\"stretch\"})],[\"justify-start\",v({justifyContent:\"flex-start\"})],[\"justify-end\",v({justifyContent:\"flex-end\"})],[\"justify-center\",v({justifyContent:\"center\"})],[\"justify-between\",v({justifyContent:\"space-between\"})],[\"justify-around\",v({justifyContent:\"space-around\"})],[\"justify-evenly\",v({justifyContent:\"space-evenly\"})],[\"content-start\",v({alignContent:\"flex-start\"})],[\"content-end\",v({alignContent:\"flex-end\"})],[\"content-between\",v({alignContent:\"space-between\"})],[\"content-around\",v({alignContent:\"space-around\"})],[\"content-stretch\",v({alignContent:\"stretch\"})],[\"content-center\",v({alignContent:\"center\"})],[\"self-auto\",v({alignSelf:\"auto\"})],[\"self-start\",v({alignSelf:\"flex-start\"})],[\"self-end\",v({alignSelf:\"flex-end\"})],[\"self-center\",v({alignSelf:\"center\"})],[\"self-stretch\",v({alignSelf:\"stretch\"})],[\"self-baseline\",v({alignSelf:\"baseline\"})],[\"direction-inherit\",v({direction:\"inherit\"})],[\"direction-ltr\",v({direction:\"ltr\"})],[\"direction-rtl\",v({direction:\"rtl\"})],[\"hidden\",v({display:\"none\"})],[\"flex\",v({display:\"flex\"})],[\"flex-row\",v({flexDirection:\"row\"})],[\"flex-row-reverse\",v({flexDirection:\"row-reverse\"})],[\"flex-col\",v({flexDirection:\"column\"})],[\"flex-col-reverse\",v({flexDirection:\"column-reverse\"})],[\"flex-wrap\",v({flexWrap:\"wrap\"})],[\"flex-wrap-reverse\",v({flexWrap:\"wrap-reverse\"})],[\"flex-nowrap\",v({flexWrap:\"nowrap\"})],[\"flex-auto\",v({flexGrow:1,flexShrink:1,flexBasis:\"auto\"})],[\"flex-initial\",v({flexGrow:0,flexShrink:1,flexBasis:\"auto\"})],[\"flex-none\",v({flexGrow:0,flexShrink:0,flexBasis:\"auto\"})],[\"overflow-hidden\",v({overflow:\"hidden\"})],[\"overflow-visible\",v({overflow:\"visible\"})],[\"overflow-scroll\",v({overflow:\"scroll\"})],[\"absolute\",v({position:\"absolute\"})],[\"relative\",v({position:\"relative\"})],[\"italic\",v({fontStyle:\"italic\"})],[\"not-italic\",v({fontStyle:\"normal\"})],[\"oldstyle-nums\",Jt(\"oldstyle-nums\")],[\"small-caps\",Jt(\"small-caps\")],[\"lining-nums\",Jt(\"lining-nums\")],[\"tabular-nums\",Jt(\"tabular-nums\")],[\"proportional-nums\",Jt(\"proportional-nums\")],[\"font-thin\",v({fontWeight:\"100\"})],[\"font-100\",v({fontWeight:\"100\"})],[\"font-extralight\",v({fontWeight:\"200\"})],[\"font-200\",v({fontWeight:\"200\"})],[\"font-light\",v({fontWeight:\"300\"})],[\"font-300\",v({fontWeight:\"300\"})],[\"font-normal\",v({fontWeight:\"normal\"})],[\"font-400\",v({fontWeight:\"400\"})],[\"font-medium\",v({fontWeight:\"500\"})],[\"font-500\",v({fontWeight:\"500\"})],[\"font-semibold\",v({fontWeight:\"600\"})],[\"font-600\",v({fontWeight:\"600\"})],[\"font-bold\",v({fontWeight:\"bold\"})],[\"font-700\",v({fontWeight:\"700\"})],[\"font-extrabold\",v({fontWeight:\"800\"})],[\"font-800\",v({fontWeight:\"800\"})],[\"font-black\",v({fontWeight:\"900\"})],[\"font-900\",v({fontWeight:\"900\"})],[\"include-font-padding\",v({includeFontPadding:!0})],[\"remove-font-padding\",v({includeFontPadding:!1})],[\"max-w-none\",v({maxWidth:\"99999%\"})],[\"text-left\",v({textAlign:\"left\"})],[\"text-center\",v({textAlign:\"center\"})],[\"text-right\",v({textAlign:\"right\"})],[\"text-justify\",v({textAlign:\"justify\"})],[\"text-auto\",v({textAlign:\"auto\"})],[\"underline\",v({textDecorationLine:\"underline\"})],[\"line-through\",v({textDecorationLine:\"line-through\"})],[\"no-underline\",v({textDecorationLine:\"none\"})],[\"uppercase\",v({textTransform:\"uppercase\"})],[\"lowercase\",v({textTransform:\"lowercase\"})],[\"capitalize\",v({textTransform:\"capitalize\"})],[\"normal-case\",v({textTransform:\"none\"})],[\"w-auto\",v({width:\"auto\"})],[\"h-auto\",v({height:\"auto\"})],[\"shadow-sm\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:1,shadowOpacity:.025,elevation:1})],[\"shadow\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:1,shadowOpacity:.075,elevation:2})],[\"shadow-md\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:3,shadowOpacity:.125,elevation:3})],[\"shadow-lg\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.15,shadowRadius:8,elevation:8})],[\"shadow-xl\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.19,shadowRadius:20,elevation:12})],[\"shadow-2xl\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.25,shadowRadius:30,elevation:16})],[\"shadow-none\",v({shadowOffset:{width:0,height:0},shadowColor:\"#000\",shadowRadius:0,shadowOpacity:0,elevation:0})]],ji=c0;function Jt(e){return{kind:\"dependent\",complete(t){(!t.fontVariant||!Array.isArray(t.fontVariant))&&(t.fontVariant=[]),t.fontVariant.push(e)}}}var Kt=class{constructor(t){this.ir=new Map(ji),this.styles=new Map,this.prefixes=new Map,this.ir=new Map([...ji,...t!=null?t:[]])}getStyle(t){return this.styles.get(t)}setStyle(t,n){this.styles.set(t,n)}getIr(t){return this.ir.get(t)}setIr(t,n){this.ir.set(t,n)}getPrefixMatch(t){return this.prefixes.get(t)}setPrefixMatch(t,n){this.prefixes.set(t,n)}};c();c();function Yi(e,t,n={}){let r=t==null?void 0:t[e];if(!r)return Se(\"fontSize\",e,n);if(typeof r==\"string\")return De(\"fontSize\",r);let i={},[s,o]=r,a=ou(\"fontSize\",s);if(a&&(i=a),typeof o==\"string\")return v(Dr(\"lineHeight\",su(o,i),i));let{lineHeight:u,letterSpacing:f}=o;return u&&Dr(\"lineHeight\",su(u,i),i),f&&Dr(\"letterSpacing\",f,i),v(i)}function su(e,t){let n=ne(e);if(n){let[r,i]=n;if((i===B.none||i===B.em)&&typeof t.fontSize==\"number\")return t.fontSize*r}return e}c();function Xi(e,t){var n;let r=(n=t==null?void 0:t[e])!==null&&n!==void 0?n:e.startsWith(\"[\")?e.slice(1,-1):e,i=ne(r);if(!i)return null;let[s,o]=i;if(o===B.none)return{kind:\"dependent\",complete(u){if(typeof u.fontSize!=\"number\")return\"relative line-height utilities require that font-size be set\";u.lineHeight=u.fontSize*s}};let a=Ge(s,o);return a!==null?v({lineHeight:a}):null}c();function Qi(e,t,n,r,i){let s=\"\";if(r[0]===\"[\")s=r.slice(1,-1);else{let f=i==null?void 0:i[r];if(f)s=f;else{let l=Ze(r);return l&&typeof l==\"number\"?au(l,B.px,t,e):null}}if(s===\"auto\")return uu(t,e,\"auto\");let o=ne(s);if(!o)return null;let[a,u]=o;return n&&(a=-a),au(a,u,t,e)}function au(e,t,n,r){let i=Ge(e,t);return i===null?null:uu(n,r,i)}function uu(e,t,n){switch(e){case\"All\":return{kind:\"complete\",style:{[`${t}Top`]:n,[`${t}Right`]:n,[`${t}Bottom`]:n,[`${t}Left`]:n}};case\"Bottom\":case\"Top\":case\"Left\":case\"Right\":return{kind:\"complete\",style:{[`${t}${e}`]:n}};case\"Vertical\":return{kind:\"complete\",style:{[`${t}Top`]:n,[`${t}Bottom`]:n}};case\"Horizontal\":return{kind:\"complete\",style:{[`${t}Left`]:n,[`${t}Right`]:n}};default:return null}}c();function Ji(e){if(!e)return{};let t=Object.entries(e).reduce((i,[s,o])=>{let a=[0,1/0,0],u=typeof o==\"string\"?{min:o}:o,f=u.min?Gi(u.min):0;f===null?he(`invalid screen config value: ${s}->min: ${u.min}`):a[0]=f;let l=u.max?Gi(u.max):1/0;return l===null?he(`invalid screen config value: ${s}->max: ${u.max}`):a[1]=l,i[s]=a,i},{}),n=Object.values(t);n.sort((i,s)=>{let[o,a]=i,[u,f]=s;return a===1/0||f===1/0?o-u:a-f});let r=0;return n.forEach(i=>i[2]=r++),t}c();function Ki(e,t){let n=t==null?void 0:t[e];if(!n)return null;if(typeof n==\"string\")return v({fontFamily:n});let r=n[0];return r?v({fontFamily:r}):null}c();function et(e,t,n){if(!n)return null;let r;t.includes(\"/\")&&([t=\"\",r]=t.split(\"/\",2));let i=\"\";if(t.startsWith(\"[#\")||t.startsWith(\"[rgb\")?i=t.slice(1,-1):i=cu(t,n),!i)return null;if(r){let s=Number(r);if(!Number.isNaN(s))return i=lu(i,s/100),v({[Mr[e].color]:i})}return{kind:\"dependent\",complete(s){let o=Mr[e].opacity,a=s[o];typeof a==\"number\"&&(i=lu(i,a)),s[Mr[e].color]=i}}}function Zt(e,t){let n=parseInt(t,10);if(Number.isNaN(n))return null;let r=n/100,i={[Mr[e].opacity]:r};return{kind:\"complete\",style:i}}function lu(e,t){return e.startsWith(\"#\")?e=d0(e):e.startsWith(\"rgb(\")&&(e=e.replace(/^rgb\\(/,\"rgba(\").replace(/\\)$/,\", 1)\")),e.replace(/, ?\\d*\\.?(\\d+)\\)$/,`, ${t})`)}function fu(e){for(let t in e)t.startsWith(\"__opacity_\")&&delete e[t]}var Mr={bg:{opacity:\"__opacity_bg\",color:\"backgroundColor\"},text:{opacity:\"__opacity_text\",color:\"color\"},border:{opacity:\"__opacity_border\",color:\"borderColor\"},borderTop:{opacity:\"__opacity_border\",color:\"borderTopColor\"},borderBottom:{opacity:\"__opacity_border\",color:\"borderBottomColor\"},borderLeft:{opacity:\"__opacity_border\",color:\"borderLeftColor\"},borderRight:{opacity:\"__opacity_border\",color:\"borderRightColor\"},shadow:{opacity:\"__opacity_shadow\",color:\"shadowColor\"},tint:{opacity:\"__opacity_tint\",color:\"tintColor\"}};function d0(e){let t=e;e=e.replace(p0,(o,a,u,f)=>a+a+u+u+f+f);let n=h0.exec(e);if(!n)return he(`invalid config hex color value: ${t}`),\"rgba(0, 0, 0, 1)\";let r=parseInt(n[1],16),i=parseInt(n[2],16),s=parseInt(n[3],16);return`rgba(${r}, ${i}, ${s}, 1)`}function cu(e,t){let n=t[e];if(Bi(n))return n;if(Ui(n)&&Bi(n.DEFAULT))return n.DEFAULT;let[r=\"\",...i]=e.split(\"-\");for(;r!==e;){let s=t[r];if(Ui(s))return cu(i.join(\"-\"),s);if(i.length===0)return\"\";r=`${r}-${i.shift()}`}return\"\"}var p0=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,h0=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;c();function pu(e,t){let[n,r]=Hi(e);if(n.match(/^(-?(\\d)+)?$/))return m0(n,r,t==null?void 0:t.borderWidth);if(n=n.replace(/^-/,\"\"),[\"dashed\",\"solid\",\"dotted\"].includes(n))return v({borderStyle:n});let s=\"border\";switch(r){case\"Bottom\":s=\"borderBottom\";break;case\"Top\":s=\"borderTop\";break;case\"Left\":s=\"borderLeft\";break;case\"Right\":s=\"borderRight\";break}let o=et(s,n,t==null?void 0:t.borderColor);if(o)return o;let a=`border${r===\"All\"?\"\":r}Width`;n=n.replace(/^-/,\"\");let u=n.slice(1,-1),f=Se(a,u);return typeof(f==null?void 0:f.style[a])!=\"number\"?null:f}function m0(e,t,n){if(!n)return null;e=e.replace(/^-/,\"\");let i=n[e===\"\"?\"DEFAULT\":e];if(i===void 0)return null;let s=`border${t===\"All\"?\"\":t}Width`;return De(s,i)}function hu(e,t){if(!t)return null;let[n,r]=Hi(e);n=n.replace(/^-/,\"\"),n===\"\"&&(n=\"DEFAULT\");let i=`border${r===\"All\"?\"\":r}Radius`,s=t[n];if(s)return du(De(i,s));let o=Se(i,n);return typeof(o==null?void 0:o.style[i])!=\"number\"?null:du(o)}function du(e){if((e==null?void 0:e.kind)!==\"complete\")return e;let t=e.style.borderTopRadius;t!==void 0&&(e.style.borderTopLeftRadius=t,e.style.borderTopRightRadius=t,delete e.style.borderTopRadius);let n=e.style.borderBottomRadius;n!==void 0&&(e.style.borderBottomLeftRadius=n,e.style.borderBottomRightRadius=n,delete e.style.borderBottomRadius);let r=e.style.borderLeftRadius;r!==void 0&&(e.style.borderBottomLeftRadius=r,e.style.borderTopLeftRadius=r,delete e.style.borderLeftRadius);let i=e.style.borderRightRadius;return i!==void 0&&(e.style.borderBottomRightRadius=i,e.style.borderTopRightRadius=i,delete e.style.borderRightRadius),e}c();function ut(e,t,n,r){let i=null;e===\"inset\"&&(t=t.replace(/^(x|y)-/,(a,u)=>(i=u===\"x\"?\"x\":\"y\",\"\")));let s=r==null?void 0:r[t];if(s){let a=Ee(s,{isNegative:n});if(a!==null)return mu(e,i,a)}let o=Ze(t,{isNegative:n});return o!==null?mu(e,i,o):null}function mu(e,t,n){if(e!==\"inset\")return v({[e]:n});switch(t){case null:return v({top:n,left:n,right:n,bottom:n});case\"y\":return v({top:n,bottom:n});case\"x\":return v({left:n,right:n})}}c();function er(e,t,n){var r;t=t.replace(/^-/,\"\");let i=t===\"\"?\"DEFAULT\":t,s=Number((r=n==null?void 0:n[i])!==null&&r!==void 0?r:t);return Number.isNaN(s)?null:v({[`flex${e}`]:s})}function gu(e,t){var n,r;if(e=(t==null?void 0:t[e])||e,[\"min-content\",\"revert\",\"unset\"].includes(e))return null;if(e.match(/^\\d+(\\.\\d+)?$/))return v({flexGrow:Number(e),flexBasis:\"0%\"});let i=e.match(/^(\\d+)\\s+(\\d+)$/);if(i)return v({flexGrow:Number(i[1]),flexShrink:Number(i[2])});if(i=e.match(/^(\\d+)\\s+([^ ]+)$/),i){let s=Ee((n=i[2])!==null&&n!==void 0?n:\"\");return s?v({flexGrow:Number(i[1]),flexBasis:s}):null}if(i=e.match(/^(\\d+)\\s+(\\d+)\\s+(.+)$/),i){let s=Ee((r=i[3])!==null&&r!==void 0?r:\"\");return s?v({flexGrow:Number(i[1]),flexShrink:Number(i[2]),flexBasis:s}):null}return null}c();function Zi(e,t,n={},r){let i=r==null?void 0:r[t];return i!==void 0?De(e,i,n):Se(e,t,n)}function tr(e,t,n={},r){let i=Ee(r==null?void 0:r[t],n);return i?v({[e]:i}):(t===\"screen\"&&(t=e.includes(\"Width\")?\"100vw\":\"100vh\"),Se(e,t,n))}c();function vu(e,t,n){let r=n==null?void 0:n[e];if(r){let i=ne(r,{isNegative:t});if(!i)return null;let[s,o]=i;if(o===B.em)return g0(s);if(o===B.percent)return he(\"percentage-based letter-spacing configuration currently unsupported, switch to `em`s, or open an issue if you'd like to see support added.\"),null;let a=Ge(s,o,{isNegative:t});return a!==null?v({letterSpacing:a}):null}return Se(\"letterSpacing\",e,{isNegative:t})}function g0(e){return{kind:\"dependent\",complete(t){let n=t.fontSize;if(typeof n!=\"number\"||Number.isNaN(n))return\"tracking-X relative letter spacing classes require font-size to be set\";t.letterSpacing=Math.round((e*n+Number.EPSILON)*100)/100}}}c();function bu(e,t){let n=t==null?void 0:t[e];if(n){let i=ne(String(n));if(i)return v({opacity:i[0]})}let r=ne(e);return r?v({opacity:r[0]/100}):null}c();function yu(e){let t=parseInt(e,10);return Number.isNaN(t)?null:{kind:\"complete\",style:{shadowOpacity:t/100}}}function xu(e){if(e.includes(\"/\")){let[n=\"\",r=\"\"]=e.split(\"/\",2),i=eo(n),s=eo(r);return i===null||s===null?null:{kind:\"complete\",style:{shadowOffset:{width:i,height:s}}}}let t=eo(e);return t===null?null:{kind:\"complete\",style:{shadowOffset:{width:t,height:t}}}}function eo(e){let t=Ze(e);return typeof t==\"number\"?t:null}var lt=class{constructor(t,n={},r,i,s){var o,a,u,f,l,p;this.config=n,this.cache=r,this.position=0,this.isNull=!1,this.isNegative=!1,this.context={},this.context.device=i;let y=t.trim().split(\":\"),h=[];y.length===1?this.string=t:(this.string=(o=y.pop())!==null&&o!==void 0?o:\"\",h=y),this.char=this.string[0];let d=Ji((a=this.config.theme)===null||a===void 0?void 0:a.screens);for(let m of h)if(d[m]){let b=(u=d[m])===null||u===void 0?void 0:u[2];b!==void 0&&(this.order=((f=this.order)!==null&&f!==void 0?f:0)+b);let g=(l=i.windowDimensions)===null||l===void 0?void 0:l.width;if(g){let[_,O]=(p=d[m])!==null&&p!==void 0?p:[0,0];(g<=_||g>O)&&(this.isNull=!0)}else this.isNull=!0}else ru(m)?this.isNull=m!==s:nu(m)?i.windowDimensions?(i.windowDimensions.width>i.windowDimensions.height?\"landscape\":\"portrait\")!==m?this.isNull=!0:this.incrementOrder():this.isNull=!0:m===\"retina\"?i.pixelDensity===2?this.incrementOrder():this.isNull=!0:m===\"dark\"?i.colorScheme!==\"dark\"?this.isNull=!0:this.incrementOrder():this.handlePossibleArbitraryBreakpointPrefix(m)||(this.isNull=!0)}parse(){if(this.isNull)return{kind:\"null\"};let t=this.cache.getIr(this.rest);if(t)return t;this.parseIsNegative();let n=this.parseUtility();return n?this.order!==void 0?{kind:\"ordered\",order:this.order,styleIr:n}:n:{kind:\"null\"}}parseUtility(){var t,n,r,i,s;let o=this.config.theme,a=null;switch(this.char){case\"m\":case\"p\":{let u=this.peekSlice(1,3).match(/^(t|b|r|l|x|y)?-/);if(u){let f=this.char===\"m\"?\"margin\":\"padding\";this.advance(((n=(t=u[0])===null||t===void 0?void 0:t.length)!==null&&n!==void 0?n:0)+1);let l=Vi(u[1]),p=Qi(f,l,this.isNegative,this.rest,(r=this.config.theme)===null||r===void 0?void 0:r[f]);if(p)return p}}}if(this.consumePeeked(\"h-\")&&(a=Zi(\"height\",this.rest,this.context,o==null?void 0:o.height),a)||this.consumePeeked(\"w-\")&&(a=Zi(\"width\",this.rest,this.context,o==null?void 0:o.width),a)||this.consumePeeked(\"min-w-\")&&(a=tr(\"minWidth\",this.rest,this.context,o==null?void 0:o.minWidth),a)||this.consumePeeked(\"min-h-\")&&(a=tr(\"minHeight\",this.rest,this.context,o==null?void 0:o.minHeight),a)||this.consumePeeked(\"max-w-\")&&(a=tr(\"maxWidth\",this.rest,this.context,o==null?void 0:o.maxWidth),a)||this.consumePeeked(\"max-h-\")&&(a=tr(\"maxHeight\",this.rest,this.context,o==null?void 0:o.maxHeight),a)||this.consumePeeked(\"leading-\")&&(a=Xi(this.rest,o==null?void 0:o.lineHeight),a)||this.consumePeeked(\"text-\")&&(a=Yi(this.rest,o==null?void 0:o.fontSize,this.context),a||(a=et(\"text\",this.rest,o==null?void 0:o.textColor),a)||this.consumePeeked(\"opacity-\")&&(a=Zt(\"text\",this.rest),a))||this.consumePeeked(\"font-\")&&(a=Ki(this.rest,o==null?void 0:o.fontFamily),a)||this.consumePeeked(\"aspect-\")&&(this.consumePeeked(\"ratio-\")&&he(\"`aspect-ratio-{ratio}` is deprecated, use `aspect-{ratio}` instead\"),a=De(\"aspectRatio\",this.rest,{fractions:!0}),a)||this.consumePeeked(\"tint-\")&&(a=et(\"tint\",this.rest,o==null?void 0:o.colors),a)||this.consumePeeked(\"bg-\")&&(a=et(\"bg\",this.rest,o==null?void 0:o.backgroundColor),a||this.consumePeeked(\"opacity-\")&&(a=Zt(\"bg\",this.rest),a))||this.consumePeeked(\"border\")&&(a=pu(this.rest,o),a||this.consumePeeked(\"-opacity-\")&&(a=Zt(\"border\",this.rest),a))||this.consumePeeked(\"rounded\")&&(a=hu(this.rest,o==null?void 0:o.borderRadius),a)||this.consumePeeked(\"bottom-\")&&(a=ut(\"bottom\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"top-\")&&(a=ut(\"top\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"left-\")&&(a=ut(\"left\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"right-\")&&(a=ut(\"right\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"inset-\")&&(a=ut(\"inset\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"flex-\")&&(this.consumePeeked(\"grow\")?a=er(\"Grow\",this.rest,o==null?void 0:o.flexGrow):this.consumePeeked(\"shrink\")?a=er(\"Shrink\",this.rest,o==null?void 0:o.flexShrink):a=gu(this.rest,o==null?void 0:o.flex),a)||this.consumePeeked(\"grow\")&&(a=er(\"Grow\",this.rest,o==null?void 0:o.flexGrow),a)||this.consumePeeked(\"shrink\")&&(a=er(\"Shrink\",this.rest,o==null?void 0:o.flexShrink),a)||this.consumePeeked(\"shadow-color-opacity-\")&&(a=Zt(\"shadow\",this.rest),a)||this.consumePeeked(\"shadow-opacity-\")&&(a=yu(this.rest),a)||this.consumePeeked(\"shadow-offset-\")&&(a=xu(this.rest),a)||this.consumePeeked(\"shadow-radius-\")&&(a=Se(\"shadowRadius\",this.rest),a)||this.consumePeeked(\"shadow-\")&&(a=et(\"shadow\",this.rest,o==null?void 0:o.colors),a))return a;if(this.consumePeeked(\"elevation-\")){let u=parseInt(this.rest,10);if(!Number.isNaN(u))return v({elevation:u})}if(this.consumePeeked(\"opacity-\")&&(a=bu(this.rest,o==null?void 0:o.opacity),a)||this.consumePeeked(\"tracking-\")&&(a=vu(this.rest,this.isNegative,o==null?void 0:o.letterSpacing),a))return a;if(this.consumePeeked(\"z-\")){let u=Number((s=(i=o==null?void 0:o.zIndex)===null||i===void 0?void 0:i[this.rest])!==null&&s!==void 0?s:this.rest);if(!Number.isNaN(u))return v({zIndex:u})}return he(`\\`${this.rest}\\` unknown or invalid utility`),null}handlePossibleArbitraryBreakpointPrefix(t){var n;if(t[0]!==\"m\")return!1;let r=t.match(/^(min|max)-(w|h)-\\[([^\\]]+)\\]$/);if(!r)return!1;if(!(!((n=this.context.device)===null||n===void 0)&&n.windowDimensions))return this.isNull=!0,!0;let i=this.context.device.windowDimensions,[,s=\"\",o=\"\",a=\"\"]=r,u=o===\"w\"?i.width:i.height,f=ne(a,this.context);if(f===null)return this.isNull=!0,!0;let[l,p]=f;return p!==\"px\"&&(this.isNull=!0),(s===\"min\"?u>=l:u<=l)?this.incrementOrder():this.isNull=!0,!0}advance(t=1){this.position+=t,this.char=this.string[this.position]}get rest(){return this.peekSlice(0,this.string.length)}peekSlice(t,n){return this.string.slice(this.position+t,this.position+n)}consumePeeked(t){return this.peekSlice(0,t.length)===t?(this.advance(t.length),!0):!1}parseIsNegative(){this.char===\"-\"&&(this.advance(),this.isNegative=!0,this.context.isNegative=!0)}incrementOrder(){var t;this.order=((t=this.order)!==null&&t!==void 0?t:0)+1}};c();function wu(e){let t=[],n=null;return e.forEach(r=>{if(typeof r==\"string\")t=[...t,...to(r)];else if(Array.isArray(r))t=[...t,...r.flatMap(to)];else if(typeof r==\"object\"&&r!==null)for(let[i,s]of Object.entries(r))typeof s==\"boolean\"?t=[...t,...s?to(i):[]]:n?n[i]=s:n={[i]:s}}),[t.filter(Boolean).filter(v0),n]}function to(e){return e.trim().split(/\\s+/)}function v0(e,t,n){return n.indexOf(e)===t}c();function _u(e){var t;return(t=e==null?void 0:e.reduce((n,r)=>({...n,...b0(r.handler)}),{}))!==null&&t!==void 0?t:{}}function b0(e){let t={};return e({addUtilities:n=>{t=n},...y0}),t}function Pe(e){throw new Error(`tailwindcss plugin function argument object prop \"${e}\" not implemented`)}var y0={addComponents:Pe,addBase:Pe,addVariant:Pe,e:Pe,prefix:Pe,theme:Pe,variants:Pe,config:Pe,corePlugins:Pe,matchUtilities:Pe,postcss:null};function ku(e,t){let n=(0,Su.default)(x0(e)),r={},i=_u(n.plugins),s={},o=Object.entries(i).map(([d,m])=>typeof m==\"string\"?(s[d]=m,[d,{kind:\"null\"}]):[d,v(m)]).filter(([,d])=>d.kind!==\"null\");function a(){return[r.windowDimensions?`w${r.windowDimensions.width}`:!1,r.windowDimensions?`h${r.windowDimensions.height}`:!1,r.fontScale?`fs${r.fontScale}`:!1,r.colorScheme===\"dark\"?\"dark\":!1,r.pixelDensity===2?\"retina\":!1].filter(Boolean).join(\"--\")||\"default\"}let u=a(),f={};function l(){let d=f[u];if(d)return d;let m=new Kt(o);return f[u]=m,m}function p(...d){let m=l(),b={},g=[],_=[],[O,A]=wu(d),L=O.join(\" \"),N=m.getStyle(L);if(N)return{...N,...A||{}};for(let C of O){let D=m.getIr(C);if(!D&&C in s){let z=p(s[C]);m.setIr(C,v(z)),b={...b,...z};continue}switch(D=new lt(C,n,m,r,t).parse(),D.kind){case\"complete\":b={...b,...D.style},m.setIr(C,D);break;case\"dependent\":g.push(D);break;case\"ordered\":_.push(D);break;case\"null\":m.setIr(C,D);break}}if(_.length>0){_.sort((C,D)=>C.order-D.order);for(let C of _)switch(C.styleIr.kind){case\"complete\":b={...b,...C.styleIr.style};break;case\"dependent\":g.push(C.styleIr);break}}if(g.length>0){for(let C of g){let D=C.complete(b);D&&he(D)}fu(b)}return L!==\"\"&&m.setStyle(L,b),A&&(b={...b,...A}),b}function y(d){let m=p(d.split(/\\s+/g).map(b=>b.replace(/^(bg|text|border)-/,\"\")).map(b=>`bg-${b}`).join(\" \"));return typeof m.backgroundColor==\"string\"?m.backgroundColor:void 0}let h=(d,...m)=>{let b=\"\";return d.forEach((g,_)=>{var O;b+=g+((O=m[_])!==null&&O!==void 0?O:\"\")}),p(b)};return h.style=p,h.color=y,h.prefixMatch=(...d)=>{let m=d.sort().join(\":\"),b=l(),g=b.getPrefixMatch(m);if(g!==void 0)return g;let A=new lt(`${m}:flex`,n,b,r,t).parse().kind!==\"null\";return b.setPrefixMatch(m,A),A},h.setWindowDimensions=d=>{r.windowDimensions=d,u=a()},h.setFontScale=d=>{r.fontScale=d,u=a()},h.setPixelDensity=d=>{r.pixelDensity=d,u=a()},h.setColorScheme=d=>{r.colorScheme=d,u=a()},h}function x0(e){return{...e,content:[\"_no_warnings_please\"]}}var _0={plugins:[{handler:({addUtilities:e})=>{e({\"shadow-sm\":{boxShadow:\"0 1px 2px 0 rgb(0 0 0 / 0.05)\"},shadow:{boxShadow:\"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\"},\"shadow-md\":{boxShadow:\"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\"},\"shadow-lg\":{boxShadow:\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\"},\"shadow-xl\":{boxShadow:\"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\"},\"shadow-2xl\":{boxShadow:\"0 25px 50px -12px rgb(0 0 0 / 0.25)\"},\"shadow-inner\":{boxShadow:\"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\"},\"shadow-none\":{boxShadow:\"0 0 #0000\"}})}}]};function S0(){return ku(_0,\"web\")}var Fr;function ro({width:e,height:t}){return Fr||(Fr=S0()),Fr.setWindowDimensions({width:+e,height:+t}),Fr}var no=new WeakMap;async function Tu(e,t){let n=Ie();if(!n||!n.Node)throw new Error(\"Satori is not initialized: expect `yoga` to be loaded, got \"+n);t.fonts=t.fonts||[];let r;no.has(t.fonts)?r=no.get(t.fonts):no.set(t.fonts,r=new xt(t.fonts));let i=\"width\"in t?t.width:void 0,s=\"height\"in t?t.height:void 0,o=n.Node.create();i&&o.setWidth(i),s&&o.setHeight(s),o.setFlexDirection(n.FLEX_DIRECTION_ROW),o.setFlexWrap(n.WRAP_WRAP),o.setAlignContent(n.ALIGN_AUTO),o.setAlignItems(n.ALIGN_FLEX_START),o.setJustifyContent(n.JUSTIFY_FLEX_START),o.setOverflow(n.OVERFLOW_HIDDEN);let a={...t.graphemeImages},u=yt(e,{id:\"id\",parentStyle:{},inheritedStyle:{fontSize:16,fontWeight:\"normal\",fontFamily:\"serif\",fontStyle:\"normal\",lineHeight:1.2,color:\"black\",opacity:1,whiteSpace:\"normal\",_viewportWidth:i,_viewportHeight:s},parent:o,font:r,embedFont:t.embedFont,debug:t.debug,graphemeImages:a,canLoadAdditionalAssets:!!t.loadAdditionalAsset,getTwStyles:(h,d)=>{let b={...ro({width:i,height:s})([h])};return typeof b.lineHeight==\"number\"&&(b.lineHeight=b.lineHeight/(+b.fontSize||d.fontSize||16)),b.shadowColor&&b.boxShadow&&(b.boxShadow=b.boxShadow.replace(/rgba?\\([^)]+\\)/,b.shadowColor)),b}}),f=(await u.next()).value;if(t.loadAdditionalAsset&&f.length){f=Array.from(new Set(je(f.join(\"\"),\"grapheme\")));let h={};f.forEach(b=>{let g=Go(b);h[g]=h[g]||[],g===\"emoji\"?h[g].push(b):h[g][0]=(h[g][0]||\"\")+b});let d=[],m={};await Promise.all(Object.entries(h).flatMap(([b,g])=>g.map(_=>t.loadAdditionalAsset(b,_).then(O=>{typeof O==\"string\"?m[_]=O:O&&d.push(O)})))),r.addFonts(d),Object.assign(a,m)}await u.next(),o.calculateLayout(i,s,n.DIRECTION_LTR);let l=(await u.next([0,0])).value,p=o.getComputedWidth(),y=o.getComputedHeight();return o.freeRecursive(),mn({width:p,height:y,content:l})}export{Tu as default,Du as init};\n//# sourceMappingURL=index.wasm.js.map","var L=(T,t)=>()=>(t||T((t={exports:{}}).exports,t),t.exports);var R=L((D,u)=>{var S={ALIGN_COUNT:8,ALIGN_AUTO:0,ALIGN_FLEX_START:1,ALIGN_CENTER:2,ALIGN_FLEX_END:3,ALIGN_STRETCH:4,ALIGN_BASELINE:5,ALIGN_SPACE_BETWEEN:6,ALIGN_SPACE_AROUND:7,DIMENSION_COUNT:2,DIMENSION_WIDTH:0,DIMENSION_HEIGHT:1,DIRECTION_COUNT:3,DIRECTION_INHERIT:0,DIRECTION_LTR:1,DIRECTION_RTL:2,DISPLAY_COUNT:2,DISPLAY_FLEX:0,DISPLAY_NONE:1,EDGE_COUNT:9,EDGE_LEFT:0,EDGE_TOP:1,EDGE_RIGHT:2,EDGE_BOTTOM:3,EDGE_START:4,EDGE_END:5,EDGE_HORIZONTAL:6,EDGE_VERTICAL:7,EDGE_ALL:8,EXPERIMENTAL_FEATURE_COUNT:1,EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS:0,FLEX_DIRECTION_COUNT:4,FLEX_DIRECTION_COLUMN:0,FLEX_DIRECTION_COLUMN_REVERSE:1,FLEX_DIRECTION_ROW:2,FLEX_DIRECTION_ROW_REVERSE:3,JUSTIFY_COUNT:6,JUSTIFY_FLEX_START:0,JUSTIFY_CENTER:1,JUSTIFY_FLEX_END:2,JUSTIFY_SPACE_BETWEEN:3,JUSTIFY_SPACE_AROUND:4,JUSTIFY_SPACE_EVENLY:5,LOG_LEVEL_COUNT:6,LOG_LEVEL_ERROR:0,LOG_LEVEL_WARN:1,LOG_LEVEL_INFO:2,LOG_LEVEL_DEBUG:3,LOG_LEVEL_VERBOSE:4,LOG_LEVEL_FATAL:5,MEASURE_MODE_COUNT:3,MEASURE_MODE_UNDEFINED:0,MEASURE_MODE_EXACTLY:1,MEASURE_MODE_AT_MOST:2,NODE_TYPE_COUNT:2,NODE_TYPE_DEFAULT:0,NODE_TYPE_TEXT:1,OVERFLOW_COUNT:3,OVERFLOW_VISIBLE:0,OVERFLOW_HIDDEN:1,OVERFLOW_SCROLL:2,POSITION_TYPE_COUNT:2,POSITION_TYPE_RELATIVE:0,POSITION_TYPE_ABSOLUTE:1,PRINT_OPTIONS_COUNT:3,PRINT_OPTIONS_LAYOUT:1,PRINT_OPTIONS_STYLE:2,PRINT_OPTIONS_CHILDREN:4,UNIT_COUNT:4,UNIT_UNDEFINED:0,UNIT_POINT:1,UNIT_PERCENT:2,UNIT_AUTO:3,WRAP_COUNT:3,WRAP_NO_WRAP:0,WRAP_WRAP:1,WRAP_WRAP_REVERSE:2};u.exports=S});var U=L((P,A)=>{var _=R(),a=class{left;right;top;bottom;width;height;constructor(t,N,E,e,s,o){this.left=t,this.right=N,this.top=E,this.bottom=e,this.width=s,this.height=o}fromJS(t){t(this.left,this.right,this.top,this.bottom,this.width,this.height)}toString(){return`<Layout#${this.left}:${this.right};${this.top}:${this.bottom};${this.width}:${this.height}>`}},h=class{static fromJS({width:t,height:N}){return new h(t,N)}width;height;constructor(t,N){this.width=t,this.height=N}fromJS(t){t(this.width,this.height)}toString(){return`<Size#${this.width}x${this.height}>`}},n=class{unit;value;constructor(t,N){this.unit=t,this.value=N}fromJS(t){t(this.unit,this.value)}toString(){switch(this.unit){case _.UNIT_POINT:return String(this.value);case _.UNIT_PERCENT:return`${this.value}%`;case _.UNIT_AUTO:return\"auto\";default:return`${this.value}?`}}valueOf(){return this.value}};function O(T,t,N){let E=T[t];T[t]=function(...e){return N.call(this,E,...e)}}A.exports=(T,t)=>{for(let E of[\"setPosition\",\"setMargin\",\"setFlexBasis\",\"setWidth\",\"setHeight\",\"setMinWidth\",\"setMinHeight\",\"setMaxWidth\",\"setMaxHeight\",\"setPadding\"]){let e={[_.UNIT_POINT]:t.Node.prototype[E],[_.UNIT_PERCENT]:t.Node.prototype[`${E}Percent`],[_.UNIT_AUTO]:t.Node.prototype[`${E}Auto`]};O(t.Node.prototype,E,function(s,...o){let i=o.pop(),I,r;if(i===\"auto\")I=_.UNIT_AUTO,r=void 0;else if(i instanceof n)I=i.unit,r=i.valueOf();else if(I=typeof i==\"string\"&&i.endsWith(\"%\")?_.UNIT_PERCENT:_.UNIT_POINT,r=parseFloat(i),!Number.isNaN(i)&&Number.isNaN(r))throw new Error(`Invalid value ${i} for ${E}`);if(!e[I])throw new Error(`Failed to execute \"${E}\": Unsupported unit '${i}'`);return r!==void 0?e[I].call(this,...o,r):e[I].call(this,...o)})}O(t.Config.prototype,\"free\",function(){t.Config.destroy(this)}),O(t.Node,\"create\",function(E,e){return e?t.Node.createWithConfig(e):t.Node.createDefault()}),O(t.Node.prototype,\"free\",function(){t.Node.destroy(this)}),O(t.Node.prototype,\"freeRecursive\",function(){for(let E=0,e=this.getChildCount();E<e;++E)this.getChild(0).freeRecursive();this.free()});function N(E){return t.MeasureCallback.implement({measure:E})}return O(t.Node.prototype,\"setMeasureFunc\",function(E,e){E.call(this,N(e))}),O(t.Node.prototype,\"calculateLayout\",function(E,e=NaN,s=NaN,o=_.DIRECTION_LTR){return E.call(this,e,s,o)}),{Config:t.Config,Node:t.Node,Layout:T(\"Layout\",a),Size:T(\"Size\",h),Value:T(\"Value\",n),..._}}});export default U();\n","\nvar yoga = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(yoga) {\n  yoga = yoga || {};\n\n\nvar l;l||(l=typeof yoga !== 'undefined' ? yoga : {});var aa,ba;l.ready=new Promise(function(b,a){aa=b;ba=a});var da=Object.assign({},l),q=\"\";\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src);_scriptDir&&(q=_scriptDir);0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\";var ea=console.log.bind(console),v=console.warn.bind(console);Object.assign(l,da);da=null;\"object\"!=typeof WebAssembly&&w(\"no native wasm support detected\");\nvar fa,ha=!1;function ia(b,a,c,d){var e={string:function(h){var n=0;if(null!==h&&void 0!==h&&0!==h){var p=(h.length<<2)+1;n=ja(p);ka(h,n,p)}return n},array:function(h){var n=ja(h.length);x.set(h,n);return n}};b=l[\"_\"+b];var f=[],k=0;if(d)for(var g=0;g<d.length;g++){var m=e[c[g]];m?(0===k&&(k=la()),f[g]=m(d[g])):f[g]=d[g]}c=b.apply(null,f);return c=function(h){0!==k&&ma(k);return\"string\"===a?h?na(y,h):\"\":\"boolean\"===a?!!h:h}(c)}\nfunction na(b,a,c){c=a+c;for(var d=\"\";!(a>=c);){var e=b[a++];if(!e)break;if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var k=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|k:(e&7)<<18|f<<12|k<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}\nfunction ka(b,a,c){var d=y;if(0<c){c=a+c-1;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var k=b.charCodeAt(++e);f=65536+((f&1023)<<10)|k&1023}if(127>=f){if(a>=c)break;d[a++]=f}else{if(2047>=f){if(a+1>=c)break;d[a++]=192|f>>6}else{if(65535>=f){if(a+2>=c)break;d[a++]=224|f>>12}else{if(a+3>=c)break;d[a++]=240|f>>18;d[a++]=128|f>>12&63}d[a++]=128|f>>6&63}d[a++]=128|f&63}}d[a]=0}}\nfunction oa(b,a){for(var c=\"\",d=0;!(d>=a/2);++d){var e=A[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}function pa(b,a,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)A[a>>1]=b.charCodeAt(e),a+=2;A[a>>1]=0;return a-d}function qa(b){return 2*b.length}\nfunction ra(b,a){for(var c=0,d=\"\";!(c>=a/4);){var e=B[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}function sa(b,a,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var k=b.charCodeAt(++e);f=65536+((f&1023)<<10)|k&1023}B[a>>2]=f;a+=4;if(a+4>c)break}B[a>>2]=0;return a-d}\nfunction ta(b){for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a}var ua,x,y,A,va,B,D,wa,xa;function ya(){var b=fa.buffer;ua=b;l.HEAP8=x=new Int8Array(b);l.HEAP16=A=new Int16Array(b);l.HEAP32=B=new Int32Array(b);l.HEAPU8=y=new Uint8Array(b);l.HEAPU16=va=new Uint16Array(b);l.HEAPU32=D=new Uint32Array(b);l.HEAPF32=wa=new Float32Array(b);l.HEAPF64=xa=new Float64Array(b)}var E,za=[],Aa=[],Ba=[],F=0,Ca=null,G=null;\nfunction w(b){b=\"Aborted(\"+b+\")\";v(b);ha=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ba(b);throw b;}function Da(){return H.startsWith(\"data:application/octet-stream;base64,\")}var H;if(l.locateFile){if(H=\"yoga.wasm\",!Da()){var Ea=H;H=l.locateFile?l.locateFile(Ea,q):q+Ea}}else H=(\"\").toString();function Fa(){try{throw\"both async and sync fetching of the wasm failed\";}catch(b){w(b)}}\nfunction Ga(){return\"function\"==typeof fetch?fetch(H,{credentials:\"same-origin\"}).then(function(b){if(!b.ok)throw\"failed to load wasm binary file at '\"+H+\"'\";return b.arrayBuffer()}).catch(function(){return Fa()}):Promise.resolve().then(function(){return Fa()})}var I,Ha;function Ia(b){for(;0<b.length;){var a=b.shift();if(\"function\"==typeof a)a(l);else{var c=a.Qa;\"number\"==typeof c?void 0===a.ka?E.get(c)():E.get(c)(a.ka):c(void 0===a.ka?null:a.ka)}}}\nfunction Ja(b){this.U=b-24;this.ya=function(a){D[this.U+4>>2]=a};this.va=function(a){D[this.U+8>>2]=a};this.wa=function(){B[this.U>>2]=0};this.ua=function(){x[this.U+12>>0]=0};this.xa=function(){x[this.U+13>>0]=0};this.sa=function(a,c){this.ta();this.ya(a);this.va(c);this.wa();this.ua();this.xa()};this.ta=function(){D[this.U+16>>2]=0}}var Ka=0;function La(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?\"_\"+b:b}\nfunction Ma(b,a){b=La(b);return function(){null;return a.apply(this,arguments)}}var K=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Na=[];function Oa(b){var a=Error,c=Ma(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var L=void 0;\nfunction M(b){throw new L(b);}var N=b=>{b||M(\"Cannot use deleted val. handle = \"+b);return K[b].value},Pa=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var a=Na.length?Na.pop():K.length;K[a]={na:1,value:b};return a}},Qa=void 0,Ra=void 0;function O(b){for(var a=\"\";y[b];)a+=Ra[y[b++]];return a}var P=[];function Sa(){for(;P.length;){var b=P.pop();b.T.fa=!1;b[\"delete\"]()}}var Ta=void 0,Q={};\nfunction Ua(b,a){for(void 0===a&&M(\"ptr should not be undefined\");b.X;)a=b.ha(a),b=b.X;return a}var R={};function Va(b){b=Wa(b);var a=O(b);S(b);return a}function Xa(b,a){var c=R[b];void 0===c&&M(a+\" has unknown type \"+Va(b));return c}function Ya(){}var Za=!1;function $a(b){--b.count.value;0===b.count.value&&(b.Z?b.aa.ba(b.Z):b.W.V.ba(b.U))}function ab(b,a,c){if(a===c)return b;if(void 0===c.X)return null;b=ab(b,a,c.X);return null===b?null:c.Ba(b)}var bb={};function cb(b,a){a=Ua(b,a);return Q[a]}\nvar db=void 0;function eb(b){throw new db(b);}function fb(b,a){a.W&&a.U||eb(\"makeClassHandle requires ptr and ptrType\");!!a.aa!==!!a.Z&&eb(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return T(Object.create(b,{T:{value:a}}))}function T(b){if(\"undefined\"===typeof FinalizationRegistry)return T=a=>a,b;Za=new FinalizationRegistry(a=>{$a(a.T)});T=a=>{var c=a.T;c.Z&&Za.register(a,{T:c},a);return a};Ya=a=>{Za.unregister(a)};return T(b)}var gb={};\nfunction hb(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function ib(b){return this.fromWireType(D[b>>2])}var U={},jb={};function V(b,a,c){function d(g){g=c(g);g.length!==b.length&&eb(\"Mismatched type converter count\");for(var m=0;m<b.length;++m)W(b[m],g[m])}b.forEach(function(g){jb[g]=a});var e=Array(a.length),f=[],k=0;a.forEach((g,m)=>{R.hasOwnProperty(g)?e[m]=R[g]:(f.push(g),U.hasOwnProperty(g)||(U[g]=[]),U[g].push(()=>{e[m]=R[g];++k;k===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction kb(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+b);}}\nfunction W(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=a.name;b||M('type \"'+d+'\" must have a positive integer typeid pointer');if(R.hasOwnProperty(b)){if(c.Ia)return;M(\"Cannot register type '\"+d+\"' twice\")}R[b]=a;delete jb[b];U.hasOwnProperty(b)&&(a=U[b],delete U[b],a.forEach(e=>e()))}function lb(b){M(b.T.W.V.name+\" instance already deleted\")}function X(){}\nfunction mb(b,a,c){if(void 0===b[a].Y){var d=b[a];b[a]=function(){b[a].Y.hasOwnProperty(arguments.length)||M(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+b[a].Y+\")!\");return b[a].Y[arguments.length].apply(this,arguments)};b[a].Y=[];b[a].Y[d.ea]=d}}\nfunction nb(b,a){l.hasOwnProperty(b)?(M(\"Cannot register public name '\"+b+\"' twice\"),mb(l,b,b),l.hasOwnProperty(void 0)&&M(\"Cannot register multiple overloads of a function with the same number of arguments (undefined)!\"),l[b].Y[void 0]=a):l[b]=a}function qb(b,a,c,d,e,f,k,g){this.name=b;this.constructor=a;this.ca=c;this.ba=d;this.X=e;this.Da=f;this.ha=k;this.Ba=g;this.qa=[]}\nfunction rb(b,a,c){for(;a!==c;)a.ha||M(\"Expected null or instance of \"+c.name+\", got an instance of \"+a.name),b=a.ha(b),a=a.X;return b}function sb(b,a){if(null===a)return this.la&&M(\"null is not a valid \"+this.name),0;a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);return rb(a.T.U,a.T.W.V,this.V)}\nfunction ub(b,a){if(null===a){this.la&&M(\"null is not a valid \"+this.name);if(this.ja){var c=this.ma();null!==b&&b.push(this.ba,c);return c}return 0}a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.ia&&a.T.W.ia&&M(\"Cannot convert argument of type \"+(a.T.aa?a.T.aa.name:a.T.W.name)+\" to parameter type \"+this.name);c=rb(a.T.U,a.T.W.V,this.V);if(this.ja)switch(void 0===a.T.Z&&M(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Pa){case 0:a.T.aa===this?c=a.T.Z:M(\"Cannot convert argument of type \"+(a.T.aa?a.T.aa.name:a.T.W.name)+\" to parameter type \"+this.name);break;case 1:c=a.T.Z;break;case 2:if(a.T.aa===this)c=a.T.Z;else{var d=a.clone();c=this.La(c,Pa(function(){d[\"delete\"]()}));null!==b&&b.push(this.ba,c)}break;default:M(\"Unsupporting sharing policy\")}return c}\nfunction vb(b,a){if(null===a)return this.la&&M(\"null is not a valid \"+this.name),0;a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);a.T.W.ia&&M(\"Cannot convert argument of type \"+a.T.W.name+\" to parameter type \"+this.name);return rb(a.T.U,a.T.W.V,this.V)}\nfunction Y(b,a,c,d){this.name=b;this.V=a;this.la=c;this.ia=d;this.ja=!1;this.ba=this.La=this.ma=this.ra=this.Pa=this.Ka=void 0;void 0!==a.X?this.toWireType=ub:(this.toWireType=d?sb:vb,this.$=null)}function wb(b,a){l.hasOwnProperty(b)||eb(\"Replacing nonexistant public symbol\");l[b]=a;l[b].ea=void 0}\nfunction xb(b,a){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=l[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=E.get(a).apply(null,c);return d}}function Z(b,a){b=O(b);var c=b.includes(\"j\")?xb(b,a):E.get(a);\"function\"!=typeof c&&M(\"unknown function pointer with signature \"+b+\": \"+a);return c}var yb=void 0;\nfunction zb(b,a){function c(f){e[f]||R[f]||(jb[f]?jb[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new yb(b+\": \"+d.map(Va).join([\", \"]));}\nfunction Ab(b,a,c,d,e){var f=a.length;2>f&&M(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var k=null!==a[1]&&null!==c,g=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].$){g=!0;break}var m=\"void\"!==a[0].name,h=f-2,n=Array(h),p=[],r=[];return function(){arguments.length!==h&&M(\"function \"+b+\" called with \"+arguments.length+\" arguments, expected \"+h+\" args!\");r.length=0;p.length=k?2:1;p[0]=e;if(k){var u=a[1].toWireType(r,this);p[1]=u}for(var t=0;t<h;++t)n[t]=\na[t+2].toWireType(r,arguments[t]),p.push(n[t]);t=d.apply(null,p);if(g)hb(r);else for(var z=k?1:2;z<a.length;z++){var C=1===z?u:n[z-2];null!==a[z].$&&a[z].$(C)}u=m?a[0].fromWireType(t):void 0;return u}}function Bb(b,a){for(var c=[],d=0;d<b;d++)c.push(B[(a>>2)+d]);return c}function Cb(b){4<b&&0===--K[b].na&&(K[b]=void 0,Na.push(b))}\nfunction Db(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?x:y)[d])};case 1:return function(d){return this.fromWireType((c?A:va)[d>>1])};case 2:return function(d){return this.fromWireType((c?B:D)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function tb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction Eb(b,a){switch(a){case 2:return function(c){return this.fromWireType(wa[c>>2])};case 3:return function(c){return this.fromWireType(xa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction Fb(b,a,c){switch(a){case 0:return c?function(d){return x[d]}:function(d){return y[d]};case 1:return c?function(d){return A[d>>1]}:function(d){return va[d>>1]};case 2:return c?function(d){return B[d>>2]}:function(d){return D[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}var Gb={};function Hb(b){var a=Gb[b];return void 0===a?O(b):a}var Ib=[];function Jb(b){var a=Ib.length;Ib.push(b);return a}\nfunction Kb(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=Xa(D[a+4*d>>2],\"parameter \"+d);return c}var Lb=[],Mb=[null,[],[]];L=l.BindingError=Oa(\"BindingError\");l.count_emval_handles=function(){for(var b=0,a=5;a<K.length;++a)void 0!==K[a]&&++b;return b};l.get_first_emval=function(){for(var b=5;b<K.length;++b)if(void 0!==K[b])return K[b];return null};Qa=l.PureVirtualError=Oa(\"PureVirtualError\");for(var Nb=Array(256),Ob=0;256>Ob;++Ob)Nb[Ob]=String.fromCharCode(Ob);Ra=Nb;l.getInheritedInstanceCount=function(){return Object.keys(Q).length};\nl.getLiveInheritedInstances=function(){var b=[],a;for(a in Q)Q.hasOwnProperty(a)&&b.push(Q[a]);return b};l.flushPendingDeletes=Sa;l.setDelayFunction=function(b){Ta=b;P.length&&Ta&&Ta(Sa)};db=l.InternalError=Oa(\"InternalError\");X.prototype.isAliasOf=function(b){if(!(this instanceof X&&b instanceof X))return!1;var a=this.T.W.V,c=this.T.U,d=b.T.W.V;for(b=b.T.U;a.X;)c=a.ha(c),a=a.X;for(;d.X;)b=d.ha(b),d=d.X;return a===d&&c===b};\nX.prototype.clone=function(){this.T.U||lb(this);if(this.T.ga)return this.T.count.value+=1,this;var b=T,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.T;b=b(c.call(a,d,{T:{value:{count:e.count,fa:e.fa,ga:e.ga,U:e.U,W:e.W,Z:e.Z,aa:e.aa}}}));b.T.count.value+=1;b.T.fa=!1;return b};X.prototype[\"delete\"]=function(){this.T.U||lb(this);this.T.fa&&!this.T.ga&&M(\"Object already scheduled for deletion\");Ya(this);$a(this.T);this.T.ga||(this.T.Z=void 0,this.T.U=void 0)};X.prototype.isDeleted=function(){return!this.T.U};\nX.prototype.deleteLater=function(){this.T.U||lb(this);this.T.fa&&!this.T.ga&&M(\"Object already scheduled for deletion\");P.push(this);1===P.length&&Ta&&Ta(Sa);this.T.fa=!0;return this};Y.prototype.Ea=function(b){this.ra&&(b=this.ra(b));return b};Y.prototype.oa=function(b){this.ba&&this.ba(b)};Y.prototype.argPackAdvance=8;Y.prototype.readValueFromPointer=ib;Y.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nY.prototype.fromWireType=function(b){function a(){return this.ja?fb(this.V.ca,{W:this.Ka,U:c,aa:this,Z:b}):fb(this.V.ca,{W:this,U:b})}var c=this.Ea(b);if(!c)return this.oa(b),null;var d=cb(this.V,c);if(void 0!==d){if(0===d.T.count.value)return d.T.U=c,d.T.Z=b,d.clone();d=d.clone();this.oa(b);return d}d=this.V.Da(c);d=bb[d];if(!d)return a.call(this);d=this.ia?d.za:d.pointerType;var e=ab(c,this.V,d.V);return null===e?a.call(this):this.ja?fb(d.V.ca,{W:d,U:e,aa:this,Z:b}):fb(d.V.ca,{W:d,U:e})};\nyb=l.UnboundTypeError=Oa(\"UnboundTypeError\");\nvar Qb={l:function(b){return Pb(b+24)+24},k:function(b,a,c){(new Ja(b)).sa(a,c);Ka++;throw b;},r:function(b,a,c){b=O(b);a=Xa(a,\"wrapper\");c=N(c);var d=[].slice,e=a.V,f=e.ca,k=e.X.ca,g=e.X.constructor;b=Ma(b,function(){e.X.qa.forEach(function(h){if(this[h]===k[h])throw new Qa(\"Pure virtual function \"+h+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&M(\"Pass correct 'this' to __construct\");\nvar h=g.implement.apply(void 0,[this].concat(d.call(arguments)));Ya(h);var n=h.T;h.notifyOnDestruction();n.ga=!0;Object.defineProperties(this,{T:{value:n}});T(this);h=n.U;h=Ua(e,h);Q.hasOwnProperty(h)?M(\"Tried to register registered instance: \"+h):Q[h]=this};f.__destruct=function(){this===f&&M(\"Pass correct 'this' to __destruct\");Ya(this);var h=this.T.U;h=Ua(e,h);Q.hasOwnProperty(h)?delete Q[h]:M(\"Tried to unregister unregistered instance: \"+h)};b.prototype=Object.create(f);for(var m in c)b.prototype[m]=\nc[m];return Pa(b)},j:function(b){var a=gb[b];delete gb[b];var c=a.ma,d=a.ba,e=a.pa,f=e.map(k=>k.Ha).concat(e.map(k=>k.Na));V([b],f,k=>{var g={};e.forEach((m,h)=>{var n=k[h],p=m.Fa,r=m.Ga,u=k[h+e.length],t=m.Ma,z=m.Oa;g[m.Ca]={read:C=>n.fromWireType(p(r,C)),write:(C,ca)=>{var J=[];t(z,C,u.toWireType(J,ca));hb(J)}}});return[{name:a.name,fromWireType:function(m){var h={},n;for(n in g)h[n]=g[n].read(m);d(m);return h},toWireType:function(m,h){for(var n in g)if(!(n in h))throw new TypeError('Missing field:  \"'+\nn+'\"');var p=c();for(n in g)g[n].write(p,h[n]);null!==m&&m.push(d,p);return p},argPackAdvance:8,readValueFromPointer:ib,$:d}]})},u:function(){},B:function(b,a,c,d,e){var f=kb(c);a=O(a);W(b,{name:a,fromWireType:function(k){return!!k},toWireType:function(k,g){return g?d:e},argPackAdvance:8,readValueFromPointer:function(k){if(1===c)var g=x;else if(2===c)g=A;else if(4===c)g=B;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(g[k>>f])},$:null})},e:function(b,a,c,d,e,f,\nk,g,m,h,n,p,r){n=O(n);f=Z(e,f);g&&(g=Z(k,g));h&&(h=Z(m,h));r=Z(p,r);var u=La(n);nb(u,function(){zb(\"Cannot construct \"+n+\" due to unbound types\",[d])});V([b,a,c],d?[d]:[],function(t){t=t[0];if(d){var z=t.V;var C=z.ca}else C=X.prototype;t=Ma(u,function(){if(Object.getPrototypeOf(this)!==ca)throw new L(\"Use 'new' to construct \"+n);if(void 0===J.da)throw new L(n+\" has no accessible constructor\");var ob=J.da[arguments.length];if(void 0===ob)throw new L(\"Tried to invoke ctor of \"+n+\" with invalid number of parameters (\"+\narguments.length+\") - expected (\"+Object.keys(J.da).toString()+\") parameters instead!\");return ob.apply(this,arguments)});var ca=Object.create(C,{constructor:{value:t}});t.prototype=ca;var J=new qb(n,t,ca,r,z,f,g,h);z=new Y(n,J,!0,!1);C=new Y(n+\"*\",J,!1,!1);var pb=new Y(n+\" const*\",J,!1,!0);bb[b]={pointerType:C,za:pb};wb(u,t);return[z,C,pb]})},d:function(b,a,c,d,e,f,k){var g=Bb(c,d);a=O(a);f=Z(e,f);V([],[b],function(m){function h(){zb(\"Cannot call \"+n+\" due to unbound types\",g)}m=m[0];var n=m.name+\n\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);var p=m.V.constructor;void 0===p[a]?(h.ea=c-1,p[a]=h):(mb(p,a,n),p[a].Y[c-1]=h);V([],g,function(r){r=Ab(n,[r[0],null].concat(r.slice(1)),null,f,k);void 0===p[a].Y?(r.ea=c-1,p[a]=r):p[a].Y[c-1]=r;return[]});return[]})},m:function(b,a,c,d,e,f){0<a||w();var k=Bb(a,c);e=Z(d,e);V([],[b],function(g){g=g[0];var m=\"constructor \"+g.name;void 0===g.V.da&&(g.V.da=[]);if(void 0!==g.V.da[a-1])throw new L(\"Cannot register multiple constructors with identical number of parameters (\"+\n(a-1)+\") for class '\"+g.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");g.V.da[a-1]=()=>{zb(\"Cannot construct \"+g.name+\" due to unbound types\",k)};V([],k,function(h){h.splice(1,0,null);g.V.da[a-1]=Ab(m,h,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,k,g){var m=Bb(c,d);a=O(a);f=Z(e,f);V([],[b],function(h){function n(){zb(\"Cannot call \"+p+\" due to unbound types\",m)}h=h[0];var p=h.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\ng&&h.V.qa.push(a);var r=h.V.ca,u=r[a];void 0===u||void 0===u.Y&&u.className!==h.name&&u.ea===c-2?(n.ea=c-2,n.className=h.name,r[a]=n):(mb(r,a,p),r[a].Y[c-2]=n);V([],m,function(t){t=Ab(p,t,h,f,k);void 0===r[a].Y?(t.ea=c-2,r[a]=t):r[a].Y[c-2]=t;return[]});return[]})},A:function(b,a){a=O(a);W(b,{name:a,fromWireType:function(c){var d=N(c);Cb(c);return d},toWireType:function(c,d){return Pa(d)},argPackAdvance:8,readValueFromPointer:ib,$:null})},o:function(b,a,c,d){function e(){}c=kb(c);a=O(a);e.values=\n{};W(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,k){return k.value},argPackAdvance:8,readValueFromPointer:Db(a,c,d),$:null});nb(a,e)},n:function(b,a,c){var d=Xa(b,\"enum\");a=O(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Ma(d.name+\"_\"+a,function(){})}});b.values[c]=d;b[a]=d},p:function(b,a,c){c=kb(c);a=O(a);W(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},\nargPackAdvance:8,readValueFromPointer:Eb(a,c),$:null})},c:function(b,a,c,d,e){a=O(a);-1===e&&(e=4294967295);e=kb(c);var f=g=>g;if(0===d){var k=32-8*c;f=g=>g<<k>>>k}c=a.includes(\"unsigned\")?function(g,m){return m>>>0}:function(g,m){return m};W(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:Fb(a,e,0!==d),$:null})},b:function(b,a,c){function d(f){f>>=2;var k=D;return new e(ua,k[f+1],k[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,\nFloat64Array][a];c=O(c);W(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Ia:!0})},q:function(b,a){a=O(a);var c=\"std::string\"===a;W(b,{name:a,fromWireType:function(d){var e=D[d>>2];if(c)for(var f=d+4,k=0;k<=e;++k){var g=d+4+k;if(k==e||0==y[g]){f=f?na(y,f,g-f):\"\";if(void 0===m)var m=f;else m+=String.fromCharCode(0),m+=f;f=g+1}}else{m=Array(e);for(k=0;k<e;++k)m[k]=String.fromCharCode(y[d+4+k]);m=m.join(\"\")}S(d);return m},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));\nvar f=\"string\"==typeof e;f||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||M(\"Cannot pass non-string to std::string\");var k=(c&&f?()=>{for(var h=0,n=0;n<e.length;++n){var p=e.charCodeAt(n);55296<=p&&57343>=p&&(p=65536+((p&1023)<<10)|e.charCodeAt(++n)&1023);127>=p?++h:h=2047>=p?h+2:65535>=p?h+3:h+4}return h}:()=>e.length)(),g=Pb(4+k+1);D[g>>2]=k;if(c&&f)ka(e,g+4,k+1);else if(f)for(f=0;f<k;++f){var m=e.charCodeAt(f);255<m&&(S(g),M(\"String has UTF-16 code units that do not fit in 8 bits\"));\ny[g+4+f]=m}else for(f=0;f<k;++f)y[g+4+f]=e[f];null!==d&&d.push(S,g);return g},argPackAdvance:8,readValueFromPointer:ib,$:function(d){S(d)}})},i:function(b,a,c){c=O(c);if(2===a){var d=oa;var e=pa;var f=qa;var k=()=>va;var g=1}else 4===a&&(d=ra,e=sa,f=ta,k=()=>D,g=2);W(b,{name:c,fromWireType:function(m){for(var h=D[m>>2],n=k(),p,r=m+4,u=0;u<=h;++u){var t=m+4+u*a;if(u==h||0==n[t>>g])r=d(r,t-r),void 0===p?p=r:(p+=String.fromCharCode(0),p+=r),r=t+a}S(m);return p},toWireType:function(m,h){\"string\"!=typeof h&&\nM(\"Cannot pass non-string to C++ string type \"+c);var n=f(h),p=Pb(4+n+a);D[p>>2]=n>>g;e(h,p+4,n+a);null!==m&&m.push(S,p);return p},argPackAdvance:8,readValueFromPointer:ib,$:function(m){S(m)}})},h:function(b,a,c,d,e,f){gb[b]={name:O(a),ma:Z(c,d),ba:Z(e,f),pa:[]}},g:function(b,a,c,d,e,f,k,g,m,h){gb[b].pa.push({Ca:O(a),Ha:c,Fa:Z(d,e),Ga:f,Na:k,Ma:Z(g,m),Oa:h})},C:function(b,a){a=O(a);W(b,{Ja:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},F:function(b,a,c,d,e){b=Ib[b];\na=N(a);c=Hb(c);var f=[];B[d>>2]=Pa(f);return b(a,c,f,e)},H:function(b,a,c,d){b=Ib[b];a=N(a);c=Hb(c);b(a,c,null,d)},G:Cb,s:function(b,a){var c=Kb(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(k){return k.name}).join(\"_\")+\"$\";var e=Lb[a];if(void 0!==e)return e;var f=Array(b-1);e=Jb((k,g,m,h)=>{for(var n=0,p=0;p<b-1;++p)f[p]=c[p+1].readValueFromPointer(h+n),n+=c[p+1].argPackAdvance;k=k[g].apply(k,f);for(p=0;p<b-1;++p)c[p+1].Aa&&c[p+1].Aa(f[p]);if(!d.Ja)return d.toWireType(m,k)});return Lb[a]=e},\nD:function(b){4<b&&(K[b].na+=1)},E:function(b){var a=N(b);hb(a);Cb(b)},f:function(){w(\"\")},x:function(b,a,c){y.copyWithin(b,a,a+c)},w:function(b){var a=y.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{fa.grow(e-ua.byteLength+65535>>>16);ya();var f=1;break a}catch(k){}f=void 0}if(f)return!0}return!1},z:function(){return 52},t:function(){return 70},y:function(b,\na,c,d){for(var e=0,f=0;f<c;f++){var k=D[a>>2],g=D[a+4>>2];a+=8;for(var m=0;m<g;m++){var h=y[k+m],n=Mb[b];0===h||10===h?((1===b?ea:v)(na(n,0)),n.length=0):n.push(h)}e+=g}D[d>>2]=e;return 0},v:function(){}};\n(function(){function b(e){l.asm=e.exports;fa=l.asm.I;ya();E=l.asm.O;Aa.unshift(l.asm.J);F--;0==F&&(null!==Ca&&(clearInterval(Ca),Ca=null),G&&(e=G,G=null,e()))}function a(e){b(e.instance)}function c(e){return Ga().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){v(\"failed to asynchronously prepare wasm: \"+f);w(f)})}var d={a:Qb};F++;if(l.instantiateWasm)try{return l.instantiateWasm(d,b)}catch(e){return v(\"Module.instantiateWasm callback failed with error: \"+\ne),!1}(function(){return\"function\"!=typeof WebAssembly.instantiateStreaming||Da()||\"function\"!=typeof fetch?c(a):fetch(H,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(a,function(f){v(\"wasm streaming compile failed: \"+f);v(\"falling back to ArrayBuffer instantiation\");return c(a)})})})().catch(ba);return{}})();l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.J).apply(null,arguments)};\nvar Pb=l._malloc=function(){return(Pb=l._malloc=l.asm.K).apply(null,arguments)},S=l._free=function(){return(S=l._free=l.asm.L).apply(null,arguments)},Wa=l.___getTypeName=function(){return(Wa=l.___getTypeName=l.asm.M).apply(null,arguments)};l.___embind_register_native_and_builtin_types=function(){return(l.___embind_register_native_and_builtin_types=l.asm.N).apply(null,arguments)};\nvar la=l.stackSave=function(){return(la=l.stackSave=l.asm.P).apply(null,arguments)},ma,ja=l.stackAlloc=function(){return(ja=l.stackAlloc=l.asm.Q).apply(null,arguments)};l.___cxa_is_pointer_type=function(){return(l.___cxa_is_pointer_type=l.asm.R).apply(null,arguments)};l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.S).apply(null,arguments)};l.cwrap=function(b,a,c,d){c=c||[];var e=c.every(function(f){return\"number\"===f});return\"string\"!==a&&e&&!d?l[\"_\"+b]:function(){return ia(b,a,c,arguments)}};\nl.setValue=function(b,a,c=\"i8\"){c.endsWith(\"*\")&&(c=\"i32\");switch(c){case \"i1\":x[b>>0]=a;break;case \"i8\":x[b>>0]=a;break;case \"i16\":A[b>>1]=a;break;case \"i32\":B[b>>2]=a;break;case \"i64\":Ha=[a>>>0,(I=a,1<=+Math.abs(I)?0<I?(Math.min(+Math.floor(I/4294967296),4294967295)|0)>>>0:~~+Math.ceil((I-+(~~I>>>0))/4294967296)>>>0:0)];B[b>>2]=Ha[0];B[b+4>>2]=Ha[1];break;case \"float\":wa[b>>2]=a;break;case \"double\":xa[b>>3]=a;break;default:w(\"invalid type for setValue: \"+c)}};var Rb;\nG=function Sb(){Rb||Tb();Rb||(G=Sb)};function Tb(){0<F||(Ia(za),0<F||Rb||(Rb=!0,l.calledRun=!0,ha||(Ia(Aa),aa(l),Ia(Ba))))}l.run=Tb;Tb();\n\n\n  return yoga.ready\n}\n);\n})();\nexport default yoga;","import i from\"./entry.js\";import o from\"./yoga.mjs\";function s(e,t){return t}async function c(e){let t=await o({instantiateWasm(r,a){return WebAssembly.instantiate(e,r).then(n=>{a(n.instance||n)}),{}},locateFile(){return\"\"}});return i(s,t)}async function l(e){let t=await o({instantiateWasm(r,a){return WebAssembly.instantiateStreaming(e,r).then(n=>{a(n.instance||n)}),{}},locateFile(){return\"\"}});return i(s,t)}export{c as default,l as initStreaming};\n","// wasm/dist/index.js\nvar wasm;\nvar heap = new Array(32).fill(void 0);\nheap.push(void 0, null, true, false);\nfunction getObject(idx) {\n  return heap[idx];\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\nvar cachedTextEncoder = new TextEncoder(\"utf-8\");\nvar encodeString = typeof cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === void 0) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr2 = malloc(buf.length);\n    getUint8Memory0().subarray(ptr2, ptr2 + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr2;\n  }\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 127)\n      break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nfunction isLikeNone(x) {\n  return x === void 0 || x === null;\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachegetInt32Memory0;\n}\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length)\n    heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction dropObject(idx) {\n  if (idx < 36)\n    return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nvar cachedTextDecoder = new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar Resvg = class {\n  static __wrap(ptr) {\n    const obj = Object.create(Resvg.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_resvg_free(ptr);\n  }\n  get width() {\n    var ret = wasm.resvg_width(this.ptr);\n    return ret;\n  }\n  get height() {\n    var ret = wasm.resvg_height(this.ptr);\n    return ret;\n  }\n  toString() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_toString(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(r0, r1);\n    }\n  }\n  constructor(svg, options) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      var ptr0 = isLikeNone(options) ? 0 : passStringToWasm0(options, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.resvg_new(retptr, addHeapObject(svg), ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Resvg.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  render() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_render(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n};\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\nasync function init(input) {\n  if (typeof input === \"undefined\") {\n    input = new URL(\"index_bg.wasm\", void 0);\n  }\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbg_new_f2ab1043dfd47875 = function(arg0, arg1) {\n    var ret = new TypeError(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_instanceof_Uint8Array_8a8537f46e056474 = function(arg0) {\n    var ret = getObject(arg0) instanceof Uint8Array;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof obj === \"string\" ? obj : void 0;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_length_30803400a8f15c59 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_e3b800e570795b3c = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_set_5b8081e9d002f0df = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbg_newwithbyteoffsetandlength_278ec7532799393a = function(arg0, arg1, arg2) {\n    var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  if (typeof input === \"string\" || typeof Request === \"function\" && input instanceof Request || typeof URL === \"function\" && input instanceof URL) {\n    input = fetch(input);\n  }\n  const { instance, module } = await load(await input, imports);\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  return wasm;\n}\nvar dist_default = init;\n\n// wasm-binding.ts\nvar initialized = false;\nvar initWasm = async (module_or_path) => {\n  if (initialized) {\n    throw new Error(\"Already initialized. The `initWasm()` function can be used only once.\");\n  }\n  await dist_default(await module_or_path);\n  initialized = true;\n};\nvar Resvg2 = class extends Resvg {\n  constructor(svg, options) {\n    if (!initialized)\n      throw new Error(\"WASM has not been initialized. Call `initWasm()` function.\");\n    super(svg, JSON.stringify(options));\n  }\n};\nexport {\n  Resvg2 as Resvg,\n  initWasm\n};\n","import b,{init as S}from\"satori/wasm\";import E from\"yoga-wasm-web\";import*as i from\"@resvg/resvg-wasm\";import N from\"../vendor/resvg.simd.wasm?module\";import T from\"../vendor/yoga.wasm?module\";var v=String.fromCharCode(8205),j=/\\uFE0F/g;function c(t){return y(t.indexOf(v)<0?t.replace(j,\"\"):t)}function y(t){for(var n=[],e=0,o=0,s=0;s<t.length;)e=t.charCodeAt(s++),o?(n.push((65536+(o-55296<<10)+(e-56320)).toString(16)),o=0):55296<=e&&e<=56319?o=e:n.push(e.toString(16));return n.join(\"-\")}var r={twemoji:t=>\"https://twemoji.maxcdn.com/v/latest/svg/\"+t.toLowerCase()+\".svg\",openmoji:\"https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg/\",blobmoji:\"https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg/\",noto:\"https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg/\",fluent:t=>\"https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/\"+t.toLowerCase()+\"_color.svg\",fluentFlat:t=>\"https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/\"+t.toLowerCase()+\"_flat.svg\"};function m(t,n){(!n||!r[n])&&(n=\"twemoji\");let e=r[n];return fetch(typeof e==\"function\"?e(t):`${e}${t.toUpperCase()}.svg`)}var C=i.initWasm(N),x=E(T).then(t=>S(t)),_=fetch(new URL(\"../vendor/noto-sans-v27-latin-regular.ttf\",import.meta.url)).then(t=>t.arrayBuffer()),f,u,R=((u=(f=globalThis==null?void 0:globalThis.process)==null?void 0:f.env)==null?void 0:u.NODE_ENV)===\"development\",l={zh:\"Noto+Sans+SC\",ja:\"Noto+Sans+JP\",ko:\"Noto+Sans+KR\",th:\"Noto+Sans+Thai\",he:\"Noto+Sans+Hebrew\",ar:\"Noto+Sans+Arabic\",bn:\"Noto+Sans+Bengali\",ta:\"Noto+Sans+Tamil\",te:\"Noto+Sans+Telugu\",ml:\"Noto+Sans+Malayalam\",devanagari:\"Noto+Sans+Devanagari\",unknown:\"Noto+Sans\"};async function k(t,n){if(!t||!n)return;let e=`https://fonts.googleapis.com/css2?family=${t}&text=${encodeURIComponent(n)}`,s=(await(await fetch(e,{headers:{\"User-Agent\":\"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1\"}})).text()).match(/src: url\\((.+)\\) format\\('(opentype|truetype)'\\)/);if(!s)throw new Error(\"Failed to load font\");return fetch(s[1]).then(a=>a.arrayBuffer())}var g=new Map,F=({emoji:t})=>{let n=async(e,o)=>{if(e===\"emoji\")return\"data:image/svg+xml;base64,\"+btoa(await(await m(c(o),t)).text());l[e]||(e=\"unknown\");try{let s=await k(l[e],o);if(s)return{name:`satori_${e}_fallback_${o}`,data:s,weight:400,style:\"normal\"}}catch(s){console.error(\"Failed to load dynamic font for\",o,\". Error:\",s)}};return async(...e)=>{let o=JSON.stringify(e),s=g.get(o);if(s)return s;let a=await n(...e);return g.set(o,a),a}},p=class{constructor(n,e={}){let o=Object.assign({width:1200,height:630,debug:!1},e),s=new ReadableStream({async start(a){await x,await C;let d=await _,h=await b(n,{width:o.width,height:o.height,debug:o.debug,fonts:o.fonts||[{name:\"sans serif\",data:d,weight:700,style:\"normal\"}],loadAdditionalAsset:F({emoji:o.emoji})}),w=new i.Resvg(h,{fitTo:{mode:\"width\",value:o.width}});a.enqueue(w.render()),a.close()}});return new Response(s,{headers:{\"content-type\":\"image/png\",\"cache-control\":R?\"no-cache, no-store\":\"public, immutable, no-transform, max-age=31536000\",...o.headers},status:o.status,statusText:o.statusText})}};export{p as ImageResponse};\n/*! Copyright Twitter Inc. and other contributors. Licensed under MIT */\n//# sourceMappingURL=index.js.map","import { ImageResponse } from '@vercel/og';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const config = {\n  runtime: 'experimental-edge'\n};\nconst font = fetch(new URL('../../assets/PlusJakartaSans-Bold.ttf', import.meta.url)).then(res => res.arrayBuffer());\nexport default async function handler(req) {\n  const fontData = await font;\n\n  try {\n    const {\n      searchParams\n    } = new URL(req.url);\n    const name = searchParams.get('name');\n    const src = searchParams.get('src');\n\n    if (!name || !src) {\n      return new Response('Missing name or src', {\n        status: 400\n      });\n    }\n\n    return new ImageResponse( /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        backgroundColor: '#fff',\n        fontSize: 32,\n        fontWeight: 600\n      },\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: src,\n        alt: \"NFT Photo\",\n        width: 600,\n        height: 600,\n        style: {\n          objectFit: 'cover'\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '600px',\n          height: '600px',\n          backgroundColor: 'rgba(0, 0, 0, 0.1)'\n        }\n      }), /*#__PURE__*/_jsxs(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        viewBox: \"0 0 90 90\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          filter: 'drop-shadow(2px 4px 8px rgba(0, 0, 0, 0.35))'\n        },\n        children: [/*#__PURE__*/_jsx(\"path\", {\n          d: \"M38.0397 51.0875C38.5012 52.0841 39.6435 54.0541 39.6435 54.0541L52.8484 32L39.9608 41.0921C39.1928 41.6096 38.5628 42.3102 38.1263 43.1319C37.5393 44.3716 37.2274 45.7259 37.2125 47.1C37.1975 48.4742 37.4799 49.8351 38.0397 51.0875Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/_jsx(\"path\", {\n          d: \"M32.152 59.1672C32.3024 61.2771 32.9122 63.3312 33.9405 65.1919C34.9689 67.0527 36.3921 68.6772 38.1147 69.9567L52.8487 80C52.8487 80 43.6303 67.013 35.8549 54.0902C35.0677 52.7249 34.5385 51.2322 34.2926 49.6835C34.1838 48.9822 34.1838 48.2689 34.2926 47.5676C34.0899 47.9348 33.6964 48.6867 33.6964 48.6867C32.908 50.2586 32.371 51.9394 32.1043 53.6705C31.9508 55.5004 31.9668 57.3401 32.152 59.1672Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/_jsx(\"path\", {\n          d: \"M70.1927 60.9125C69.6928 59.9159 68.4555 57.946 68.4555 57.946L54.1514 80L68.1118 70.9138C68.9436 70.3962 69.6261 69.6956 70.099 68.8739C70.7358 67.6334 71.0741 66.2781 71.0903 64.9029C71.1065 63.5277 70.8001 62.1657 70.1927 60.9125Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/_jsx(\"path\", {\n          d: \"M74.8512 52.8328C74.7008 50.7229 74.0909 48.6688 73.0624 46.8081C72.0339 44.9473 70.6105 43.3228 68.8876 42.0433L54.1514 32C54.1514 32 63.3652 44.987 71.1478 57.9098C71.933 59.2755 72.4603 60.7682 72.7043 62.3165C72.8132 63.0178 72.8132 63.7311 72.7043 64.4324C72.9071 64.0652 73.3007 63.3133 73.3007 63.3133C74.0892 61.7414 74.6262 60.0606 74.893 58.3295C75.0485 56.4998 75.0345 54.66 74.8512 52.8328Z\",\n          fill: \"white\"\n        })]\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: {\n          position: 'absolute',\n          bottom: '40px',\n          left: '67px',\n          color: '#fff',\n          fontSize: `${calcFontSize(name)}px`,\n          textShadow: '2px 4px 8px rgba(0, 0, 0, 0.35)'\n        },\n        children: name\n      })]\n    }), {\n      width: 600,\n      height: 600,\n      fonts: [{\n        name: 'Jakarta',\n        data: fontData,\n        style: 'normal'\n      }]\n    });\n  } catch (err) {\n    return new Response(`Failed to generate the image`, {\n      status: 500\n    });\n  }\n}\n\nfunction calcFontSize(name) {\n  // yoooooo.eth\n  if (name.length > 13) {\n    return 54;\n  }\n\n  return 68;\n}","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","const SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nexport function serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ export function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const [key, value] = pair.split(\"=\", 2);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ export function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map","import { parseCookieString, serialize } from \"./serialize\";\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ export class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map","import { parseSetCookieString, serialize } from \"./serialize\";\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ export class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map","export { RequestCookies } from \"./request-cookies\";\nexport { ResponseCookies } from \"./response-cookies\";\n\n//# sourceMappingURL=index.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","// remove (name) from pathname as it's not considered for routing\nexport function normalizeAppPath(pathname) {\n    return pathname.split('/').reduce((acc, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return acc;\n        }\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return acc;\n        }\n        if (segment.startsWith('@')) {\n            return acc;\n        }\n        if (segment === 'page' && index === segments.length - 1) {\n            return acc;\n        }\n        return acc + `/${segment}`;\n    }, '');\n}\nexport function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, '') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            requestHeaders.delete(param.toString().toLowerCase());\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nexport function blockUnallowedResponse(promise) {\n    if (process.env.__NEXT_ALLOW_MIDDLEWARE_RESPONSE_BODY) {\n        return promise;\n    }\n    return promise.then((result)=>{\n        var ref;\n        if ((ref = result.response) == null ? void 0 : ref.body) {\n            console.error(new Error(`A middleware can not alter response's body. Learn more: https://nextjs.org/docs/messages/returning-response-body-in-middleware`));\n            return {\n                ...result,\n                response: new Response(\"Internal Server Error\", {\n                    status: 500,\n                    statusText: \"Internal Server Error\"\n                })\n            };\n        }\n        return result;\n    });\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map","\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/ens-avatar.tsx\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/ens-avatar\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/ens-avatar\",\n              handler,\n          })\n        }\n    ","module.exports = \"blob:noto-sans-v27-latin-regular.5dda3fca77107598.ttf\"","module.exports = \"blob:PlusJakartaSans-Bold.7f5884e8a1d931f2.ttf\"","module.exports = wasm_53adb396180a95eb122a0218c93e3d6474b1a27e;","module.exports = wasm_5b50c798761dc0131e9ebe945031077e8a02633b;","var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n","var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n","function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n","module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[202],{\n\n/***/ 741:\n/***/ ((module) => {\n\n\"use strict\";\n\n\nmodule.exports = function (obj) {\n\tif (typeof obj === 'string') { return camelCase(obj); }\n\treturn walk(obj);\n};\n\nfunction walk(obj) {\n\tif (!obj || typeof obj !== 'object') { return obj; }\n\tif (isDate(obj) || isRegex(obj)) { return obj; }\n\tif (isArray(obj)) { return map(obj, walk); }\n\treturn reduce(objectKeys(obj), function (acc, key) {\n\t\tvar camel = camelCase(key);\n\t\tacc[camel] = walk(obj[key]);\n\t\treturn acc;\n\t}, {});\n}\n\nfunction camelCase(str) {\n\treturn str.replace(/[_.-](\\w|$)/g, function (_, x) {\n\t\treturn x.toUpperCase();\n\t});\n}\n\nvar isArray = Array.isArray || function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nvar isDate = function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object Date]';\n};\n\nvar isRegex = function (obj) {\n\treturn Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar has = Object.prototype.hasOwnProperty;\nvar objectKeys = Object.keys || function (obj) {\n\tvar keys = [];\n\tfor (var key in obj) {\n\t\tif (has.call(obj, key)) { keys.push(key); }\n\t}\n\treturn keys;\n};\n\nfunction map(xs, f) {\n\tif (xs.map) { return xs.map(f); }\n\tvar res = [];\n\tfor (var i = 0; i < xs.length; i++) {\n\t\tres.push(f(xs[i], i));\n\t}\n\treturn res;\n}\n\nfunction reduce(xs, f, acc) {\n\tif (xs.reduce) { return xs.reduce(f, acc); }\n\tfor (var i = 0; i < xs.length; i++) {\n\t\tacc = f(acc, xs[i], i);\n\t}\n\treturn acc;\n}\n\n\n/***/ }),\n\n/***/ 969:\n/***/ (function(module) {\n\n/*!\n * https://github.com/gilmoreorless/css-background-parser\n * Copyright © 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/\n */\n(function (exports) {\n\n    function BackgroundList(backgrounds) {\n        if (!(this instanceof BackgroundList)) {\n            return new BackgroundList();\n        }\n        this.backgrounds = backgrounds || [];\n    }\n\n    BackgroundList.prototype.toString = function () {\n        return this.backgrounds.join(', ');\n    };\n\n\n    function Background(props) {\n        if (!(this instanceof Background)) {\n            return new Background(props);\n        }\n        props = props || {};\n        var bg = this;\n\n        function defprop(name, defaultValue) {\n            bg[name] = (name in props) ? props[name] : defaultValue;\n        }\n\n        // http://www.w3.org/TR/css3-background/#backgrounds\n        defprop('color', '');\n        defprop('image', 'none');\n        defprop('attachment', 'scroll');\n        defprop('clip', 'border-box');\n        defprop('origin', 'padding-box');\n        defprop('position', '0% 0%');\n        defprop('repeat', 'repeat');\n        defprop('size', 'auto');\n    }\n\n    Background.prototype.toString = function () {\n        var list = [\n            this.image,\n            this.repeat,\n            this.attachment,\n            this.position + ' / ' + this.size,\n            this.origin,\n            this.clip\n        ];\n        if (this.color) {\n            list.unshift(this.color);\n        }\n        return list.join(' ');\n    };\n\n    exports.BackgroundList = BackgroundList;\n    exports.Background = Background;\n\n\n    function parseImages(cssText) {\n        var images = [];\n        var tokens = /[,\\(\\)]/;\n        var parens = 0;\n        var buffer = '';\n\n        if (cssText == null) {\n            return images;\n        }\n\n        while (cssText.length) {\n            var match = tokens.exec(cssText);\n            if (!match) {\n                break;\n            }\n            var char = match[0];\n            var ignoreChar = false;\n            switch (char) {\n                case ',':\n                    if (!parens) {\n                        images.push(buffer.trim());\n                        buffer = '';\n                        ignoreChar = true;\n                    }\n                    break;\n                case '(':\n                    parens++;\n                    break;\n                case ')':\n                    parens--;\n                    break;\n            }\n\n            var index = match.index + 1;\n            buffer += cssText.slice(0, ignoreChar ? index - 1 : index);\n            cssText = cssText.slice(index);\n        }\n\n        if (buffer.length || cssText.length) {\n            images.push((buffer + cssText).trim());\n        }\n\n        return images;\n    }\n\n    // Helper for .map()\n    function trim(str) {\n        return str.trim();\n    }\n\n    function parseSimpleList(cssText) {\n        return (cssText || '').split(',').map(trim);\n    }\n\n    exports.parseElementStyle = function (styleObject) {\n        var list = new BackgroundList();\n        if (styleObject == null) {\n            return list;\n        }\n\n        var bgImage = parseImages(styleObject.backgroundImage);\n        var bgColor = styleObject.backgroundColor;\n        var bgAttachment = parseSimpleList(styleObject.backgroundAttachment);\n        var bgClip       = parseSimpleList(styleObject.backgroundClip);\n        var bgOrigin     = parseSimpleList(styleObject.backgroundOrigin);\n        var bgPosition   = parseSimpleList(styleObject.backgroundPosition);\n        var bgRepeat     = parseSimpleList(styleObject.backgroundRepeat);\n        var bgSize       = parseSimpleList(styleObject.backgroundSize);\n        var background;\n\n        for (var i = 0, ii = bgImage.length; i < ii; i++) {\n            background = new Background({\n                image:      bgImage[i],\n                attachment: bgAttachment[i % bgAttachment.length],\n                clip:       bgClip[i % bgClip.length],\n                origin:     bgOrigin[i % bgOrigin.length],\n                position:   bgPosition[i % bgPosition.length],\n                repeat:     bgRepeat[i % bgRepeat.length],\n                size:       bgSize[i % bgSize.length]\n            });\n            if (i === ii - 1) {\n                background.color = bgColor;\n            }\n            list.backgrounds.push(background);\n        }\n\n        return list;\n    };\n\n    // exports.parseCssString = function (cssString) {\n    //     return new Background();\n    // };\n\n    // exports.parseBackgroundValue = function (cssString) {\n    //     return new Background();\n    // };\n\n})((function (root) {\n    // CommonJS\n    if ( true && module.exports !== undefined) return module.exports;\n    // Global `cssBgParser`\n    return (root.cssBgParser = {});\n})(this));\n\n\n/***/ }),\n\n/***/ 631:\n/***/ ((module) => {\n\nconst VALUES_REG = /,(?![^\\(]*\\))/\nconst PARTS_REG = /\\s(?![^(]*\\))/\nconst LENGTH_REG = /^[0-9]+[a-zA-Z%]+?$/\n\nconst parseValue = str => {\n  const parts = str.split(PARTS_REG)\n  const inset = parts.includes('inset')\n  const last = parts.slice(-1)[0]\n  const color = !isLength(last) ? last : undefined\n\n  const nums = parts\n    .filter(n => n !== 'inset')\n    .filter(n => n !== color)\n    .map(toNum)\n  const [ offsetX, offsetY, blurRadius, spreadRadius ] = nums\n\n  return {\n    inset,\n    offsetX,\n    offsetY,\n    blurRadius,\n    spreadRadius,\n    color\n  }\n}\n\nconst stringifyValue = obj => {\n  const {\n    inset,\n    offsetX = 0,\n    offsetY = 0,\n    blurRadius = 0,\n    spreadRadius,\n    color\n  } = obj || {}\n\n  return [\n    (inset ? 'inset' : null),\n    offsetX,\n    offsetY,\n    blurRadius ,\n    spreadRadius,\n    color\n  ].filter(v => v !== null && v !== undefined)\n    .map(toPx)\n    .map(s => ('' + s).trim())\n    .join(' ')\n}\n\nconst isLength = v => v === '0' || LENGTH_REG.test(v)\nconst toNum = v => {\n  if (!/px$/.test(v) && v !== '0') return v\n  const n = parseFloat(v)\n  return !isNaN(n) ? n : v\n}\nconst toPx = n => typeof n === 'number' && n !== 0 ? (n + 'px') : n\n\nconst parse = str => str.split(VALUES_REG).map(s => s.trim()).map(parseValue)\nconst stringify = arr => arr.map(stringifyValue).join(', ')\n\nmodule.exports = {\n  parse,\n  stringify\n}\n\n\n/***/ }),\n\n/***/ 600:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(814)\n\n\n/***/ }),\n\n/***/ 915:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\"use strict\";\nvar __webpack_unused_export__;\n\n\n__webpack_unused_export__ = ({\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar parse = __webpack_require__(627);\n\nvar parse__default = _interopDefault(parse);\n\nvar camelizeStyleName = _interopDefault(__webpack_require__(741));\n\nvar cssColorKeywords = _interopDefault(__webpack_require__(600));\n\nvar matchString = function matchString(node) {\n  if (node.type !== 'string') return null;\n  return node.value.replace(/\\\\([0-9a-f]{1,6})(?:\\s|$)/gi, function (match, charCode) {\n    return String.fromCharCode(parseInt(charCode, 16));\n  }).replace(/\\\\/g, '');\n};\n\nvar hexColorRe = /^(#(?:[0-9a-f]{3,4}){1,2})$/i;\nvar cssFunctionNameRe = /^(rgba?|hsla?|hwb|lab|lch|gray|color)$/;\n\nvar matchColor = function matchColor(node) {\n  if (node.type === 'word' && (hexColorRe.test(node.value) || node.value in cssColorKeywords || node.value === 'transparent')) {\n    return node.value;\n  } else if (node.type === 'function' && cssFunctionNameRe.test(node.value)) {\n    return parse.stringify(node);\n  }\n\n  return null;\n};\n\nvar noneRe = /^(none)$/i;\nvar autoRe = /^(auto)$/i;\nvar identRe = /(^-?[_a-z][_a-z0-9-]*$)/i; // Note if these are wrong, you'll need to change index.js too\n\nvar numberRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)$/i; // Note lengthRe is sneaky: you can omit units for 0\n\nvar lengthRe = /^(0$|(?:[+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)(?=px$))/i;\nvar unsupportedUnitRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?(ch|em|ex|rem|vh|vw|vmin|vmax|cm|mm|in|pc|pt))$/i;\nvar angleRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?(?:deg|rad))$/i;\nvar percentRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?%)$/i;\n\nvar noopToken = function noopToken(predicate) {\n  return function (node) {\n    return predicate(node) ? '<token>' : null;\n  };\n};\n\nvar valueForTypeToken = function valueForTypeToken(type) {\n  return function (node) {\n    return node.type === type ? node.value : null;\n  };\n};\n\nvar regExpToken = function regExpToken(regExp, transform) {\n  if (transform === void 0) {\n    transform = String;\n  }\n\n  return function (node) {\n    if (node.type !== 'word') return null;\n    var match = node.value.match(regExp);\n    if (match === null) return null;\n    var value = transform(match[1]);\n    return value;\n  };\n};\n\nvar SPACE = noopToken(function (node) {\n  return node.type === 'space';\n});\nvar SLASH = noopToken(function (node) {\n  return node.type === 'div' && node.value === '/';\n});\nvar COMMA = noopToken(function (node) {\n  return node.type === 'div' && node.value === ',';\n});\nvar WORD = valueForTypeToken('word');\nvar NONE = regExpToken(noneRe);\nvar AUTO = regExpToken(autoRe);\nvar NUMBER = regExpToken(numberRe, Number);\nvar LENGTH = regExpToken(lengthRe, Number);\nvar UNSUPPORTED_LENGTH_UNIT = regExpToken(unsupportedUnitRe);\nvar ANGLE = regExpToken(angleRe, function (angle) {\n  return angle.toLowerCase();\n});\nvar PERCENT = regExpToken(percentRe);\nvar IDENT = regExpToken(identRe);\nvar STRING = matchString;\nvar COLOR = matchColor;\nvar LINE = regExpToken(/^(none|underline|line-through)$/i);\nvar BORDER_STYLE = regExpToken(/^(solid|dashed|dotted)$/);\nvar defaultBorderWidth = 1;\nvar defaultBorderColor = 'black';\nvar defaultBorderStyle = 'solid';\n\nvar border = function border(tokenStream) {\n  var borderWidth;\n  var borderColor;\n  var borderStyle;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      borderWidth: 0,\n      borderColor: 'black',\n      borderStyle: 'solid'\n    };\n  }\n\n  var partsParsed = 0;\n\n  while (partsParsed < 3 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (borderWidth === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n      borderWidth = tokenStream.lastValue;\n    } else if (borderColor === undefined && tokenStream.matches(COLOR)) {\n      borderColor = tokenStream.lastValue;\n    } else if (borderStyle === undefined && tokenStream.matches(BORDER_STYLE)) {\n      borderStyle = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (borderWidth === undefined) borderWidth = defaultBorderWidth;\n  if (borderColor === undefined) borderColor = defaultBorderColor;\n  if (borderStyle === undefined) borderStyle = defaultBorderStyle;\n  return {\n    borderWidth: borderWidth,\n    borderColor: borderColor,\n    borderStyle: borderStyle\n  };\n};\n\nvar directionFactory = function directionFactory(_ref) {\n  var _ref$types = _ref.types,\n      types = _ref$types === void 0 ? [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT] : _ref$types,\n      _ref$directions = _ref.directions,\n      directions = _ref$directions === void 0 ? ['Top', 'Right', 'Bottom', 'Left'] : _ref$directions,\n      _ref$prefix = _ref.prefix,\n      prefix = _ref$prefix === void 0 ? '' : _ref$prefix,\n      _ref$suffix = _ref.suffix,\n      suffix = _ref$suffix === void 0 ? '' : _ref$suffix;\n  return function (tokenStream) {\n    var _ref2;\n\n    var values = []; // borderWidth doesn't currently allow a percent value, but may do in the future\n\n    values.push(tokenStream.expect.apply(tokenStream, types));\n\n    while (values.length < 4 && tokenStream.hasTokens()) {\n      tokenStream.expect(SPACE);\n      values.push(tokenStream.expect.apply(tokenStream, types));\n    }\n\n    tokenStream.expectEmpty();\n    var top = values[0],\n        _values$ = values[1],\n        right = _values$ === void 0 ? top : _values$,\n        _values$2 = values[2],\n        bottom = _values$2 === void 0 ? top : _values$2,\n        _values$3 = values[3],\n        left = _values$3 === void 0 ? right : _values$3;\n\n    var keyFor = function keyFor(n) {\n      return \"\" + prefix + directions[n] + suffix;\n    };\n\n    return _ref2 = {}, _ref2[keyFor(0)] = top, _ref2[keyFor(1)] = right, _ref2[keyFor(2)] = bottom, _ref2[keyFor(3)] = left, _ref2;\n  };\n};\n\nvar parseShadowOffset = function parseShadowOffset(tokenStream) {\n  var width = tokenStream.expect(LENGTH);\n  var height = tokenStream.matches(SPACE) ? tokenStream.expect(LENGTH) : width;\n  tokenStream.expectEmpty();\n  return {\n    width: width,\n    height: height\n  };\n};\n\nvar parseShadow = function parseShadow(tokenStream) {\n  var offsetX;\n  var offsetY;\n  var radius;\n  var color;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      offset: {\n        width: 0,\n        height: 0\n      },\n      radius: 0,\n      color: 'black'\n    };\n  }\n\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n\n    if (offsetX === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n      offsetX = tokenStream.lastValue;\n      tokenStream.expect(SPACE);\n      offsetY = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n      tokenStream.saveRewindPoint();\n\n      if (tokenStream.matches(SPACE) && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {\n        radius = tokenStream.lastValue;\n      } else {\n        tokenStream.rewind();\n      }\n    } else if (color === undefined && tokenStream.matches(COLOR)) {\n      color = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    didParseFirst = true;\n  }\n\n  if (offsetX === undefined) tokenStream[\"throw\"]();\n  return {\n    offset: {\n      width: offsetX,\n      height: offsetY\n    },\n    radius: radius !== undefined ? radius : 0,\n    color: color !== undefined ? color : 'black'\n  };\n};\n\nvar boxShadow = function boxShadow(tokenStream) {\n  var _parseShadow = parseShadow(tokenStream),\n      offset = _parseShadow.offset,\n      radius = _parseShadow.radius,\n      color = _parseShadow.color;\n\n  return {\n    shadowOffset: offset,\n    shadowRadius: radius,\n    shadowColor: color,\n    shadowOpacity: 1\n  };\n};\n\nvar defaultFlexGrow = 1;\nvar defaultFlexShrink = 1;\nvar defaultFlexBasis = 0;\n\nvar flex = function flex(tokenStream) {\n  var flexGrow;\n  var flexShrink;\n  var flexBasis;\n\n  if (tokenStream.matches(NONE)) {\n    tokenStream.expectEmpty();\n    return {\n      flexGrow: 0,\n      flexShrink: 0,\n      flexBasis: 'auto'\n    };\n  }\n\n  tokenStream.saveRewindPoint();\n\n  if (tokenStream.matches(AUTO) && !tokenStream.hasTokens()) {\n    return {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexBasis: 'auto'\n    };\n  }\n\n  tokenStream.rewind();\n  var partsParsed = 0;\n\n  while (partsParsed < 2 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (flexGrow === undefined && tokenStream.matches(NUMBER)) {\n      flexGrow = tokenStream.lastValue;\n      tokenStream.saveRewindPoint();\n\n      if (tokenStream.matches(SPACE) && tokenStream.matches(NUMBER)) {\n        flexShrink = tokenStream.lastValue;\n      } else {\n        tokenStream.rewind();\n      }\n    } else if (flexBasis === undefined && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT)) {\n      flexBasis = tokenStream.lastValue;\n    } else if (flexBasis === undefined && tokenStream.matches(AUTO)) {\n      flexBasis = 'auto';\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (flexGrow === undefined) flexGrow = defaultFlexGrow;\n  if (flexShrink === undefined) flexShrink = defaultFlexShrink;\n  if (flexBasis === undefined) flexBasis = defaultFlexBasis;\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\nvar FLEX_WRAP = regExpToken(/(nowrap|wrap|wrap-reverse)/);\nvar FLEX_DIRECTION = regExpToken(/(row|row-reverse|column|column-reverse)/);\nvar defaultFlexWrap = 'nowrap';\nvar defaultFlexDirection = 'row';\n\nvar flexFlow = function flexFlow(tokenStream) {\n  var flexWrap;\n  var flexDirection;\n  var partsParsed = 0;\n\n  while (partsParsed < 2 && tokenStream.hasTokens()) {\n    if (partsParsed !== 0) tokenStream.expect(SPACE);\n\n    if (flexWrap === undefined && tokenStream.matches(FLEX_WRAP)) {\n      flexWrap = tokenStream.lastValue;\n    } else if (flexDirection === undefined && tokenStream.matches(FLEX_DIRECTION)) {\n      flexDirection = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    partsParsed += 1;\n  }\n\n  tokenStream.expectEmpty();\n  if (flexWrap === undefined) flexWrap = defaultFlexWrap;\n  if (flexDirection === undefined) flexDirection = defaultFlexDirection;\n  return {\n    flexWrap: flexWrap,\n    flexDirection: flexDirection\n  };\n};\n\nvar fontFamily = function fontFamily(tokenStream) {\n  var fontFamily;\n\n  if (tokenStream.matches(STRING)) {\n    fontFamily = tokenStream.lastValue;\n  } else {\n    fontFamily = tokenStream.expect(IDENT);\n\n    while (tokenStream.hasTokens()) {\n      tokenStream.expect(SPACE);\n      var nextIdent = tokenStream.expect(IDENT);\n      fontFamily += \" \" + nextIdent;\n    }\n  }\n\n  tokenStream.expectEmpty();\n  return {\n    fontFamily: fontFamily\n  };\n};\n\nvar NORMAL = regExpToken(/^(normal)$/);\nvar STYLE = regExpToken(/^(italic)$/);\nvar WEIGHT = regExpToken(/^([1-9]00|bold)$/);\nvar VARIANT = regExpToken(/^(small-caps)$/);\nvar defaultFontStyle = 'normal';\nvar defaultFontWeight = 'normal';\nvar defaultFontVariant = [];\n\nvar font = function font(tokenStream) {\n  var fontStyle;\n  var fontWeight;\n  var fontVariant; // let fontSize;\n\n  var lineHeight; // let fontFamily;\n\n  var numStyleWeightVariantMatched = 0;\n\n  while (numStyleWeightVariantMatched < 3 && tokenStream.hasTokens()) {\n    if (tokenStream.matches(NORMAL)) ;else if (fontStyle === undefined && tokenStream.matches(STYLE)) {\n      fontStyle = tokenStream.lastValue;\n    } else if (fontWeight === undefined && tokenStream.matches(WEIGHT)) {\n      fontWeight = tokenStream.lastValue;\n    } else if (fontVariant === undefined && tokenStream.matches(VARIANT)) {\n      fontVariant = [tokenStream.lastValue];\n    } else {\n      break;\n    }\n    tokenStream.expect(SPACE);\n    numStyleWeightVariantMatched += 1;\n  }\n\n  var fontSize = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n\n  if (tokenStream.matches(SLASH)) {\n    lineHeight = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);\n  }\n\n  tokenStream.expect(SPACE);\n\n  var _fontFamily = fontFamily(tokenStream),\n      fontFamily$1 = _fontFamily.fontFamily;\n\n  if (fontStyle === undefined) fontStyle = defaultFontStyle;\n  if (fontWeight === undefined) fontWeight = defaultFontWeight;\n  if (fontVariant === undefined) fontVariant = defaultFontVariant;\n  var out = {\n    fontStyle: fontStyle,\n    fontWeight: fontWeight,\n    fontVariant: fontVariant,\n    fontSize: fontSize,\n    fontFamily: fontFamily$1\n  };\n  if (lineHeight !== undefined) out.lineHeight = lineHeight;\n  return out;\n};\n\nvar ALIGN_CONTENT = regExpToken(/(flex-(?:start|end)|center|stretch|space-(?:between|around))/);\nvar JUSTIFY_CONTENT = regExpToken(/(flex-(?:start|end)|center|space-(?:between|around|evenly))/);\n\nvar placeContent = function placeContent(tokenStream) {\n  var alignContent = tokenStream.expect(ALIGN_CONTENT);\n  var justifyContent;\n\n  if (tokenStream.hasTokens()) {\n    tokenStream.expect(SPACE);\n    justifyContent = tokenStream.expect(JUSTIFY_CONTENT);\n  } else {\n    justifyContent = 'stretch';\n  }\n\n  tokenStream.expectEmpty();\n  return {\n    alignContent: alignContent,\n    justifyContent: justifyContent\n  };\n};\n\nvar STYLE$1 = regExpToken(/^(solid|double|dotted|dashed)$/);\nvar defaultTextDecorationLine = 'none';\nvar defaultTextDecorationStyle = 'solid';\nvar defaultTextDecorationColor = 'black';\n\nvar textDecoration = function textDecoration(tokenStream) {\n  var line;\n  var style;\n  var color;\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n\n    if (line === undefined && tokenStream.matches(LINE)) {\n      var lines = [tokenStream.lastValue.toLowerCase()];\n      tokenStream.saveRewindPoint();\n\n      if (lines[0] !== 'none' && tokenStream.matches(SPACE) && tokenStream.matches(LINE)) {\n        lines.push(tokenStream.lastValue.toLowerCase()); // Underline comes before line-through\n\n        lines.sort().reverse();\n      } else {\n        tokenStream.rewind();\n      }\n\n      line = lines.join(' ');\n    } else if (style === undefined && tokenStream.matches(STYLE$1)) {\n      style = tokenStream.lastValue;\n    } else if (color === undefined && tokenStream.matches(COLOR)) {\n      color = tokenStream.lastValue;\n    } else {\n      tokenStream[\"throw\"]();\n    }\n\n    didParseFirst = true;\n  }\n\n  return {\n    textDecorationLine: line !== undefined ? line : defaultTextDecorationLine,\n    textDecorationColor: color !== undefined ? color : defaultTextDecorationColor,\n    textDecorationStyle: style !== undefined ? style : defaultTextDecorationStyle\n  };\n};\n\nvar textDecorationLine = function textDecorationLine(tokenStream) {\n  var lines = [];\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n    lines.push(tokenStream.expect(LINE).toLowerCase());\n    didParseFirst = true;\n  }\n\n  lines.sort().reverse();\n  return {\n    textDecorationLine: lines.join(' ')\n  };\n};\n\nvar textShadow = function textShadow(tokenStream) {\n  var _parseShadow2 = parseShadow(tokenStream),\n      offset = _parseShadow2.offset,\n      radius = _parseShadow2.radius,\n      color = _parseShadow2.color;\n\n  return {\n    textShadowOffset: offset,\n    textShadowRadius: radius,\n    textShadowColor: color\n  };\n};\n\nvar oneOfType = function oneOfType(tokenType) {\n  return function (functionStream) {\n    var value = functionStream.expect(tokenType);\n    functionStream.expectEmpty();\n    return value;\n  };\n};\n\nvar singleNumber = oneOfType(NUMBER);\nvar singleLength = oneOfType(LENGTH);\nvar singleAngle = oneOfType(ANGLE);\n\nvar xyTransformFactory = function xyTransformFactory(tokenType) {\n  return function (key, valueIfOmitted) {\n    return function (functionStream) {\n      var _ref3, _ref4;\n\n      var x = functionStream.expect(tokenType);\n      var y;\n\n      if (functionStream.hasTokens()) {\n        functionStream.expect(COMMA);\n        y = functionStream.expect(tokenType);\n      } else if (valueIfOmitted !== undefined) {\n        y = valueIfOmitted;\n      } else {\n        // Assumption, if x === y, then we can omit XY\n        // I.e. scale(5) => [{ scale: 5 }] rather than [{ scaleX: 5 }, { scaleY: 5 }]\n        return x;\n      }\n\n      functionStream.expectEmpty();\n      return [(_ref3 = {}, _ref3[key + \"Y\"] = y, _ref3), (_ref4 = {}, _ref4[key + \"X\"] = x, _ref4)];\n    };\n  };\n};\n\nvar xyNumber = xyTransformFactory(NUMBER);\nvar xyLength = xyTransformFactory(LENGTH);\nvar xyAngle = xyTransformFactory(ANGLE);\nvar partTransforms = {\n  perspective: singleNumber,\n  scale: xyNumber('scale'),\n  scaleX: singleNumber,\n  scaleY: singleNumber,\n  translate: xyLength('translate', 0),\n  translateX: singleLength,\n  translateY: singleLength,\n  rotate: singleAngle,\n  rotateX: singleAngle,\n  rotateY: singleAngle,\n  rotateZ: singleAngle,\n  skewX: singleAngle,\n  skewY: singleAngle,\n  skew: xyAngle('skew', '0deg')\n};\n\nvar transform = function transform(tokenStream) {\n  var transforms = [];\n  var didParseFirst = false;\n\n  while (tokenStream.hasTokens()) {\n    if (didParseFirst) tokenStream.expect(SPACE);\n    var functionStream = tokenStream.expectFunction();\n    var functionName = functionStream.functionName;\n    var transformedValues = partTransforms[functionName](functionStream);\n\n    if (!Array.isArray(transformedValues)) {\n      var _ref5;\n\n      transformedValues = [(_ref5 = {}, _ref5[functionName] = transformedValues, _ref5)];\n    }\n\n    transforms = transformedValues.concat(transforms);\n    didParseFirst = true;\n  }\n\n  return {\n    transform: transforms\n  };\n};\n\nvar background = function background(tokenStream) {\n  return {\n    backgroundColor: tokenStream.expect(COLOR)\n  };\n};\n\nvar borderColor = directionFactory({\n  types: [COLOR],\n  prefix: 'border',\n  suffix: 'Color'\n});\nvar borderRadius = directionFactory({\n  directions: ['TopLeft', 'TopRight', 'BottomRight', 'BottomLeft'],\n  prefix: 'border',\n  suffix: 'Radius'\n});\nvar borderWidth = directionFactory({\n  prefix: 'border',\n  suffix: 'Width'\n});\nvar margin = directionFactory({\n  types: [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT, AUTO],\n  prefix: 'margin'\n});\nvar padding = directionFactory({\n  prefix: 'padding'\n});\n\nvar fontVariant = function fontVariant(tokenStream) {\n  return {\n    fontVariant: [tokenStream.expect(IDENT)]\n  };\n};\n\nvar fontWeight = function fontWeight(tokenStream) {\n  return {\n    fontWeight: tokenStream.expect(WORD) // Also match numbers as strings\n\n  };\n};\n\nvar shadowOffset = function shadowOffset(tokenStream) {\n  return {\n    shadowOffset: parseShadowOffset(tokenStream)\n  };\n};\n\nvar textShadowOffset = function textShadowOffset(tokenStream) {\n  return {\n    textShadowOffset: parseShadowOffset(tokenStream)\n  };\n};\n\nvar transforms = {\n  background: background,\n  border: border,\n  borderColor: borderColor,\n  borderRadius: borderRadius,\n  borderWidth: borderWidth,\n  boxShadow: boxShadow,\n  flex: flex,\n  flexFlow: flexFlow,\n  font: font,\n  fontFamily: fontFamily,\n  fontVariant: fontVariant,\n  fontWeight: fontWeight,\n  margin: margin,\n  padding: padding,\n  placeContent: placeContent,\n  shadowOffset: shadowOffset,\n  textShadow: textShadow,\n  textShadowOffset: textShadowOffset,\n  textDecoration: textDecoration,\n  textDecorationLine: textDecorationLine,\n  transform: transform\n};\nvar propertiesWithoutUnits;\n\nif (false) {}\n\nvar devPropertiesWithUnitsRegExp = propertiesWithoutUnits != null ? new RegExp(propertiesWithoutUnits.join('|')) : null;\nvar SYMBOL_MATCH = 'SYMBOL_MATCH';\n\nvar TokenStream =\n/*#__PURE__*/\nfunction () {\n  function TokenStream(nodes, parent) {\n    this.index = 0;\n    this.nodes = nodes;\n    this.functionName = parent != null ? parent.value : null;\n    this.lastValue = null;\n    this.rewindIndex = -1;\n  }\n\n  var _proto = TokenStream.prototype;\n\n  _proto.hasTokens = function hasTokens() {\n    return this.index <= this.nodes.length - 1;\n  };\n\n  _proto[SYMBOL_MATCH] = function () {\n    if (!this.hasTokens()) return null;\n    var node = this.nodes[this.index];\n\n    for (var i = 0; i < arguments.length; i += 1) {\n      var tokenDescriptor = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      var value = tokenDescriptor(node);\n\n      if (value !== null) {\n        this.index += 1;\n        this.lastValue = value;\n        return value;\n      }\n    }\n\n    return null;\n  };\n\n  _proto.matches = function matches() {\n    return this[SYMBOL_MATCH].apply(this, arguments) !== null;\n  };\n\n  _proto.expect = function expect() {\n    var value = this[SYMBOL_MATCH].apply(this, arguments);\n    return value !== null ? value : this[\"throw\"]();\n  };\n\n  _proto.matchesFunction = function matchesFunction() {\n    var node = this.nodes[this.index];\n    if (node.type !== 'function') return null;\n    var value = new TokenStream(node.nodes, node);\n    this.index += 1;\n    this.lastValue = null;\n    return value;\n  };\n\n  _proto.expectFunction = function expectFunction() {\n    var value = this.matchesFunction();\n    return value !== null ? value : this[\"throw\"]();\n  };\n\n  _proto.expectEmpty = function expectEmpty() {\n    if (this.hasTokens()) this[\"throw\"]();\n  };\n\n  _proto[\"throw\"] = function _throw() {\n    throw new Error(\"Unexpected token type: \" + this.nodes[this.index].type);\n  };\n\n  _proto.saveRewindPoint = function saveRewindPoint() {\n    this.rewindIndex = this.index;\n  };\n\n  _proto.rewind = function rewind() {\n    if (this.rewindIndex === -1) throw new Error('Internal error');\n    this.index = this.rewindIndex;\n    this.lastValue = null;\n  };\n\n  return TokenStream;\n}();\n/* eslint-disable no-param-reassign */\n// Note if this is wrong, you'll need to change tokenTypes.js too\n\n\nvar numberOrLengthRe = /^([+-]?(?:\\d*\\.)?\\d+(?:e[+-]?\\d+)?)(?:px)?$/i;\nvar numberOnlyRe = /^[+-]?(?:\\d*\\.\\d*|[1-9]\\d*)(?:e[+-]?\\d+)?$/i;\nvar boolRe = /^true|false$/i;\nvar nullRe = /^null$/i;\nvar undefinedRe = /^undefined$/i; // Undocumented export\n\nvar transformRawValue = function transformRawValue(propName, value) {\n  if (false) { var isNumberWithoutUnit, needsUnit; }\n\n  var numberMatch = value.match(numberOrLengthRe);\n  if (numberMatch !== null) return Number(numberMatch[1]);\n  var boolMatch = value.match(boolRe);\n  if (boolMatch !== null) return boolMatch[0].toLowerCase() === 'true';\n  var nullMatch = value.match(nullRe);\n  if (nullMatch !== null) return null;\n  var undefinedMatch = value.match(undefinedRe);\n  if (undefinedMatch !== null) return undefined;\n  return value;\n};\n\nvar baseTransformShorthandValue = function baseTransformShorthandValue(propName, value) {\n  var ast = parse__default(value);\n  var tokenStream = new TokenStream(ast.nodes);\n  return transforms[propName](tokenStream);\n};\n\nvar transformShorthandValue =  true ? baseTransformShorthandValue : 0;\n\nvar getStylesForProperty = function getStylesForProperty(propName, inputValue, allowShorthand) {\n  var _ref6;\n\n  var isRawValue = allowShorthand === false || !(propName in transforms);\n  var value = inputValue.trim();\n  var propValues = isRawValue ? (_ref6 = {}, _ref6[propName] = transformRawValue(propName, value), _ref6) : transformShorthandValue(propName, value);\n  return propValues;\n};\n\nvar getPropertyName = function getPropertyName(propName) {\n  var isCustomProp = /^--\\w+/.test(propName);\n\n  if (isCustomProp) {\n    return propName;\n  }\n\n  return camelizeStyleName(propName);\n};\n\nvar index = function index(rules, shorthandBlacklist) {\n  if (shorthandBlacklist === void 0) {\n    shorthandBlacklist = [];\n  }\n\n  return rules.reduce(function (accum, rule) {\n    var propertyName = getPropertyName(rule[0]);\n    var value = rule[1];\n    var allowShorthand = shorthandBlacklist.indexOf(propertyName) === -1;\n    return Object.assign(accum, getStylesForProperty(propertyName, value, allowShorthand));\n  }, {});\n};\n\n__webpack_unused_export__ = index;\nexports.Hp = getPropertyName;\nexports.HM = getStylesForProperty;\n__webpack_unused_export__ = transformRawValue;\n\n\n/***/ }),\n\n/***/ 72:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"config\": () => (/* binding */ config),\n  \"default\": () => (/* binding */ handler)\n});\n\n// EXTERNAL MODULE: ./node_modules/css-to-react-native/index.js\nvar css_to_react_native = __webpack_require__(915);\n// EXTERNAL MODULE: ./node_modules/css-background-parser/index.js\nvar css_background_parser = __webpack_require__(969);\n// EXTERNAL MODULE: ./node_modules/css-box-shadow/index.js\nvar css_box_shadow = __webpack_require__(631);\n// EXTERNAL MODULE: ./node_modules/postcss-value-parser/lib/index.js\nvar lib = __webpack_require__(627);\n;// CONCATENATED MODULE: ./node_modules/@shuding/opentype.js/dist/opentype.module.js\n/**\n * https://opentype.js.org v1.3.5 | (c) Frederik De Bleser and other contributors | MIT License | Uses fflate by 101arrowz and string.prototype.codepointat polyfill by Mathias Bynens\n */\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var opentype_module_i = 0; opentype_module_i < 32768; ++opentype_module_i) {\n    // reverse table algorithm from SO\n    var x = ((opentype_module_i & 0xAAAA) >>> 1) | ((opentype_module_i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[opentype_module_i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            { ++l[cd[i] - 1]; }\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var opentype_module_i = 0; opentype_module_i < 144; ++opentype_module_i)\n    { flt[opentype_module_i] = 8; }\nfor (var opentype_module_i = 144; opentype_module_i < 256; ++opentype_module_i)\n    { flt[opentype_module_i] = 9; }\nfor (var opentype_module_i = 256; opentype_module_i < 280; ++opentype_module_i)\n    { flt[opentype_module_i] = 7; }\nfor (var opentype_module_i = 280; opentype_module_i < 288; ++opentype_module_i)\n    { flt[opentype_module_i] = 8; }\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var opentype_module_i = 0; opentype_module_i < 32; ++opentype_module_i)\n    { fdt[opentype_module_i] = 5; }\n// fixed length map\nvar flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            { m = a[i]; }\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        { s = 0; }\n    if (e == null || e > v.length)\n        { e = v.length; }\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        { Error.captureStackTrace(e, err); }\n    if (!nt)\n        { throw e; }\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        { return buf || new u8(0); }\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        { st = {}; }\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        { buf = new u8(sl * 3); }\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        { err(0); }\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    { cbuf(bt + l); }\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                { lm = flrm, dm = fdrm, lbt = 9, dbt = 5; }\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            { n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1]; }\n                        else if (s == 17)\n                            { n = 3 + bits(dat, pos, 7), pos += 3; }\n                        else if (s == 18)\n                            { n = 11 + bits(dat, pos, 127), pos += 7; }\n                        while (n--)\n                            { ldt[i++] = c; }\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                { err(1); }\n            if (pos > tbts) {\n                if (noSt)\n                    { err(0); }\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            { cbuf(bt + 131072); }\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    { err(0); }\n                break;\n            }\n            if (!c)\n                { err(2); }\n            if (sym < 256)\n                { buf[bt++] = sym; }\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    { err(3); }\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        { err(0); }\n                    break;\n                }\n                if (noBuf)\n                    { cbuf(bt + 131072); }\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            { final = 1, st.m = lbt, st.d = dm, st.n = dbt; }\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nfunction inflateSync(data, out) {\n    return inflt(data, out);\n}\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n\n// Geometric objects\n\n// import BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function (x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function (x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function (\n    x1,\n    y1,\n    x2,\n    y2,\n    x,\n    y\n) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function (\n    x1,\n    y1,\n    x,\n    y\n) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y,\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function () {\n    this.commands.push({\n        type: 'Z',\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function (pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n    // else if (pathOrCommands instanceof BoundingBox) {\n    //     const box = pathOrCommands;\n    //     this.moveTo(box.x1, box.y1);\n    //     this.lineTo(box.x2, box.y1);\n    //     this.lineTo(box.x2, box.y2);\n    //     this.lineTo(box.x1, box.y2);\n    //     this.close();\n    //     return;\n    // }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function (decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var arguments$1 = arguments;\n\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments$1[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Glyph encoding\n\nvar cffStandardStrings = [\n    '.notdef',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    'questiondown',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    'AE',\n    'ordfeminine',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    'ae',\n    'dotlessi',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls',\n    'onesuperior',\n    'logicalnot',\n    'mu',\n    'trademark',\n    'Eth',\n    'onehalf',\n    'plusminus',\n    'Thorn',\n    'onequarter',\n    'divide',\n    'brokenbar',\n    'degree',\n    'thorn',\n    'threequarters',\n    'twosuperior',\n    'registered',\n    'minus',\n    'eth',\n    'multiply',\n    'threesuperior',\n    'copyright',\n    'Aacute',\n    'Acircumflex',\n    'Adieresis',\n    'Agrave',\n    'Aring',\n    'Atilde',\n    'Ccedilla',\n    'Eacute',\n    'Ecircumflex',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Ntilde',\n    'Oacute',\n    'Ocircumflex',\n    'Odieresis',\n    'Ograve',\n    'Otilde',\n    'Scaron',\n    'Uacute',\n    'Ucircumflex',\n    'Udieresis',\n    'Ugrave',\n    'Yacute',\n    'Ydieresis',\n    'Zcaron',\n    'aacute',\n    'acircumflex',\n    'adieresis',\n    'agrave',\n    'aring',\n    'atilde',\n    'ccedilla',\n    'eacute',\n    'ecircumflex',\n    'edieresis',\n    'egrave',\n    'iacute',\n    'icircumflex',\n    'idieresis',\n    'igrave',\n    'ntilde',\n    'oacute',\n    'ocircumflex',\n    'odieresis',\n    'ograve',\n    'otilde',\n    'scaron',\n    'uacute',\n    'ucircumflex',\n    'udieresis',\n    'ugrave',\n    'yacute',\n    'ydieresis',\n    'zcaron',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    '266 ff',\n    'onedotenleader',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    'isuperior',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    'ff',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    'Dotaccentsmall',\n    'Macronsmall',\n    'figuredash',\n    'hypheninferior',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    'zerosuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall',\n    '001.000',\n    '001.001',\n    '001.002',\n    '001.003',\n    'Black',\n    'Bold',\n    'Book',\n    'Light',\n    'Medium',\n    'Regular',\n    'Roman',\n    'Semibold' ];\n\nvar cffStandardEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    '',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    '',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    '',\n    'questiondown',\n    '',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    '',\n    'ring',\n    'cedilla',\n    '',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'AE',\n    '',\n    'ordfeminine',\n    '',\n    '',\n    '',\n    '',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'ae',\n    '',\n    '',\n    '',\n    'dotlessi',\n    '',\n    '',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls' ];\n\nvar cffExpertEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    '',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    '',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    '',\n    '',\n    'isuperior',\n    '',\n    '',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    '',\n    '',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    '',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    '',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    '',\n    '',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    '',\n    'Dotaccentsmall',\n    '',\n    '',\n    'Macronsmall',\n    '',\n    '',\n    'figuredash',\n    'hypheninferior',\n    '',\n    '',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    '',\n    '',\n    '',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    '',\n    '',\n    'zerosuperior',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall' ];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function (c) {\n    var code = c.codePointAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs.get(i);\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function (c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function (s) {\n    var code = s.codePointAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction addGlyphNamesAll(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)],\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\n// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\nvar check = { fail: fail, argument: argument, assert: argument };\n\n// The Glyph object\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    var _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function () {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function (p) {\n            _path = p;\n        },\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function (options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes =\n        options.unicodes || options.unicode !== undefined\n            ? [options.unicode]\n            : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if ('xMin' in options) {\n        this.xMin = options.xMin;\n    }\n\n    if ('yMin' in options) {\n        this.yMin = options.yMin;\n    }\n\n    if ('xMax' in options) {\n        this.xMax = options.xMax;\n    }\n\n    if ('yMax' in options) {\n        this.yMax = options.yMax;\n    }\n\n    if ('advanceWidth' in options) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function (unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// /**\n//  * Calculate the minimum bounding box for this glyph.\n//  * @return {opentype.BoundingBox}\n//  */\n// Glyph.prototype.getBoundingBox = function() {\n//     return this.path.getBoundingBox();\n// };\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function (x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var commands;\n    var hPoints;\n    if (!options) { options = {}; }\n    var xScale = options.xScale;\n    var yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        var scale = (1 / (this.path.unitsPerEm || 1000)) * fontSize;\n        if (xScale === undefined) { xScale = scale; }\n        if (yScale === undefined) { yScale = scale; }\n    }\n\n    var p = new Path();\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + cmd.x * xScale, y + -cmd.y * yScale);\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + cmd.x * xScale, y + -cmd.y * yScale);\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(\n                x + cmd.x1 * xScale,\n                y + -cmd.y1 * yScale,\n                x + cmd.x * xScale,\n                y + -cmd.y * yScale\n            );\n        } else if (cmd.type === 'C') {\n            p.curveTo(\n                x + cmd.x1 * xScale,\n                y + -cmd.y1 * yScale,\n                x + cmd.x2 * xScale,\n                y + -cmd.y2 * yScale,\n                x + cmd.x * xScale,\n                y + -cmd.y * yScale\n            );\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function () {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(\n        currentContour.length === 0,\n        'There are still points left in the current contour.'\n    );\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function () {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing,\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing =\n        this.advanceWidth -\n        metrics.leftSideBearing -\n        (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// The GlyphSet object\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function () {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function (newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (var i = 0; i < glyphs.length; i++) {\n            var glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function (index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        var glyph = this.glyphs[index];\n        var unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (var j = 0; j < unicodeObj.unicodes.length; j++)\n                { glyph.addUnicode(unicodeObj.unicodes[j]); }\n        }\n\n        this.glyphs[index].advanceWidth =\n            this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing =\n            this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function (index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({ index: index, font: font });\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function () {\n        var glyph = new Glyph({ index: index, font: font });\n\n        glyph.path = function () {\n            parseGlyph(glyph, data, position);\n            var path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function () {\n        var glyph = new Glyph({ index: index, font: font });\n\n        glyph.path = function () {\n            var path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nvar glyphset = { GlyphSet: GlyphSet, glyphLoader: glyphLoader, ttfGlyphLoader: ttfGlyphLoader, cffGlyphLoader: cffGlyphLoader };\n\n// The Layout object is the prototype of Substitution objects, and provides\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    var imin = 0;\n    var imax = arr.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        var val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    var range;\n    var imin = 0;\n    var imax = ranges.length - 1;\n    while (imin <= imax) {\n        var imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        var start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else {\n            imax = imid - 1;\n        }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) { return 0; }\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function (create) {\n        var layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] =\n                this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function () {\n        var layout = this.getTable();\n        if (!layout) {\n            return;\n        }\n        var hasLatn = false;\n        for (var i = 0; i < layout.scripts.length; i++) {\n            var name = layout.scripts[i].tag;\n            if (name === 'DFLT') { return name; }\n            if (name === 'latn') { hasLatn = true; }\n        }\n        if (hasLatn) { return 'latn'; }\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function (script, create) {\n        var layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            var scripts = layout.scripts;\n            var pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                var scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {\n                            reserved: 0,\n                            reqFeatureIndex: 0xffff,\n                            featureIndexes: [],\n                        },\n                        langSysRecords: [],\n                    },\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function (script, language, create) {\n        var scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            var pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                var langSysRecord = {\n                    tag: language,\n                    langSys: {\n                        reserved: 0,\n                        reqFeatureIndex: 0xffff,\n                        featureIndexes: [],\n                    },\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function (script, language, feature, create) {\n        var langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            var featureRecord;\n            var featIndexes = langSysTable.featureIndexes;\n            var allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (var i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                var index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(\n                    index === 0 || feature >= allFeatures[index - 1].tag,\n                    'Features must be added in alphabetical order.'\n                );\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] },\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function (script, language, feature, lookupType, create) {\n        var featureTable = this.getFeatureTable(\n            script,\n            language,\n            feature,\n            create\n        );\n        var tables = [];\n        if (featureTable) {\n            var lookupTable;\n            var lookupListIndexes = featureTable.lookupListIndexes;\n            var allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (var i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined,\n                };\n                var index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function (classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (\n                    classDefTable.startGlyph <= glyphIndex &&\n                    glyphIndex <\n                        classDefTable.startGlyph + classDefTable.classes.length\n                ) {\n                    return classDefTable.classes[\n                        glyphIndex - classDefTable.startGlyph\n                    ];\n                }\n                return 0;\n            case 2:\n                var range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function (coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                var index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                var range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function (coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            var glyphs = [];\n            var ranges = coverageTable.ranges;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[i];\n                var start = range.start;\n                var end = range.end;\n                for (var j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    },\n};\n\n// The Position object provides utility methods to manipulate\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    var script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (var i = 0; i < kerningLookups.length; i++) {\n        var subtables = kerningLookups[i].subtables;\n        for (var j = 0; j < subtables.length; j++) {\n            var subtable = subtables[j];\n            var covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) { continue; }\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    var pairSet = subtable.pairSets[covIndex];\n                    for (var k = 0; k < pairSet.length; k++) {\n                        var pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    var class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    var class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    var pair$1 = subtable.classRecords[class1][class2];\n                    return pair$1.value1 && pair$1.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\n// The Substitution object provides utility methods to manipulate\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    var n = ar1.length;\n    if (n !== ar2.length) {\n        return false;\n    }\n    for (var i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    var subtables = lookupTable.subtables;\n    for (var i = 0; i < subtables.length; i++) {\n        var subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function () {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [\n            {\n                tag: 'DFLT',\n                script: {\n                    defaultLangSys: {\n                        reserved: 0,\n                        reqFeatureIndex: 0xffff,\n                        featureIndexes: [],\n                    },\n                    langSysRecords: [],\n                },\n            } ],\n        features: [],\n        lookups: [],\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function (feature, script, language) {\n    var substitutions = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var j = (void 0);\n            if (subtable.substFormat === 1) {\n                var delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    var glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                var substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all multiple substitutions (lookup type 2) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('ccmp', 'stch')\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getMultiple = function (feature, script, language) {\n    var substitutions = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 2);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var j = (void 0);\n\n            for (j = 0; j < glyphs.length; j++) {\n                var glyph = glyphs[j];\n                var replacements = subtable.sequences[j];\n                substitutions.push({ sub: glyph, by: replacements });\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function (feature, script, language) {\n    var alternates = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var alternateSets = subtable.alternateSets;\n            for (var j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function (feature, script, language) {\n    var ligatures = [];\n    var lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (var idx = 0; idx < lookupTables.length; idx++) {\n        var subtables = lookupTables[idx].subtables;\n        for (var i = 0; i < subtables.length; i++) {\n            var subtable = subtables[i];\n            var glyphs = this.expandCoverage(subtable.coverage);\n            var ligatureSets = subtable.ligatureSets;\n            for (var j = 0; j < glyphs.length; j++) {\n                var startGlyph = glyphs[j];\n                var ligSet = ligatureSets[j];\n                for (var k = 0; k < ligSet.length; k++) {\n                    var lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph,\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: id } (format 1 is not supported)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        1,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 2, {\n        // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: { format: 1, glyphs: [] },\n        substitute: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Single: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify a multiple substitution (lookup type 2)\n * @param {string} feature - 4-letter feature name ('ccmp', 'stch')\n * @param {Object} substitution - { sub: id, by: [id] } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addMultiple = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    check.assert(\n        substitution.by instanceof Array && substitution.by.length > 1,\n        'Multiple: \"by\" must be an array of two or more ids'\n    );\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        2,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 1, {\n        // lookup type 2 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: { format: 1, glyphs: [] },\n        sequences: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Multiple: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.sequences.splice(pos, 0, 0);\n    }\n    subtable.sequences[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 3)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function (\n    feature,\n    substitution,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        3,\n        true\n    )[0];\n    var subtable = getSubstFormat(lookupTable, 1, {\n        // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: { format: 1, glyphs: [] },\n        alternateSets: [],\n    });\n    check.assert(\n        subtable.coverage.format === 1,\n        'Alternate: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = substitution.sub;\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function (\n    feature,\n    ligature,\n    script,\n    language\n) {\n    var lookupTable = this.getLookupTables(\n        script,\n        language,\n        feature,\n        4,\n        true\n    )[0];\n    var subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {\n            // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: [],\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(\n        subtable.coverage.format === 1,\n        'Ligature: unable to modify coverage table format ' +\n            subtable.coverage.format\n    );\n    var coverageGlyph = ligature.sub[0];\n    var ligComponents = ligature.sub.slice(1);\n    var ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents,\n    };\n    var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        var ligatureSet = subtable.ligatureSets[pos];\n        for (var i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function (feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language).concat(\n                this.getAlternates(feature, script, language)\n            );\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.getLigatures(feature, script, language);\n        case 'ccmp':\n            return this.getMultiple(feature, script, language).concat(\n                this.getLigatures(feature, script, language)\n            );\n        case 'stch':\n            return this.getMultiple(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function (feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n        case 'ccmp':\n            if (sub.by instanceof Array) {\n                return this.addMultiple(feature, sub, script, language);\n            }\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\n// Parsing utility functions\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    var v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    var v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    var major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    var minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) { minorBase = 0x1000; }\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    var list = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    var list = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    var records = new Array(count);\n    var fields = Object.keys(recordDescription);\n    for (var i = 0; i < count; i++) {\n        var rec = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    var records = new Array(count);\n    var fields = Object.keys(recordDescription);\n    for (var i = 0; i < count; i++) {\n        var rec = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        var fields = Object.keys(description);\n        var struct = {};\n        for (var j = 0; j < fields.length; j++) {\n            var fieldName = fields[j];\n            var fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    var valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    var valueFormat = this.parseUShort();\n    var valueCount = this.parseUShort();\n    var values = new Array(valueCount);\n    for (var i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    var structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    var structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    var offsets = this.parseOffset16List();\n    var count = offsets.length;\n    var relativeOffset = this.relativeOffset;\n    var list = new Array(count);\n    for (var i = 0; i < count; i++) {\n        var start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            var subOffsets = this.parseOffset16List();\n            var subList = new Array(subOffsets.length);\n            for (var j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    var startOffset = this.offset + this.relativeOffset;\n    var format = this.parseUShort();\n    var count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        var ranges = new Array(count);\n        for (var i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    var startOffset = this.offset + this.relativeOffset;\n    var format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nvar langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        var lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        var lookupFlag = this.parseUShort();\n        var useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        var majorVersion = this.parseUShort();\n        var minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        var featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nvar parse = {\n    getByte: getByte,\n    getCard8: getByte,\n    getUShort: getUShort,\n    getCard16: getUShort,\n    getShort: getShort,\n    getULong: getULong,\n    getFixed: getFixed,\n    getTag: getTag,\n    getOffset: getOffset,\n    getBytes: getBytes,\n    bytesToString: bytesToString,\n    Parser: Parser,\n};\n\n// The `glyf` table describes the glyphs in TrueType outline format.\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    var p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    var flags;\n    var flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (var i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (var i$1 = 0; i$1 < glyph.instructionLength; i$1 += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (var i$2 = 0; i$2 < numberOfCoordinates; i$2 += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i$2 += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (var i$3 = 0; i$3 < numberOfCoordinates; i$3 += 1) {\n                    flag = flags[i$3];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i$3) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (var i$4 = 0; i$4 < numberOfCoordinates; i$4 += 1) {\n                    flag = flags[i$4];\n                    point = points[i$4];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (var i$5 = 0; i$5 < numberOfCoordinates; i$5 += 1) {\n                    flag = flags[i$5];\n                    point = points[i$5];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (var i$6 = 0; i$6 < glyph.instructionLength; i$6 += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n\n    for (var contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        var contour = contours[contourIndex];\n\n        var prev = null;\n        var curr = contour[contour.length - 1];\n        var next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                var start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (var i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                var prev2 = prev;\n                var next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (var j = 0; j < glyph.components.length; j += 1) {\n            var component = glyph.components[j];\n            var componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                var transformedPoints = (void 0);\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    var firstPt = glyph.points[component.matchedPoints[0]];\n                    var secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    var transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (var i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    var glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        { return parseGlyfTableOnLowMemory(data, start, loca, font); }\n    else\n        { return parseGlyfTableAll(data, start, loca, font); }\n}\n\nvar glyf = { getPath: getPath, parse: parseGlyfTable};\n\n/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n\nvar instructionTable;\nvar exec;\nvar execGlyph;\nvar execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nvar roundSuper = function (v) {\n    var period = this.srPeriod;\n    var phase = this.srPhase;\n    var threshold = this.srThreshold;\n    var sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) { return phase * sign; }\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nvar xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        var do1;\n        var do2;\n        var doa1;\n        var doa2;\n        var dm1;\n        var dm2;\n        var dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        var rpx = org ? rp.xo : rp.x;\n        var rpy = org ? rp.yo : rp.y;\n        var rpdx = rpx + d * pv.x;\n        var rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nvar yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        var do1;\n        var do2;\n        var doa1;\n        var doa2;\n        var dm1;\n        var dm2;\n        var dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        var rpx = org ? rp.xo : rp.x;\n        var rpy = org ? rp.yo : rp.y;\n        var rpdx = rpx + d * pv.x;\n        var rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    var dm1;\n    var dm2;\n    var do1;\n    var do2;\n    var doa1;\n    var doa2;\n    var dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    var rpx = org ? rp.xo : rp.x;\n    var rpy = org ? rp.yo : rp.y;\n    var rpdx = rpx + d * pv.x;\n    var rpdy = rpy + d * pv.y;\n\n    var pvns = pv.normalSlope;\n    var fvs = this.slope;\n\n    var px = p.x;\n    var py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    var d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) { return xUnitVector; }\n    else if (x === 0 && y === 1) { return yUnitVector; }\n    else { return new UnitVector(x, y); }\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    var p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) { p = p.nextPointOnContour; }\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    var p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) { p = p.prevPointOnContour; }\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nvar HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nvar defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) { return; }\n\n    var font = this.font;\n    var prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        var fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        var oCvt = font.tables.cvt;\n        if (oCvt) {\n            var cvt = prepState.cvt = new Array(oCvt.length);\n            var scale = ppem / font.unitsPerEm;\n            for (var c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) { return; }\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    var xScale = prepState.ppem / prepState.font.unitsPerEm;\n    var yScale = xScale;\n    var components = glyph.components;\n    var contours;\n    var gZone;\n    var state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        var font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (var i = 0; i < components.length; i++) {\n            var c = components[i];\n            var cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            var dx = Math.round(c.dx * xScale);\n            var dy = Math.round(c.dy * yScale);\n            var gz = state.gZone;\n            var cc = state.contours;\n            for (var pi = 0; pi < gz.length; pi++) {\n                var p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            var gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (var j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    var points = glyph.points || [];\n    var pLen = points.length;\n    var gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    var contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    var cp; // current point\n    for (var i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    var sp; // start point\n    var np; // next point\n\n    for (var i$1 = 0; i$1 < pLen; i$1++) {\n        cp = gZone[i$1];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i$1);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i$1 + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) { return; }\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (var i$2 = 0; i$2 < pLen; i$2++) {\n            console.log(i$2, gZone[i$2].x, gZone[i$2].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (var i$3 = 0; i$3 < pLen; i$3++) {\n            console.log(i$3, gZone[i$3].x, gZone[i$3].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    var prog = state.prog;\n\n    if (!prog) { return; }\n\n    var pLen = prog.length;\n    var ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) { state.step++; }\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    var tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (var i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    var prog = state.prog;\n    var ip = state.ip;\n    var nesting = 1;\n    var ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            { nesting++; }\n        else if (ins === 0x59) // EIF\n            { nesting--; }\n        else if (ins === 0x40) // NPUSHB\n            { ip += prog[ip + 1] + 1; }\n        else if (ins === 0x41) // NPUSHW\n            { ip += 2 * prog[ip + 1] + 1; }\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            { ip += ins - 0xB0 + 1; }\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            { ip += (ins - 0xB8 + 1) * 2; }\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            { break; }\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SVTCA[' + v.axis + ']'); }\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SPVTCA[' + v.axis + ']'); }\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) { console.log(state.step, 'SFVTCA[' + v.axis + ']'); }\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log('SPVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log('SFVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    var stack = state.stack;\n    var y = stack.pop();\n    var x = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SPVFS[]', y, x); }\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    var stack = state.stack;\n    var y = stack.pop();\n    var x = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SPVFS[]', y, x); }\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    var stack = state.stack;\n    var pv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'GPV[]'); }\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    var stack = state.stack;\n    var fv = state.fv;\n\n    if (exports.DEBUG) { console.log(state.step, 'GFV[]'); }\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'SFVTPV[]'); }\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    var stack = state.stack;\n    var pa0i = stack.pop();\n    var pa1i = stack.pop();\n    var pb0i = stack.pop();\n    var pb1i = stack.pop();\n    var pi = stack.pop();\n    var z0 = state.z0;\n    var z1 = state.z1;\n    var pa0 = z0[pa0i];\n    var pa1 = z0[pa1i];\n    var pb0 = z1[pb0i];\n    var pb1 = z1[pb1i];\n    var p = state.z2[pi];\n\n    if (exports.DEBUG) { console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi); }\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    var x1 = pa0.x;\n    var y1 = pa0.y;\n    var x2 = pa1.x;\n    var y2 = pa1.y;\n    var x3 = pb0.x;\n    var y3 = pb0.y;\n    var x4 = pb1.x;\n    var y4 = pb1.y;\n\n    var div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    var f1 = x1 * y2 - y1 * x2;\n    var f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP0[]', state.rp0); }\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP1[]', state.rp1); }\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SRP2[]', state.rp2); }\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP0[]', n); }\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP1[]', n); }\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZP2[]', n); }\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SZPS[]', n); }\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) { initTZone(state); }\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SLOOP[]', state.loop); }\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTG[]'); }\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTHG[]'); }\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    var d = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SMD[]', d); }\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) { console.log(state.step, 'ELSE[]'); }\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    var o = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'JMPR[]', o); }\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SCVTCI[]', n); }\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.step, 'DUP[]'); }\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) { console.log(state.step, 'POP[]'); }\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) { console.log(state.step, 'CLEAR[]'); }\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    var stack = state.stack;\n\n    var a = stack.pop();\n    var b = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SWAP[]'); }\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.step, 'DEPTH[]'); }\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    var stack = state.stack;\n    var fn = stack.pop();\n    var c = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LOOPCALL[]', fn, c); }\n\n    // saves callers program\n    var cip = state.ip;\n    var cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (var i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) { console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        ); }\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    var fn = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CALL[]', fn); }\n\n    // saves callers program\n    var cip = state.ip;\n    var cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) { console.log(++state.step, 'returning from', fn); }\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    var stack = state.stack;\n    var k = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CINDEX[]', k); }\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    var stack = state.stack;\n    var k = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MINDEX[]', k); }\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') { throw new Error('FDEF not allowed here'); }\n    var stack = state.stack;\n    var prog = state.prog;\n    var ip = state.ip;\n\n    var fn = stack.pop();\n    var ipBegin = ip;\n\n    if (exports.DEBUG) { console.log(state.step, 'FDEF[]', fn); }\n\n    while (prog[++ip] !== 0x2D){ }\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    var pi = state.stack.pop();\n    var p = state.z0[pi];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    if (exports.DEBUG) { console.log(state.step, 'MDAP[' + round + ']', pi); }\n\n    var d = pv.distance(p, HPZero);\n\n    if (round) { d = state.round(d); }\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    var z2 = state.z2;\n    var pLen = z2.length - 2;\n    var cp;\n    var pp;\n    var np;\n\n    if (exports.DEBUG) { console.log(state.step, 'IUP[' + v.axis + ']'); }\n\n    for (var i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) { continue; }\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) { continue; }\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var loop = state.loop;\n    var z2 = state.z2;\n\n    while (loop--)\n    {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        var d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var ci = stack.pop();\n    var sp = state.z2[state.contours[ci]];\n    var p = sp;\n\n    if (exports.DEBUG) { console.log(state.step, 'SHC[' + a + ']', ci); }\n\n    var d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) { fv.setRelative(p, p, d, pv); }\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    var stack = state.stack;\n    var rpi = a ? state.rp1 : state.rp2;\n    var rp = (a ? state.z0 : state.z1)[rpi];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    var e = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SHZ[' + a + ']', e); }\n\n    var z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    var p;\n    var d = pv.distance(rp, rp, false, true);\n    var pLen = z.length - 2;\n    for (var i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    var stack = state.stack;\n    var loop = state.loop;\n    var fv = state.fv;\n    var d = stack.pop() / 0x40;\n    var z2 = state.z2;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    var stack = state.stack;\n    var rp1i = state.rp1;\n    var rp2i = state.rp2;\n    var loop = state.loop;\n    var rp1 = state.z0[rp1i];\n    var rp2 = state.z1[rp2i];\n    var fv = state.fv;\n    var pv = state.dpv;\n    var z2 = state.z2;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    var stack = state.stack;\n    var d = stack.pop() / 64;\n    var pi = stack.pop();\n    var p = state.z1[pi];\n    var rp0 = state.z0[state.rp0];\n    var fv = state.fv;\n    var pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) { console.log(state.step, 'MSIRP[' + a + ']', d, pi); }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) { state.rp0 = pi; }\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    var stack = state.stack;\n    var rp0i = state.rp0;\n    var rp0 = state.z0[rp0i];\n    var loop = state.loop;\n    var fv = state.fv;\n    var pv = state.pv;\n    var z1 = state.z1;\n\n    while (loop--) {\n        var pi = stack.pop();\n        var p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RTDG[]'); }\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var pi = stack.pop();\n    var p = state.z0[pi];\n    var fv = state.fv;\n    var pv = state.pv;\n    var cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    var d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) { d = cv; }\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    var prog = state.prog;\n    var ip = state.ip;\n    var stack = state.stack;\n\n    var n = prog[++ip];\n\n    if (exports.DEBUG) { console.log(state.step, 'NPUSHB[]', n); }\n\n    for (var i = 0; i < n; i++) { stack.push(prog[++ip]); }\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    var ip = state.ip;\n    var prog = state.prog;\n    var stack = state.stack;\n    var n = prog[++ip];\n\n    if (exports.DEBUG) { console.log(state.step, 'NPUSHW[]', n); }\n\n    for (var i = 0; i < n; i++) {\n        var w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) { w = -((w ^ 0xffff) + 1); }\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    var stack = state.stack;\n    var store = state.store;\n\n    if (!store) { store = state.store = []; }\n\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WS', v, l); }\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    var stack = state.stack;\n    var store = state.store;\n\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'RS', l); }\n\n    var v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    var stack = state.stack;\n\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WCVTP', v, l); }\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    var stack = state.stack;\n    var cvte = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'RCVT', cvte); }\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    var stack = state.stack;\n    var pi = stack.pop();\n    var p = state.z2[pi];\n\n    if (exports.DEBUG) { console.log(state.step, 'GC[' + a + ']', pi); }\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    var stack = state.stack;\n    var pi2 = stack.pop();\n    var pi1 = stack.pop();\n    var p2 = state.z1[pi2];\n    var p1 = state.z0[pi1];\n    var d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) { console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d); }\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) { console.log(state.step, 'MPPEM[]'); }\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) { console.log(state.step, 'FLIPON[]'); }\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LT[]', e2, e1); }\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'LTEQ[]', e2, e1); }\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'GT[]', e2, e1); }\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'GTEQ[]', e2, e1); }\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'EQ[]', e2, e1); }\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NEQ[]', e2, e1); }\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ODD[]', n); }\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'EVEN[]', n); }\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    var test = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'IF[]', test); }\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) { console.log(state.step,  'EIF[]'); }\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) { console.log(state.step, 'EIF[]'); }\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'AND[]', e2, e1); }\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'OR[]', e2, e1); }\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    var stack = state.stack;\n    var e = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NOT[]', e); }\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var fv = state.fv;\n    var pv = state.pv;\n    var ppem = state.ppem;\n    var base = state.deltaBase + (b - 1) * 16;\n    var ds = state.deltaShift;\n    var z0 = state.z0;\n\n    if (exports.DEBUG) { console.log(state.step, 'DELTAP[' + b + ']', n, stack); }\n\n    for (var i = 0; i < n; i++) {\n        var pi = stack.pop();\n        var arg = stack.pop();\n        var appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) { continue; }\n\n        var mag = (arg & 0x0F) - 8;\n        if (mag >= 0) { mag++; }\n        if (exports.DEBUG) { console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds); }\n\n        var p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SDB[]', n); }\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SDS[]', n); }\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ADD[]', n2, n1); }\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SUB[]', n2, n1); }\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'DIV[]', n2, n1); }\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    var stack = state.stack;\n    var n2 = stack.pop();\n    var n1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MUL[]', n2, n1); }\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ABS[]', n); }\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'NEG[]', n); }\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'FLOOR[]', n); }\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'CEILING[]', n); }\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ROUND[]'); }\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    var stack = state.stack;\n    var v = stack.pop();\n    var l = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'WCVTF[]', v, l); }\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    var stack = state.stack;\n    var n = stack.pop();\n    var ppem = state.ppem;\n    var base = state.deltaBase + (b - 1) * 16;\n    var ds = state.deltaShift;\n\n    if (exports.DEBUG) { console.log(state.step, 'DELTAC[' + b + ']', n, stack); }\n\n    for (var i = 0; i < n; i++) {\n        var c = stack.pop();\n        var arg = stack.pop();\n        var appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) { continue; }\n\n        var mag = (arg & 0x0F) - 8;\n        if (mag >= 0) { mag++; }\n\n        var delta = mag * ds;\n\n        if (exports.DEBUG) { console.log(state.step, 'DELTACFIX', c, 'by', delta); }\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'SROUND[]', n); }\n\n    state.round = roundSuper;\n\n    var period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) { state.srThreshold = 0; }\n    else { state.srThreshold = (n / 8 - 0.5) * period; }\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    var n = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'S45ROUND[]', n); }\n\n    state.round = roundSuper;\n\n    var period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) { state.srThreshold = 0; }\n    else { state.srThreshold = (n / 8 - 0.5) * period; }\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) { console.log(state.step, 'ROFF[]'); }\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RUTG[]'); }\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) { console.log(state.step, 'RDTG[]'); }\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    var n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) { console.log(state.step, 'SCANCTRL[]', n); }\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    var stack = state.stack;\n    var p2i = stack.pop();\n    var p1i = stack.pop();\n    var p2 = state.z2[p2i];\n    var p1 = state.z1[p1i];\n\n    if (exports.DEBUG) { console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i); }\n\n    var dx;\n    var dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    var stack = state.stack;\n    var sel = stack.pop();\n    var r = 0;\n\n    if (exports.DEBUG) { console.log(state.step, 'GETINFO[]', sel); }\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) { r = 35; }\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) { r |= 0x1000; }\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    var stack = state.stack;\n    var a = stack.pop();\n    var b = stack.pop();\n    var c = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'ROLL[]'); }\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MAX[]', e2, e1); }\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    var stack = state.stack;\n    var e2 = stack.pop();\n    var e1 = stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'MIN[]', e2, e1); }\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    var n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) { console.log(state.step, 'SCANTYPE[]', n); }\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    var s = state.stack.pop();\n    var v = state.stack.pop();\n\n    if (exports.DEBUG) { console.log(state.step, 'INSTCTRL[]', s, v); }\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    var stack = state.stack;\n    var prog = state.prog;\n    var ip = state.ip;\n\n    if (exports.DEBUG) { console.log(state.step, 'PUSHB[' + n + ']'); }\n\n    for (var i = 0; i < n; i++) { stack.push(prog[++ip]); }\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    var ip = state.ip;\n    var prog = state.prog;\n    var stack = state.stack;\n\n    if (exports.DEBUG) { console.log(state.ip, 'PUSHW[' + n + ']'); }\n\n    for (var i = 0; i < n; i++) {\n        var w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) { w = -((w ^ 0xffff) + 1); }\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    var stack = state.stack;\n    var cvte = indirect && stack.pop();\n    var pi = stack.pop();\n    var rp0i = state.rp0;\n    var rp = state.z0[rp0i];\n    var p = state.z1[pi];\n\n    var md = state.minDis;\n    var fv = state.fv;\n    var pv = state.dpv;\n    var od; // original distance\n    var d; // moving distance\n    var sign; // sign of distance\n    var cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) { d = cv; }\n    }\n\n    if (keepD && d < md) { d = md; }\n\n    if (ro) { d = state.round(d); }\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) { state.rp0 = pi; }\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n\n/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    var this$1 = this;\n\n    var coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(function (eventId) {\n        Object.defineProperty(this$1.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(function (eventId) {\n            var event = events[eventId];\n            if (typeof event === 'function') {\n                this$1.events[eventId].subscribe(event);\n            }\n        });\n    }\n    var requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(function (eventId) {\n        this$1.events[eventId].subscribe(\n            this$1.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key: key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    var this$1 = this;\n\n    var silent = true;\n    var state = RUDs.map(function (RUD) { return (\n        this$1[RUD[0]].apply(this$1, RUD.slice(1).concat(silent))\n    ); });\n    var hasFAILObject = function (obj) { return (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    ); };\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: \"composeRUD: one or more operations hasn't completed successfully\",\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(function (op) { return !hasFAILObject(op); })]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    var isTokenType = tokens.every(function (token) { return token instanceof Token; });\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        var replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) { this.dispatch('replaceToken', [startIndex, offset, tokens]); }\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        var replaced = this.tokens.splice(index, 1, token);\n        if (!silent) { this.dispatch('replaceToken', [index, token]); }\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    var tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) { this.dispatch('removeRange', [tokens, startIndex, offset]); }\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        var token = this.tokens.splice(index, 1);\n        if (!silent) { this.dispatch('removeToken', [token, index]); }\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    var tokenType = tokens.every(\n        function (token) { return token instanceof Token; }\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) { this.dispatch('insertToken', [tokens, index]); }\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        var conditionParams = [token, contextParams];\n        var canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        var modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            var newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: (\"invalid '\" + (this.eventId) + \"' event handler\")};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(function (token) { return token.char; }).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(function (token) { return token.char; }).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    var context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    var event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    var this$1 = this;\n\n    var event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(function (subscriber) {\n            subscriber.apply(this$1, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) { return {\n        FAIL:\n        (\"context name '\" + contextName + \"' is already registered.\")\n    }; }\n    if (typeof contextStartCheck !== 'function') { return {\n        FAIL:\n        \"missing context start check.\"\n    }; }\n    if (typeof contextEndCheck !== 'function') { return {\n        FAIL:\n        \"missing context end check.\"\n    }; }\n    var contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    var endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    var context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: (\"context checker '\" + contextName + \"' is not registered.\") };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    var registeredContexts = this.registeredContexts;\n    for (var contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            var context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    var chars = this.tokens.map(function (token) { return token.char; });\n    for (var i = 0; i < chars.length; i++) {\n        var contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    var startIndex = this.getContext(contextName).openRange.startIndex;\n    var range = new ContextRange(startIndex, offset, contextName);\n    var ranges = this.getContext(contextName).ranges;\n    range.rangeId = contextName + \".\" + (ranges.length);\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    var this$1 = this;\n\n    var index = contextParams.index;\n    this.contextCheckers.forEach(function (contextChecker) {\n        var contextName = contextChecker.contextName;\n        var openRange = this$1.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this$1.getContext(contextName).openRange = openRange;\n            this$1.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            var offset = (index - openRange.startIndex) + 1;\n            var range = this$1.setEndOffset(offset, contextName);\n            this$1.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    var chars = Array.from(text);\n    this.dispatch('start');\n    for (var i = 0; i < chars.length; i++) {\n        var char = chars[i];\n        var contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        var token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\n// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nfunction isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nfunction isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nfunction isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nfunction isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nfunction isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n\n/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) { return -1; }\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            var ranges = coverage.ranges;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    var offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    var lookupList = [];\n    for (var i = 0; i < coverageList.length; i++) {\n        var coverage = coverageList[i];\n        var glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        var lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) { return -1; }\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    var lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) { return []; }\n    // INPUT LOOKUP //\n    var inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) { return []; }\n    // LOOKAHEAD LOOKUP //\n    var lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) { return []; }\n    var lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    var lookaheadParams = new ContextParams(lookaheadContext, 0);\n    var lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    var backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) { return []; }\n    var backtrackParams = new ContextParams(backtrackContext, 0);\n    var backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    var contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    var substitutions = [];\n    if (contextRulesMatch) {\n        for (var i = 0; i < subtable.lookupRecords.length; i++) {\n            var lookupRecord = subtable.lookupRecords[i];\n            var lookupListIndex = lookupRecord.lookupListIndex;\n            var lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (var s = 0; s < lookupTable.subtables.length; s++) {\n                var subtable$1 = lookupTable.subtables[s];\n                var lookup = this.getLookupMethod(lookupTable, subtable$1);\n                var substitutionType = this.getSubstitutionType(lookupTable, subtable$1);\n                if (substitutionType === '12') {\n                    for (var n = 0; n < inputLookups.length; n++) {\n                        var glyphIndex = contextParams.get(n);\n                        var substitution = lookup(glyphIndex);\n                        if (substitution) { substitutions.push(substitution); }\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    var glyphIndex = contextParams.current;\n    var ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) { return null; }\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    var ligature;\n    var ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (var s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (var l = 0; l < ligature.components.length; l++) {\n            var lookaheadItem = contextParams.lookahead[l];\n            var component = ligature.components[l];\n            if (lookaheadItem !== component) { break; }\n            if (l === ligature.components.length - 1) { return ligature; }\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) { return null; }\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    var scripts = this.font.tables.gsub.scripts;\n    for (var s = 0; s < scripts.length; s++) {\n        var script = scripts[s];\n        if (script.tag === 'DFLT') { return (\n            script.script.defaultLangSys.featureIndexes\n        ); }\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    var tables = this.font.tables;\n    if (!tables.gsub) { return []; }\n    if (!scriptTag) { return this.getDefaultScriptFeaturesIndexes(); }\n    var scripts = this.font.tables.gsub.scripts;\n    for (var i = 0; i < scripts.length; i++) {\n        var script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            var langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (var j = 0; j < langSysRecords.length; j++) {\n                    var langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        var langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    var tags = {};\n    for (var i = 0; i < features.length; i++) {\n        var tag = features[i].tag;\n        var feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    var features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) { return features; }\n    var featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) { return null; }\n    var gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(function (index) { return gsub.features[index]; });\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    var lookupType = lookupTable.lookupType.toString();\n    var substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    var this$1 = this;\n\n    var substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return function (glyphIndex) { return singleSubstitutionFormat1.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        case '12':\n            return function (glyphIndex) { return singleSubstitutionFormat2.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        case '63':\n            return function (contextParams) { return chainingSubstitutionFormat3.apply(\n                this$1, [contextParams, subtable]\n            ); };\n        case '41':\n            return function (contextParams) { return ligatureSubstitutionFormat1.apply(\n                this$1, [contextParams, subtable]\n            ); };\n        case '21':\n            return function (glyphIndex) { return decompositionSubstitutionFormat1.apply(\n                this$1, [glyphIndex, subtable]\n            ); };\n        default:\n            throw new Error(\n                \"lookupType: \" + (lookupTable.lookupType) + \" - \" +\n                \"substFormat: \" + (subtable.substFormat) + \" \" +\n                \"is not yet supported\"\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    var contextParams = query.contextParams;\n    var currentIndex = contextParams.index;\n    var feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) { return new Error(\n        \"font '\" + (this.font.names.fullName.en) + \"' \" +\n        \"doesn't support feature '\" + (query.tag) + \"' \" +\n        \"for script '\" + (query.script) + \"'.\"\n    ); }\n    var lookups = this.getFeatureLookups(feature);\n    var substitutions = [].concat(contextParams.context);\n    for (var l = 0; l < lookups.length; l++) {\n        var lookupTable = lookups[l];\n        var subtables = this.getLookupSubtables(lookupTable);\n        for (var s = 0; s < subtables.length; s++) {\n            var subtable = subtables[s];\n            var substType = this.getSubstitutionType(lookupTable, subtable);\n            var lookup = this.getLookupMethod(lookupTable, subtable);\n            var substitution = (void 0);\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution: substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) { continue; }\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) { return false; }\n    this.getScriptFeatures(query.script);\n    var supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) { return supportedScript; }\n    var supportedFeature = (\n        this.features[query.script].some(function (feature) { return feature.tag === query.tag; })\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    var lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) { return { FAIL: \"No font was found\"}; }\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    var scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) { return (\n        { FAIL: (\"No feature for script \" + (query.script))}\n    ); }\n    if (!scriptFeatures.tags[query.tag]) { return null; }\n    return this.features[query.script].tags[query.tag];\n};\n\n/**\n * Arabic word context checkers\n */\n\nfunction arabicWordStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nvar arabicWordCheck = {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n\n/**\n * Arabic sentence context checkers\n */\n\nfunction arabicSentenceStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            var nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) { return true; }\n            if (nextIsWhitespace) {\n                var arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        function (c) { return isArabicChar(c) || isTashkeelArabicChar(c); }\n                    )\n                );\n                if (!arabicCharAhead) { return true; }\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nvar arabicSentenceCheck = {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1$1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2$1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3$1(action, tokens, index) {\n    action.substitution.forEach(function (subst, offset) {\n        var token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1$1(action, tokens, index) {\n    var token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    var compsCount = action.substitution.components.length;\n    for (var i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nvar SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1$1,\n    12: singleSubstitutionFormat2$1,\n    63: chainingSubstitutionFormat3$1,\n    41: ligatureSubstitutionFormat1$1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\n/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    var backtrack = [].concat(charContextParams.backtrack);\n    for (var i = backtrack.length - 1; i >= 0; i--) {\n        var prevChar = backtrack[i];\n        var isolated = isIsolatedArabicChar(prevChar);\n        var tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) { return true; }\n        if (isolated) { return false; }\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) { return false; }\n    for (var i = 0; i < charContextParams.lookahead.length; i++) {\n        var nextChar = charContextParams.lookahead[i];\n        var tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) { return true; }\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    var this$1 = this;\n\n    var script = 'arab';\n    var tags = this.featuresTags[script];\n    var tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) { return; }\n    var contextParams = new ContextParams(\n        tokens.map(function (token) { return token.getState('glyphIndex'); }\n    ), 0);\n    var charContextParams = new ContextParams(\n        tokens.map(function (token) { return token.char; }\n    ), 0);\n    tokens.forEach(function (token, index) {\n        if (isTashkeelArabicChar(token.char)) { return; }\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        var CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) { CONNECT |= 1; }\n        if (willConnectNext(charContextParams)) { CONNECT |= 2; }\n        var tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) { return; }\n        var substitutions = this$1.query.lookupFeature({\n            tag: tag, script: script, contextParams: contextParams\n        });\n        if (substitutions instanceof Error) { return console.info(substitutions.message); }\n        substitutions.forEach(function (action, index) {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\n/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    var context = tokens.map(function (token) { return token.activeState.value; });\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    var this$1 = this;\n\n    var script = 'arab';\n    var tokens = this.tokenizer.getRangeTokens(range);\n    var contextParams = getContextParams(tokens);\n    contextParams.context.forEach(function (glyphIndex, index) {\n        contextParams.setCurrentIndex(index);\n        var substitutions = this$1.query.lookupFeature({\n            tag: 'rlig', script: script, contextParams: contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                function (action) { return applySubstitution(action, tokens, index); }\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\n/**\n * Latin word context checkers\n */\n\nfunction latinWordStartCheck(contextParams) {\n    var char = contextParams.current;\n    var prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    var nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nvar latinWordCheck = {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n\n/**\n * Apply Latin ligature feature to a range of tokens\n */\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams$1(tokens, index) {\n    var context = tokens.map(function (token) { return token.activeState.value; });\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    var this$1 = this;\n\n    var script = 'latn';\n    var tokens = this.tokenizer.getRangeTokens(range);\n    var contextParams = getContextParams$1(tokens);\n    contextParams.context.forEach(function (glyphIndex, index) {\n        contextParams.setCurrentIndex(index);\n        var substitutions = this$1.query.lookupFeature({\n            tag: 'liga', script: script, contextParams: contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                function (action) { return applySubstitution(action, tokens, index); }\n            );\n            contextParams = getContextParams$1(tokens);\n        }\n    });\n}\n\n/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck: latinWordCheck,\n    arabicWordCheck: arabicWordCheck,\n    arabicSentenceCheck: arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    var check = this.contextChecks[(checkId + \"Check\")];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    var this$1 = this;\n\n    var ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(function (range) {\n        var rangeTokens = this$1.tokenizer.getRangeTokens(range);\n        this$1.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    var this$1 = this;\n\n    var supportedTags = tags.filter(\n        function (tag) { return this$1.query.supports({script: script, tag: tag}); }\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) { throw new Error(\n        'No valid font was provided to apply features'\n    ); }\n    if (!this.query) { this.query = new FeatureQuery(font); }\n    for (var f = 0; f < features.length; f++) {\n        var feature = features[f];\n        if (!this.query.supports({script: feature.script})) { continue; }\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    var this$1 = this;\n\n    var script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(function (range) {\n        arabicPresentationForms.call(this$1, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    var this$1 = this;\n\n    var script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    var tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(function (range) {\n        arabicRequiredLigatures.call(this$1, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    var this$1 = this;\n\n    var script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) { return; }\n    var tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) { return; }\n    checkGlyphIndexStatus.call(this);\n    var ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(function (range) {\n        latinLigature.call(this$1, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    var indexes = [];\n    for (var i = 0; i < this.tokenizer.tokens.length; i++) {\n        var token = this.tokenizer.tokens[i];\n        if (token.state.deleted) { continue; }\n        var index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\n// The Font object\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(\n            options.familyName,\n            'When creating a new Font object, familyName is required.'\n        );\n        checkArgument(\n            options.styleName,\n            'When creating a new Font object, styleName is required.'\n        );\n        checkArgument(\n            options.unitsPerEm,\n            'When creating a new Font object, unitsPerEm is required.'\n        );\n        checkArgument(\n            options.ascender,\n            'When creating a new Font object, ascender is required.'\n        );\n        checkArgument(\n            options.descender <= 0,\n            'When creating a new Font object, negative descender value is required.'\n        );\n\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign(\n                {\n                    usWeightClass:\n                        options.weightClass || this.usWeightClasses.MEDIUM,\n                    usWidthClass:\n                        options.widthClass || this.usWidthClasses.MEDIUM,\n                    fsSelection:\n                        options.fsSelection || this.fsSelectionValues.REGULAR,\n                },\n                options.tables.os2\n            ),\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function () {\n            if (this._hinting) { return this._hinting; }\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new Hinting(this));\n            }\n        },\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function (c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function (s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function (c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(function (feature) {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(function (tag) { return options[tag]; }),\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function (s, options) {\n    var this$1 = this;\n\n    var bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    var charToGlyphIndexMod = function (token) { return this$1.charToGlyphIndex(token.char); };\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    var features = options\n        ? this.updateFeatures(options.features)\n        : this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    var indexes = bidi.getTextGlyphs(s);\n\n    var length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    var glyphs = new Array(length);\n    var notdef = this.glyphs.get(0);\n    for (var i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function (leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(\n            gposKerning,\n            leftGlyph,\n            rightGlyph\n        );\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] } ],\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function (\n    text,\n    x,\n    y,\n    fontSize,\n    options,\n    callback\n) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    var fontScale = (1 / this.unitsPerEm) * fontSize;\n    var glyphs = this.stringToGlyphs(text, options);\n    var kerningLookups;\n    if (options.kerning) {\n        var script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(\n            script,\n            options.language\n        );\n    }\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            var kerningValue = kerningLookups\n                ? this.position.getKerningValue(\n                      kerningLookups,\n                      glyph.index,\n                      glyphs[i + 1].index\n                  )\n                : this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function (text, x, y, fontSize, options) {\n    var fullPath = new Path();\n    this.forEachGlyph(\n        text,\n        x,\n        y,\n        fontSize,\n        options,\n        function (glyph, gX, gY, gFontSize) {\n            var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n            fullPath.extend(glyphPath);\n        }\n    );\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function (text, x, y, fontSize, options) {\n    var glyphPaths = [];\n    this.forEachGlyph(\n        text,\n        x,\n        y,\n        fontSize,\n        options,\n        function (glyph, gX, gY, gFontSize) {\n            var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n            glyphPaths.push(glyphPath);\n        }\n    );\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function (text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function () {});\n};\n\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC: 0x001, //1\n    UNDERSCORE: 0x002, //2\n    NEGATIVE: 0x004, //4\n    OUTLINED: 0x008, //8\n    STRIKEOUT: 0x010, //16\n    BOLD: 0x020, //32\n    REGULAR: 0x040, //64\n    USER_TYPO_METRICS: 0x080, //128\n    WWS: 0x100, //256\n    OBLIQUE: 0x200, //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9,\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK: 900,\n};\n\n// The `cmap` table stores the mappings from characters to glyphs.\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    var groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (var i = 0; i < groupCount; i += 1) {\n        var startCharCode = p.parseULong();\n        var endCharCode = p.parseULong();\n        var startGlyphId = p.parseULong();\n\n        for (var c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 2\n    );\n    var idDeltaParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 4\n    );\n    var idRangeOffsetParser = new parse.Parser(\n        data,\n        start + offset + 16 + segCount * 6\n    );\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (var i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex = (void 0);\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset =\n                    idRangeOffsetParser.offset +\n                    idRangeOffsetParser.relativeOffset -\n                    2;\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xffff;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xffff;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (var i = cmap.numTables - 1; i >= 0; i -= 1) {\n        var platformId = parse.getUShort(data, start + 4 + i * 8);\n        var encodingId = parse.getUShort(data, start + 4 + i * 8 + 2);\n        if (\n            (platformId === 3 &&\n                (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 &&\n                (encodingId === 0 ||\n                    encodingId === 1 ||\n                    encodingId === 2 ||\n                    encodingId === 3 ||\n                    encodingId === 4))\n        ) {\n            offset = parse.getULong(data, start + 4 + i * 8 + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error(\n            'Only format 4 and 12 cmap tables are supported (found format ' +\n                cmap.format +\n                ').'\n        );\n    }\n\n    return cmap;\n}\n\nvar cmap = { parse: parseCmapTable };\n\n// The `CFF` table contains the glyph outlines in PostScript format.\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n        var pos = start + 3;\n        for (var i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (var i$1 = 0; i$1 < offsets.length - 1; i$1 += 1) {\n        var value = parse.getBytes(\n            data,\n            objectOffset + offsets[i$1],\n            objectOffset + offsets[i$1 + 1]\n        );\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return { objects: objects, startOffset: start, endOffset: endOffset };\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    var offsets = [];\n    var count = parse.getCard16(data, start);\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n        var pos = start + 3;\n        for (var i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return { offsets: offsets, startOffset: start, endOffset: endOffset };\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    var count = parse.getCard16(data, start);\n    var objectOffset = 0;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + (count + 1) * offsetSize + 2;\n    }\n\n    var value = parse.getBytes(\n        data,\n        objectOffset + offsets[i],\n        objectOffset + offsets[i + 1]\n    );\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '.',\n        'E',\n        'E-',\n        null,\n        '-' ];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return (b1 << 8) | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return (b1 << 24) | (b2 << 16) | (b3 << 8) | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value = (void 0);\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n    var value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            var values = [];\n            values.length = m.type.length;\n            for (var j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value =\n                        m.value !== undefined && m.value[j] !== undefined\n                            ? m.value[j]\n                            : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    { name: 'version', op: 0, type: 'SID' },\n    { name: 'notice', op: 1, type: 'SID' },\n    { name: 'copyright', op: 1200, type: 'SID' },\n    { name: 'fullName', op: 2, type: 'SID' },\n    { name: 'familyName', op: 3, type: 'SID' },\n    { name: 'weight', op: 4, type: 'SID' },\n    { name: 'isFixedPitch', op: 1201, type: 'number', value: 0 },\n    { name: 'italicAngle', op: 1202, type: 'number', value: 0 },\n    { name: 'underlinePosition', op: 1203, type: 'number', value: -100 },\n    { name: 'underlineThickness', op: 1204, type: 'number', value: 50 },\n    { name: 'paintType', op: 1205, type: 'number', value: 0 },\n    { name: 'charstringType', op: 1206, type: 'number', value: 2 },\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0],\n    },\n    { name: 'uniqueId', op: 13, type: 'number' },\n    {\n        name: 'fontBBox',\n        op: 5,\n        type: ['number', 'number', 'number', 'number'],\n        value: [0, 0, 0, 0],\n    },\n    { name: 'strokeWidth', op: 1208, type: 'number', value: 0 },\n    { name: 'xuid', op: 14, type: [], value: null },\n    { name: 'charset', op: 15, type: 'offset', value: 0 },\n    { name: 'encoding', op: 16, type: 'offset', value: 0 },\n    { name: 'charStrings', op: 17, type: 'offset', value: 0 },\n    { name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0] },\n    { name: 'ros', op: 1230, type: ['SID', 'SID', 'number'] },\n    { name: 'cidFontVersion', op: 1231, type: 'number', value: 0 },\n    { name: 'cidFontRevision', op: 1232, type: 'number', value: 0 },\n    { name: 'cidFontType', op: 1233, type: 'number', value: 0 },\n    { name: 'cidCount', op: 1234, type: 'number', value: 8720 },\n    { name: 'uidBase', op: 1235, type: 'number' },\n    { name: 'fdArray', op: 1236, type: 'offset' },\n    { name: 'fdSelect', op: 1237, type: 'offset' },\n    { name: 'fontName', op: 1238, type: 'SID' } ];\n\nvar PRIVATE_DICT_META = [\n    { name: 'subrs', op: 19, type: 'offset', value: 0 },\n    { name: 'defaultWidthX', op: 20, type: 'number', value: 0 },\n    { name: 'nominalWidthX', op: 21, type: 'number', value: 0 } ];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    var topDictArray = [];\n    for (var iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        var topDictData = new DataView(\n            new Uint8Array(cffIndex[iTopDict]).buffer\n        );\n        var topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        topDict._defaultWidthX = 0;\n        topDict._nominalWidthX = 0;\n        var privateSize = topDict.private[0];\n        var privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            var privateDict = parseCFFPrivateDict(\n                data,\n                privateOffset + start,\n                privateSize,\n                strings\n            );\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                var subrOffset = privateOffset + privateDict.subrs;\n                var subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (var i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (var i$1 = 0; i$1 <= count; i$1 += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (var i$2 = 0; i$2 <= count; i$2 += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (var i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (var i$1 = 0; i$1 < nRanges; i$1 += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var open = false;\n    var x = 0;\n    var y = 0;\n    var subrs;\n    var subrsBias;\n    var defaultWidthX;\n    var nominalWidthX;\n    if (font.isCIDFont) {\n        var fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        var fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    var width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y + stack.shift(); // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = jpy + stack.shift(); // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            x = c4x + stack.shift(); // dx6\n                            y = c4y + stack.shift(); // dy6\n                            stack.shift(); // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y; // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y; // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = c2y; // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = y; // dy5\n                            x = c4x + stack.shift(); // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y; // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = c2y; // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            x = c4x + stack.shift(); // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x + stack.shift(); // dx1\n                            c1y = y + stack.shift(); // dy1\n                            c2x = c1x + stack.shift(); // dx2\n                            c2y = c1y + stack.shift(); // dy2\n                            jpx = c2x + stack.shift(); // dx3\n                            jpy = c2y + stack.shift(); // dy3\n                            c3x = jpx + stack.shift(); // dx4\n                            c3y = jpy + stack.shift(); // dy4\n                            c4x = c3x + stack.shift(); // dx5\n                            c4y = c3y + stack.shift(); // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log(\n                                'Glyph ' +\n                                    glyph.index +\n                                    ': unknown operator ' +\n                                    1200 +\n                                    v\n                            );\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log(\n                            'Glyph ' + glyph.index + ': unknown operator ' + v\n                        );\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(\n                            ((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536\n                        );\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    var fdSelect = [];\n    var fdIndex;\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (var iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error(\n                    'CFF table CID Font FDSelect has bad FD index value ' +\n                        fdIndex +\n                        ' (FD count ' +\n                        fdArrayCount +\n                        ')'\n                );\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        var nRanges = parser.parseCard16();\n        var first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error(\n                'CFF Table CID Font FDSelect format 3 range has bad initial GID ' +\n                    first\n            );\n        }\n        var next;\n        for (var iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error(\n                    'CFF table CID Font FDSelect has bad FD index value ' +\n                        fdIndex +\n                        ' (FD count ' +\n                        fdArrayCount +\n                        ')'\n                );\n            }\n            if (next > nGlyphs) {\n                throw new Error(\n                    'CFF Table CID Font FDSelect format 3 range has bad GID ' +\n                        next\n                );\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error(\n                'CFF Table CID Font FDSelect format 3 range has bad final GID ' +\n                    next\n            );\n        }\n    } else {\n        throw new Error(\n            'CFF Table CID Font FDSelect table has unsupported format ' + format\n        );\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(\n        data,\n        header.endOffset,\n        parse.bytesToString\n    );\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(\n        data,\n        topDictIndex.endOffset,\n        parse.bytesToString\n    );\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictArray = gatherCFFTopDicts(\n        data,\n        start,\n        topDictIndex.objects,\n        stringIndex.objects\n    );\n    if (topDictArray.length !== 1) {\n        throw new Error(\n            \"CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = \" +\n                topDictArray.length\n        );\n    }\n\n    var topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        var fdArrayOffset = topDict.fdArray;\n        var fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error(\n                'Font is marked as a CID font, but FDArray and/or FDSelect information is missing'\n            );\n        }\n        fdArrayOffset += start;\n        var fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        var fdArray = gatherCFFTopDicts(\n            data,\n            start,\n            fdArrayIndex.objects,\n            stringIndex.objects\n        );\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(\n            data,\n            fdSelectOffset,\n            font.numGlyphs,\n            fdArray.length\n        );\n    }\n\n    var privateDictOffset = start + topDict.private[1];\n    var privateDict = parseCFFPrivateDict(\n        data,\n        privateDictOffset,\n        topDict.private[0],\n        stringIndex.objects\n    );\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(\n            data,\n            start + topDict.charStrings\n        );\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    var charset = parseCFFCharset(\n        data,\n        start + topDict.charset,\n        font.nGlyphs,\n        stringIndex.objects\n    );\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(\n            data,\n            start + topDict.encoding,\n            charset\n        );\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function (i) {\n            var charString = getCffIndexObject(\n                i,\n                charStringsIndex.offsets,\n                data,\n                start + topDict.charStrings\n            );\n            font.glyphs.push(\n                i,\n                glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString)\n            );\n        };\n    } else {\n        for (var i = 0; i < font.nGlyphs; i += 1) {\n            var charString = charStringsIndex.objects[i];\n            font.glyphs.push(\n                i,\n                glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString)\n            );\n        }\n    }\n}\n\nvar cff = { parse: parseCFFTable };\n\n// The `fvar` table stores font variation axes and instances.\n\nfunction parseFvarAxis(data, start, names) {\n    var axis = {};\n    var p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1); // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    var inst = {};\n    var p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1); // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (var i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction parseFvarTable(data, start, names) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(\n        tableVersion === 0x00010000,\n        'Unsupported fvar table version.'\n    );\n    var offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    var axisCount = p.parseUShort();\n    var axisSize = p.parseUShort();\n    var instanceCount = p.parseUShort();\n    var instanceSize = p.parseUShort();\n\n    var axes = [];\n    for (var i = 0; i < axisCount; i++) {\n        axes.push(\n            parseFvarAxis(data, start + offsetToData + i * axisSize, names)\n        );\n    }\n\n    var instances = [];\n    var instanceStart = start + offsetToData + axisCount * axisSize;\n    for (var j = 0; j < instanceCount; j++) {\n        instances.push(\n            parseFvarInstance(\n                data,\n                instanceStart + j * instanceSize,\n                axes,\n                names\n            )\n        );\n    }\n\n    return { axes: axes, instances: instances };\n}\n\nvar fvar = { parse: parseFvarTable };\n\n// The `GDEF` table contains various glyph properties\n\nvar attachList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        attachPoints: this.parseList(Parser.pointer(Parser.uShortList))\n    };\n};\n\nvar caretValue = function() {\n    var format = this.parseUShort();\n    check.argument(format === 1 || format === 2 || format === 3,\n        'Unsupported CaretValue table version.');\n    if (format === 1) {\n        return { coordinate: this.parseShort() };\n    } else if (format === 2) {\n        return { pointindex: this.parseShort() };\n    } else if (format === 3) {\n        // Device / Variation Index tables unsupported\n        return { coordinate: this.parseShort() };\n    }\n};\n\nvar ligGlyph = function() {\n    return this.parseList(Parser.pointer(caretValue));\n};\n\nvar ligCaretList = function() {\n    return {\n        coverage: this.parsePointer(Parser.coverage),\n        ligGlyphs: this.parseList(Parser.pointer(ligGlyph))\n    };\n};\n\nvar markGlyphSets = function() {\n    this.parseUShort(); // Version\n    return this.parseList(Parser.pointer(Parser.coverage));\n};\n\nfunction parseGDEFTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.2 || tableVersion === 1.3,\n        'Unsupported GDEF table version.');\n    var gdef = {\n        version: tableVersion,\n        classDef: p.parsePointer(Parser.classDef),\n        attachList: p.parsePointer(attachList),\n        ligCaretList: p.parsePointer(ligCaretList),\n        markAttachClassDef: p.parsePointer(Parser.classDef)\n    };\n    if (tableVersion >= 1.2) {\n        gdef.markGlyphSets = p.parsePointer(markGlyphSets);\n    }\n    return gdef;\n}\nvar gdef = { parse: parseGDEFTable };\n\n// The `GPOS` table contains kerning pairs, among other things.\n\nvar subtableParsers = new Array(10); // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord(),\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList(),\n        };\n    }\n    check.assert(\n        false,\n        '0x' +\n            start.toString(16) +\n            ': GPOS lookup type 1 format must be 1 or 2.'\n    );\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    var start = this.offset + this.relativeOffset;\n    var posFormat = this.parseUShort();\n    check.assert(\n        posFormat === 1 || posFormat === 2,\n        '0x' +\n            start.toString(16) +\n            ': GPOS lookup type 2 format must be 1 or 2.'\n    );\n    var coverage = this.parsePointer(Parser.coverage);\n    var valueFormat1 = this.parseUShort();\n    var valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(\n                Parser.pointer(\n                    Parser.list(function () {\n                        return {\n                            // pairValueRecord\n                            secondGlyph: this.parseUShort(),\n                            value1: this.parseValueRecord(valueFormat1),\n                            value2: this.parseValueRecord(valueFormat2),\n                        };\n                    })\n                )\n            ),\n        };\n    } else if (posFormat === 2) {\n        var classDef1 = this.parsePointer(Parser.classDef);\n        var classDef2 = this.parsePointer(Parser.classDef);\n        var class1Count = this.parseUShort();\n        var class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(\n                class1Count,\n                Parser.list(class2Count, function () {\n                    return {\n                        value1: this.parseValueRecord(valueFormat1),\n                        value2: this.parseValueRecord(valueFormat2),\n                    };\n                })\n            ),\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() {\n    return { error: 'GPOS Lookup 3 not supported' };\n};\nsubtableParsers[4] = function parseLookup4() {\n    return { error: 'GPOS Lookup 4 not supported' };\n};\nsubtableParsers[5] = function parseLookup5() {\n    return { error: 'GPOS Lookup 5 not supported' };\n};\nsubtableParsers[6] = function parseLookup6() {\n    return { error: 'GPOS Lookup 6 not supported' };\n};\nsubtableParsers[7] = function parseLookup7() {\n    return { error: 'GPOS Lookup 7 not supported' };\n};\nsubtableParsers[8] = function parseLookup8() {\n    return { error: 'GPOS Lookup 8 not supported' };\n};\nsubtableParsers[9] = function parseLookup9() {\n    return { error: 'GPOS Lookup 9 not supported' };\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(\n        tableVersion === 1 || tableVersion === 1.1,\n        'Unsupported GPOS table version ' + tableVersion\n    );\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList(),\n        };\n    }\n}\n\nvar gpos = { parse: parseGposTable };\n\n// The `GSUB` table contains ligatures, among other things.\n\nvar subtableParsers$1 = new Array(9); // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers$1[1] = function parseLookup1() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort(),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List(),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers$1[2] = function parseLookup2() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Multiple Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers$1[3] = function parseLookup3() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Alternate Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers$1[4] = function parseLookup4() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB ligature table identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function () {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1),\n            };\n        }),\n    };\n};\n\nvar lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort,\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers$1[5] = function parseLookup5() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function () {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(\n                        substCount,\n                        lookupRecordDesc\n                    ),\n                };\n            }),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function () {\n                var glyphCount = this.parseUShort();\n                var substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(\n                        substCount,\n                        lookupRecordDesc\n                    ),\n                };\n            }),\n        };\n    } else if (substFormat === 3) {\n        var glyphCount = this.parseUShort();\n        var substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(\n                glyphCount,\n                Parser.pointer(Parser.coverage)\n            ),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers$1[6] = function parseLookup6() {\n    var start = this.offset + this.relativeOffset;\n    var substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function () {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc),\n                };\n            }),\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function () {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc),\n                };\n            }),\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc),\n        };\n    }\n    check.assert(\n        false,\n        '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.'\n    );\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers$1[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Extension Substitution subtable identifier-format must be 1'\n    );\n    var extensionLookupType = this.parseUShort();\n    var extensionParser = new Parser(\n        this.data,\n        this.offset + this.parseULong()\n    );\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers$1[extensionLookupType].call(extensionParser),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers$1[8] = function parseLookup8() {\n    var substFormat = this.parseUShort();\n    check.argument(\n        substFormat === 1,\n        'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1'\n    );\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList(),\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    var p = new Parser(data, start);\n    var tableVersion = p.parseVersion(1);\n    check.argument(\n        tableVersion === 1 || tableVersion === 1.1,\n        'Unsupported GSUB table version.'\n    );\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers$1),\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers$1),\n            variations: p.parseFeatureVariationsList(),\n        };\n    }\n}\n\nvar gsub = { parse: parseGsubTable };\n\n// The `head` table contains global information about the font.\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(\n        head.magicNumber === 0x5f0f3cf5,\n        'Font header has wrong magic number.'\n    );\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nvar head = { parse: parseHeadTable };\n\n// The `hhea` table contains information for horizontal layout.\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nvar hhea = { parse: parseHheaTable };\n\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing,\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        { parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs); }\n    else { parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs); }\n}\n\nvar hmtx = { parse: parseHmtxTable };\n\n// The `kern` table contains kerning pairs.\n\nfunction parseWindowsKernTable(p) {\n    var pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    var subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    var pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    var nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    var coverage = p.parseUShort();\n    var subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        var nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (var i = 0; i < nPairs; i += 1) {\n            var leftIndex = p.parseUShort();\n            var rightIndex = p.parseUShort();\n            var value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nvar kern = { parse: parseKernTable };\n\n// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n\nfunction parseLtagTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    var numTags = p.parseULong();\n\n    var tags = [];\n    for (var i = 0; i < numTags; i++) {\n        var tag = '';\n        var offset = start + p.parseUShort();\n        var length = p.parseUShort();\n        for (var j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nvar ltag = { parse: parseLtagTable };\n\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nvar loca = { parse: parseLocaTable };\n\n// The `maxp` table establishes the memory requirements for the font.\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nvar maxp = { parse: parseMaxpTable };\n\n// The `OS/2` table contains metrics required in OpenType fonts.\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(\n        p.parseByte(),\n        p.parseByte(),\n        p.parseByte(),\n        p.parseByte()\n    );\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nvar os2 = { parse: parseOS2Table };\n\n// The `post` table stores additional PostScript information, such as glyph names.\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    post.names = [];\n    switch (post.version) {\n        case 1:\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (var i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (var i$1 = 0; i$1 < post.numberOfGlyphs; i$1++) {\n                post.offset[i$1] = p.parseChar();\n            }\n            break;\n    }\n    return post;\n}\n\nvar post = { parse: parsePostTable };\n\n// Data types used in the OpenType font file.\n\n/**\n * @exports opentype.decode\n * @class\n */\nvar decode = {};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes;\n    for (var j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    var codePoints = [];\n    var numChars = numBytes / 2;\n    for (var j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nvar eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    var table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    var result = '';\n    for (var i = 0; i < dataLength; i++) {\n        var c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// The `GPOS` table contains kerning pairs, among other things.\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    var numDataMaps = p.parseULong();\n\n    var tags = {};\n    for (var i = 0; i < numDataMaps; i++) {\n        var tag = p.parseTag();\n        var dataOffset = p.parseULong();\n        var dataLength = p.parseULong();\n        var text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nvar meta = { parse: parseMetaTable };\n\n// opentype.js\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var checksum = parse.getULong(data, p + 4);\n        var offset = parse.getULong(data, p + 8);\n        var length = parse.getULong(data, p + 12);\n        tableEntries.push({\n            tag: tag,\n            checksum: checksum,\n            offset: offset,\n            length: length,\n            compression: false,\n        });\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    var tableEntries = [];\n    var p = 44; // offset to the first table directory entry.\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 4);\n        var compLength = parse.getULong(data, p + 8);\n        var origLength = parse.getULong(data, p + 12);\n        var compression = (void 0);\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({\n            tag: tag,\n            offset: offset,\n            compression: compression,\n            compressedLength: compLength,\n            length: origLength,\n        });\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        var inBuffer = new Uint8Array(\n            data.buffer,\n            tableEntry.offset + 2,\n            tableEntry.compressedLength - 2\n        );\n        var outBuffer = new Uint8Array(tableEntry.length);\n        inflateSync(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error(\n                'Decompression error: ' +\n                    tableEntry.tag +\n                    \" decompressed length doesn't match recorded length\"\n            );\n        }\n\n        var view = new DataView(outBuffer.buffer, 0);\n        return { data: view, offset: 0 };\n    } else {\n        return { data: data, offset: tableEntry.offset };\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = opt === undefined || opt === null ? {} : opt;\n\n    var indexToLocFormat;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    var font = new Font({ empty: true });\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    var data = new DataView(buffer, 0);\n    var numTables;\n    var tableEntries = [];\n    var signature = parse.getTag(data, 0);\n    if (\n        signature === String.fromCharCode(0, 1, 0, 0) ||\n        signature === 'true' ||\n        signature === 'typ1'\n    ) {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        var flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    var cffTableEntry;\n    var fvarTableEntry;\n    var glyfTableEntry;\n    var gdefTableEntry;\n    var gposTableEntry;\n    var gsubTableEntry;\n    var hmtxTableEntry;\n    var kernTableEntry;\n    var locaTableEntry;\n    var metaTableEntry;\n    var p;\n\n    for (var i = 0; i < numTables; i += 1) {\n        var tableEntry = tableEntries[i];\n        var table = (void 0);\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                break;\n            case 'prep':\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GDEF':\n                gdefTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    if (glyfTableEntry && locaTableEntry) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = uncompressTable(data, locaTableEntry);\n        var locaOffsets = loca.parse(\n            locaTable.data,\n            locaTable.offset,\n            font.numGlyphs,\n            shortVersion\n        );\n        var glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(\n            glyfTable.data,\n            glyfTable.offset,\n            locaOffsets,\n            font,\n            opt\n        );\n    } else if (cffTableEntry) {\n        var cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error(\"Font doesn't contain TrueType or CFF outlines.\");\n    }\n\n    var hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(\n        font,\n        hmtxTable.data,\n        hmtxTable.offset,\n        font.numberOfHMetrics,\n        font.numGlyphs,\n        font.glyphs,\n        opt\n    );\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        var kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gdefTableEntry) {\n        var gdefTable = uncompressTable(data, gdefTableEntry);\n        font.tables.gdef = gdef.parse(gdefTable.data, gdefTable.offset);\n    }\n\n    if (gposTableEntry) {\n        var gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        var gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        var fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(\n            fvarTable.data,\n            fvarTable.offset,\n            font.names\n        );\n    }\n\n    if (metaTableEntry) {\n        var metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\nfunction load() {}\nfunction loadSync() {}\n\nvar opentype = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   Font: Font,\n   Glyph: Glyph,\n   Path: Path,\n   _parse: parse,\n   parse: parseBuffer,\n   load: load,\n   loadSync: loadSync\n});\n\n/* harmony default export */ const opentype_module = (opentype);\n\n//# sourceMappingURL=opentype.module.js.map\n\n;// CONCATENATED MODULE: ./node_modules/emoji-regex/index.mjs\n/* harmony default export */ const emoji_regex = (() => {\n\t// https://mths.be/emoji\n\treturn /[#*0-9]\\uFE0F?\\u20E3|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26AA\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0-\\u26F5\\u26F7\\u26F8\\u26FA\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B55\\u3030\\u303D\\u3297\\u3299]\\uFE0F?|[\\u261D\\u270C\\u270D](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\u270A\\u270B](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u2693\\u26A1\\u26AB\\u26C5\\u26CE\\u26D4\\u26EA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2795-\\u2797\\u27B0\\u27BF\\u2B50]|\\u26F9(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\u2764\\uFE0F?(?:\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))?|\\uD83C(?:[\\uDC04\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]\\uFE0F?|[\\uDF85\\uDFC2\\uDFC7](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDFC3\\uDFC4\\uDFCA](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDFCB\\uDFCC](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uDDF4\\uD83C\\uDDF2|\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uDDF6\\uD83C\\uDDE6|\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF]|\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uDDFD\\uD83C\\uDDF0|\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uDFF3\\uFE0F?(?:\\u200D(?:\\u26A7\\uFE0F?|\\uD83C\\uDF08))?|\\uDFF4(?:\\u200D\\u2620\\uFE0F?|\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40(?:\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F)?)|\\uD83D(?:[\\uDC08\\uDC26](?:\\u200D\\u2B1B)?|[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]\\uFE0F?|[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD74\\uDD90](?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC25\\uDC27-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEDC-\\uDEDF\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB\\uDFF0]|\\uDC15(?:\\u200D\\uD83E\\uDDBA)?|\\uDC3B(?:\\u200D\\u2744\\uFE0F?)?|\\uDC41\\uFE0F?(?:\\u200D\\uD83D\\uDDE8\\uFE0F?)?|\\uDC68(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDC68\\uDC69]\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?)|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?\\uDC68\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC69(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:\\uDC8B\\u200D\\uD83D)?[\\uDC68\\uDC69]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D(?:[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?|\\uDC69\\u200D\\uD83D(?:\\uDC66(?:\\u200D\\uD83D\\uDC66)?|\\uDC67(?:\\u200D\\uD83D[\\uDC66\\uDC67])?))|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFC-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D\\uD83D(?:[\\uDC68\\uDC69]|\\uDC8B\\u200D\\uD83D[\\uDC68\\uDC69])\\uD83C[\\uDFFB-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83D[\\uDC68\\uDC69]\\uD83C[\\uDFFB-\\uDFFE])))?))?|\\uDC6F(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDD75(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|\\uDE2E(?:\\u200D\\uD83D\\uDCA8)?|\\uDE35(?:\\u200D\\uD83D\\uDCAB)?|\\uDE36(?:\\u200D\\uD83C\\uDF2B\\uFE0F?)?)|\\uD83E(?:[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5\\uDEC3-\\uDEC5\\uDEF0\\uDEF2-\\uDEF8](?:\\uD83C[\\uDFFB-\\uDFFF])?|[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD](?:\\uD83C[\\uDFFB-\\uDFFF])?(?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDDDE\\uDDDF](?:\\u200D[\\u2640\\u2642]\\uFE0F?)?|[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCC\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC2\\uDECE-\\uDEDB\\uDEE0-\\uDEE8]|\\uDD3C(?:\\u200D[\\u2640\\u2642]\\uFE0F?|\\uD83C[\\uDFFB-\\uDFFF])?|\\uDDD1(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1))|\\uD83C(?:\\uDFFB(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFC-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFC(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFD-\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFD(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFE(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFD\\uDFFF]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?|\\uDFFF(?:\\u200D(?:[\\u2695\\u2696\\u2708]\\uFE0F?|\\u2764\\uFE0F?\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFE]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E(?:[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]|\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C[\\uDFFB-\\uDFFF])))?))?|\\uDEF1(?:\\uD83C(?:\\uDFFB(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFC-\\uDFFF])?|\\uDFFC(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])?|\\uDFFD(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])?|\\uDFFE(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])?|\\uDFFF(?:\\u200D\\uD83E\\uDEF2\\uD83C[\\uDFFB-\\uDFFE])?))?)/g;\n});\n\n;// CONCATENATED MODULE: ./node_modules/satori/dist/index.wasm.js\nvar Pu=Object.create;var ur=Object.defineProperty;var Au=Object.getOwnPropertyDescriptor;var Ru=Object.getOwnPropertyNames;var Iu=Object.getPrototypeOf,Lu=Object.prototype.hasOwnProperty;var Wr=(e,t)=>()=>(e&&(t=e(e=0)),t);var I=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),go=(e,t)=>{for(var n in t)ur(e,n,{get:t[n],enumerable:!0})},vo=(e,t,n,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of Ru(t))!Lu.call(e,i)&&i!==n&&ur(e,i,{get:()=>t[i],enumerable:!(r=Au(t,i))||r.enumerable});return e};var Cu=(e,t,n)=>(n=e!=null?Pu(Iu(e)):{},vo(t||!e||!e.__esModule?ur(n,\"default\",{value:e,enumerable:!0}):n,e)),lr=e=>vo(ur({},\"__esModule\",{value:!0}),e);var c=Wr(()=>{});var vn=I(gn=>{\"use strict\";c();Object.defineProperty(gn,\"__esModule\",{value:!0});Object.defineProperty(gn,\"default\",{enumerable:!0,get:()=>xl});function xl(e){if(e=`${e}`,e===\"0\")return\"0\";if(/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(e))return e.replace(/^[+-]?/,t=>t===\"-\"?\"\":\"-\");if(e.includes(\"var(\")||e.includes(\"calc(\"))return`calc(${e} * -1)`}});var Vo=I(bn=>{\"use strict\";c();Object.defineProperty(bn,\"__esModule\",{value:!0});Object.defineProperty(bn,\"default\",{enumerable:!0,get:()=>wl});var wl=[\"preflight\",\"container\",\"accessibility\",\"pointerEvents\",\"visibility\",\"position\",\"inset\",\"isolation\",\"zIndex\",\"order\",\"gridColumn\",\"gridColumnStart\",\"gridColumnEnd\",\"gridRow\",\"gridRowStart\",\"gridRowEnd\",\"float\",\"clear\",\"margin\",\"boxSizing\",\"display\",\"aspectRatio\",\"height\",\"maxHeight\",\"minHeight\",\"width\",\"minWidth\",\"maxWidth\",\"flex\",\"flexShrink\",\"flexGrow\",\"flexBasis\",\"tableLayout\",\"borderCollapse\",\"borderSpacing\",\"transformOrigin\",\"translate\",\"rotate\",\"skew\",\"scale\",\"transform\",\"animation\",\"cursor\",\"touchAction\",\"userSelect\",\"resize\",\"scrollSnapType\",\"scrollSnapAlign\",\"scrollSnapStop\",\"scrollMargin\",\"scrollPadding\",\"listStylePosition\",\"listStyleType\",\"appearance\",\"columns\",\"breakBefore\",\"breakInside\",\"breakAfter\",\"gridAutoColumns\",\"gridAutoFlow\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"flexDirection\",\"flexWrap\",\"placeContent\",\"placeItems\",\"alignContent\",\"alignItems\",\"justifyContent\",\"justifyItems\",\"gap\",\"space\",\"divideWidth\",\"divideStyle\",\"divideColor\",\"divideOpacity\",\"placeSelf\",\"alignSelf\",\"justifySelf\",\"overflow\",\"overscrollBehavior\",\"scrollBehavior\",\"textOverflow\",\"whitespace\",\"wordBreak\",\"borderRadius\",\"borderWidth\",\"borderStyle\",\"borderColor\",\"borderOpacity\",\"backgroundColor\",\"backgroundOpacity\",\"backgroundImage\",\"gradientColorStops\",\"boxDecorationBreak\",\"backgroundSize\",\"backgroundAttachment\",\"backgroundClip\",\"backgroundPosition\",\"backgroundRepeat\",\"backgroundOrigin\",\"fill\",\"stroke\",\"strokeWidth\",\"objectFit\",\"objectPosition\",\"padding\",\"textAlign\",\"textIndent\",\"verticalAlign\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"textTransform\",\"fontStyle\",\"fontVariantNumeric\",\"lineHeight\",\"letterSpacing\",\"textColor\",\"textOpacity\",\"textDecoration\",\"textDecorationColor\",\"textDecorationStyle\",\"textDecorationThickness\",\"textUnderlineOffset\",\"fontSmoothing\",\"placeholderColor\",\"placeholderOpacity\",\"caretColor\",\"accentColor\",\"opacity\",\"backgroundBlendMode\",\"mixBlendMode\",\"boxShadow\",\"boxShadowColor\",\"outlineStyle\",\"outlineWidth\",\"outlineOffset\",\"outlineColor\",\"ringWidth\",\"ringColor\",\"ringOpacity\",\"ringOffsetWidth\",\"ringOffsetColor\",\"blur\",\"brightness\",\"contrast\",\"dropShadow\",\"grayscale\",\"hueRotate\",\"invert\",\"saturate\",\"sepia\",\"filter\",\"backdropBlur\",\"backdropBrightness\",\"backdropContrast\",\"backdropGrayscale\",\"backdropHueRotate\",\"backdropInvert\",\"backdropOpacity\",\"backdropSaturate\",\"backdropSepia\",\"backdropFilter\",\"transitionProperty\",\"transitionDelay\",\"transitionDuration\",\"transitionTimingFunction\",\"willChange\",\"content\"]});var Ho=I(yn=>{\"use strict\";c();Object.defineProperty(yn,\"__esModule\",{value:!0});Object.defineProperty(yn,\"default\",{enumerable:!0,get:()=>_l});function _l(e,t){return e===void 0?t:Array.isArray(e)?e:[...new Set(t.filter(r=>e!==!1&&e[r]!==!1).concat(Object.keys(e).filter(r=>e[r]!==!1)))]}});var xn=I((eg,jo)=>{c();jo.exports={content:[],presets:[],darkMode:\"media\",theme:{screens:{sm:\"640px\",md:\"768px\",lg:\"1024px\",xl:\"1280px\",\"2xl\":\"1536px\"},colors:({colors:e})=>({inherit:e.inherit,current:e.current,transparent:e.transparent,black:e.black,white:e.white,slate:e.slate,gray:e.gray,zinc:e.zinc,neutral:e.neutral,stone:e.stone,red:e.red,orange:e.orange,amber:e.amber,yellow:e.yellow,lime:e.lime,green:e.green,emerald:e.emerald,teal:e.teal,cyan:e.cyan,sky:e.sky,blue:e.blue,indigo:e.indigo,violet:e.violet,purple:e.purple,fuchsia:e.fuchsia,pink:e.pink,rose:e.rose}),columns:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",\"3xs\":\"16rem\",\"2xs\":\"18rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\"},spacing:{px:\"1px\",0:\"0px\",.5:\"0.125rem\",1:\"0.25rem\",1.5:\"0.375rem\",2:\"0.5rem\",2.5:\"0.625rem\",3:\"0.75rem\",3.5:\"0.875rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\",11:\"2.75rem\",12:\"3rem\",14:\"3.5rem\",16:\"4rem\",20:\"5rem\",24:\"6rem\",28:\"7rem\",32:\"8rem\",36:\"9rem\",40:\"10rem\",44:\"11rem\",48:\"12rem\",52:\"13rem\",56:\"14rem\",60:\"15rem\",64:\"16rem\",72:\"18rem\",80:\"20rem\",96:\"24rem\"},animation:{none:\"none\",spin:\"spin 1s linear infinite\",ping:\"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",pulse:\"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",bounce:\"bounce 1s infinite\"},aspectRatio:{auto:\"auto\",square:\"1 / 1\",video:\"16 / 9\"},backdropBlur:({theme:e})=>e(\"blur\"),backdropBrightness:({theme:e})=>e(\"brightness\"),backdropContrast:({theme:e})=>e(\"contrast\"),backdropGrayscale:({theme:e})=>e(\"grayscale\"),backdropHueRotate:({theme:e})=>e(\"hueRotate\"),backdropInvert:({theme:e})=>e(\"invert\"),backdropOpacity:({theme:e})=>e(\"opacity\"),backdropSaturate:({theme:e})=>e(\"saturate\"),backdropSepia:({theme:e})=>e(\"sepia\"),backgroundColor:({theme:e})=>e(\"colors\"),backgroundImage:{none:\"none\",\"gradient-to-t\":\"linear-gradient(to top, var(--tw-gradient-stops))\",\"gradient-to-tr\":\"linear-gradient(to top right, var(--tw-gradient-stops))\",\"gradient-to-r\":\"linear-gradient(to right, var(--tw-gradient-stops))\",\"gradient-to-br\":\"linear-gradient(to bottom right, var(--tw-gradient-stops))\",\"gradient-to-b\":\"linear-gradient(to bottom, var(--tw-gradient-stops))\",\"gradient-to-bl\":\"linear-gradient(to bottom left, var(--tw-gradient-stops))\",\"gradient-to-l\":\"linear-gradient(to left, var(--tw-gradient-stops))\",\"gradient-to-tl\":\"linear-gradient(to top left, var(--tw-gradient-stops))\"},backgroundOpacity:({theme:e})=>e(\"opacity\"),backgroundPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},backgroundSize:{auto:\"auto\",cover:\"cover\",contain:\"contain\"},blur:{0:\"0\",none:\"0\",sm:\"4px\",DEFAULT:\"8px\",md:\"12px\",lg:\"16px\",xl:\"24px\",\"2xl\":\"40px\",\"3xl\":\"64px\"},brightness:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\",200:\"2\"},borderColor:({theme:e})=>({...e(\"colors\"),DEFAULT:e(\"colors.gray.200\",\"currentColor\")}),borderOpacity:({theme:e})=>e(\"opacity\"),borderRadius:{none:\"0px\",sm:\"0.125rem\",DEFAULT:\"0.25rem\",md:\"0.375rem\",lg:\"0.5rem\",xl:\"0.75rem\",\"2xl\":\"1rem\",\"3xl\":\"1.5rem\",full:\"9999px\"},borderSpacing:({theme:e})=>({...e(\"spacing\")}),borderWidth:{DEFAULT:\"1px\",0:\"0px\",2:\"2px\",4:\"4px\",8:\"8px\"},boxShadow:{sm:\"0 1px 2px 0 rgb(0 0 0 / 0.05)\",DEFAULT:\"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",md:\"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",lg:\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",xl:\"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\",\"2xl\":\"0 25px 50px -12px rgb(0 0 0 / 0.25)\",inner:\"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\",none:\"none\"},boxShadowColor:({theme:e})=>e(\"colors\"),caretColor:({theme:e})=>e(\"colors\"),accentColor:({theme:e})=>({...e(\"colors\"),auto:\"auto\"}),contrast:{0:\"0\",50:\".5\",75:\".75\",100:\"1\",125:\"1.25\",150:\"1.5\",200:\"2\"},container:{},content:{none:\"none\"},cursor:{auto:\"auto\",default:\"default\",pointer:\"pointer\",wait:\"wait\",text:\"text\",move:\"move\",help:\"help\",\"not-allowed\":\"not-allowed\",none:\"none\",\"context-menu\":\"context-menu\",progress:\"progress\",cell:\"cell\",crosshair:\"crosshair\",\"vertical-text\":\"vertical-text\",alias:\"alias\",copy:\"copy\",\"no-drop\":\"no-drop\",grab:\"grab\",grabbing:\"grabbing\",\"all-scroll\":\"all-scroll\",\"col-resize\":\"col-resize\",\"row-resize\":\"row-resize\",\"n-resize\":\"n-resize\",\"e-resize\":\"e-resize\",\"s-resize\":\"s-resize\",\"w-resize\":\"w-resize\",\"ne-resize\":\"ne-resize\",\"nw-resize\":\"nw-resize\",\"se-resize\":\"se-resize\",\"sw-resize\":\"sw-resize\",\"ew-resize\":\"ew-resize\",\"ns-resize\":\"ns-resize\",\"nesw-resize\":\"nesw-resize\",\"nwse-resize\":\"nwse-resize\",\"zoom-in\":\"zoom-in\",\"zoom-out\":\"zoom-out\"},divideColor:({theme:e})=>e(\"borderColor\"),divideOpacity:({theme:e})=>e(\"borderOpacity\"),divideWidth:({theme:e})=>e(\"borderWidth\"),dropShadow:{sm:\"0 1px 1px rgb(0 0 0 / 0.05)\",DEFAULT:[\"0 1px 2px rgb(0 0 0 / 0.1)\",\"0 1px 1px rgb(0 0 0 / 0.06)\"],md:[\"0 4px 3px rgb(0 0 0 / 0.07)\",\"0 2px 2px rgb(0 0 0 / 0.06)\"],lg:[\"0 10px 8px rgb(0 0 0 / 0.04)\",\"0 4px 3px rgb(0 0 0 / 0.1)\"],xl:[\"0 20px 13px rgb(0 0 0 / 0.03)\",\"0 8px 5px rgb(0 0 0 / 0.08)\"],\"2xl\":\"0 25px 25px rgb(0 0 0 / 0.15)\",none:\"0 0 #0000\"},fill:({theme:e})=>e(\"colors\"),grayscale:{0:\"0\",DEFAULT:\"100%\"},hueRotate:{0:\"0deg\",15:\"15deg\",30:\"30deg\",60:\"60deg\",90:\"90deg\",180:\"180deg\"},invert:{0:\"0\",DEFAULT:\"100%\"},flex:{1:\"1 1 0%\",auto:\"1 1 auto\",initial:\"0 1 auto\",none:\"none\"},flexBasis:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\"}),flexGrow:{0:\"0\",DEFAULT:\"1\"},flexShrink:{0:\"0\",DEFAULT:\"1\"},fontFamily:{sans:[\"ui-sans-serif\",\"system-ui\",\"-apple-system\",\"BlinkMacSystemFont\",'\"Segoe UI\"',\"Roboto\",'\"Helvetica Neue\"',\"Arial\",'\"Noto Sans\"',\"sans-serif\",'\"Apple Color Emoji\"','\"Segoe UI Emoji\"','\"Segoe UI Symbol\"','\"Noto Color Emoji\"'],serif:[\"ui-serif\",\"Georgia\",\"Cambria\",'\"Times New Roman\"',\"Times\",\"serif\"],mono:[\"ui-monospace\",\"SFMono-Regular\",\"Menlo\",\"Monaco\",\"Consolas\",'\"Liberation Mono\"','\"Courier New\"',\"monospace\"]},fontSize:{xs:[\"0.75rem\",{lineHeight:\"1rem\"}],sm:[\"0.875rem\",{lineHeight:\"1.25rem\"}],base:[\"1rem\",{lineHeight:\"1.5rem\"}],lg:[\"1.125rem\",{lineHeight:\"1.75rem\"}],xl:[\"1.25rem\",{lineHeight:\"1.75rem\"}],\"2xl\":[\"1.5rem\",{lineHeight:\"2rem\"}],\"3xl\":[\"1.875rem\",{lineHeight:\"2.25rem\"}],\"4xl\":[\"2.25rem\",{lineHeight:\"2.5rem\"}],\"5xl\":[\"3rem\",{lineHeight:\"1\"}],\"6xl\":[\"3.75rem\",{lineHeight:\"1\"}],\"7xl\":[\"4.5rem\",{lineHeight:\"1\"}],\"8xl\":[\"6rem\",{lineHeight:\"1\"}],\"9xl\":[\"8rem\",{lineHeight:\"1\"}]},fontWeight:{thin:\"100\",extralight:\"200\",light:\"300\",normal:\"400\",medium:\"500\",semibold:\"600\",bold:\"700\",extrabold:\"800\",black:\"900\"},gap:({theme:e})=>e(\"spacing\"),gradientColorStops:({theme:e})=>e(\"colors\"),gridAutoColumns:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridAutoRows:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridColumn:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-7\":\"span 7 / span 7\",\"span-8\":\"span 8 / span 8\",\"span-9\":\"span 9 / span 9\",\"span-10\":\"span 10 / span 10\",\"span-11\":\"span 11 / span 11\",\"span-12\":\"span 12 / span 12\",\"span-full\":\"1 / -1\"},gridColumnEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridColumnStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridRow:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-full\":\"1 / -1\"},gridRowStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridRowEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridTemplateColumns:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\",7:\"repeat(7, minmax(0, 1fr))\",8:\"repeat(8, minmax(0, 1fr))\",9:\"repeat(9, minmax(0, 1fr))\",10:\"repeat(10, minmax(0, 1fr))\",11:\"repeat(11, minmax(0, 1fr))\",12:\"repeat(12, minmax(0, 1fr))\"},gridTemplateRows:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\"},height:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),inset:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),keyframes:{spin:{to:{transform:\"rotate(360deg)\"}},ping:{\"75%, 100%\":{transform:\"scale(2)\",opacity:\"0\"}},pulse:{\"50%\":{opacity:\".5\"}},bounce:{\"0%, 100%\":{transform:\"translateY(-25%)\",animationTimingFunction:\"cubic-bezier(0.8,0,1,1)\"},\"50%\":{transform:\"none\",animationTimingFunction:\"cubic-bezier(0,0,0.2,1)\"}}},letterSpacing:{tighter:\"-0.05em\",tight:\"-0.025em\",normal:\"0em\",wide:\"0.025em\",wider:\"0.05em\",widest:\"0.1em\"},lineHeight:{none:\"1\",tight:\"1.25\",snug:\"1.375\",normal:\"1.5\",relaxed:\"1.625\",loose:\"2\",3:\".75rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\"},listStyleType:{none:\"none\",disc:\"disc\",decimal:\"decimal\"},margin:({theme:e})=>({auto:\"auto\",...e(\"spacing\")}),maxHeight:({theme:e})=>({...e(\"spacing\"),full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),maxWidth:({theme:e,breakpoints:t})=>({none:\"none\",0:\"0rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\",prose:\"65ch\",...t(e(\"screens\"))}),minHeight:{0:\"0px\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},minWidth:{0:\"0px\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},objectPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},opacity:{0:\"0\",5:\"0.05\",10:\"0.1\",20:\"0.2\",25:\"0.25\",30:\"0.3\",40:\"0.4\",50:\"0.5\",60:\"0.6\",70:\"0.7\",75:\"0.75\",80:\"0.8\",90:\"0.9\",95:\"0.95\",100:\"1\"},order:{first:\"-9999\",last:\"9999\",none:\"0\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\"},padding:({theme:e})=>e(\"spacing\"),placeholderColor:({theme:e})=>e(\"colors\"),placeholderOpacity:({theme:e})=>e(\"opacity\"),outlineColor:({theme:e})=>e(\"colors\"),outlineOffset:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},outlineWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},ringColor:({theme:e})=>({DEFAULT:e(\"colors.blue.500\",\"#3b82f6\"),...e(\"colors\")}),ringOffsetColor:({theme:e})=>e(\"colors\"),ringOffsetWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},ringOpacity:({theme:e})=>({DEFAULT:\"0.5\",...e(\"opacity\")}),ringWidth:{DEFAULT:\"3px\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},rotate:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\",45:\"45deg\",90:\"90deg\",180:\"180deg\"},saturate:{0:\"0\",50:\".5\",100:\"1\",150:\"1.5\",200:\"2\"},scale:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\"},scrollMargin:({theme:e})=>({...e(\"spacing\")}),scrollPadding:({theme:e})=>e(\"spacing\"),sepia:{0:\"0\",DEFAULT:\"100%\"},skew:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\"},space:({theme:e})=>({...e(\"spacing\")}),stroke:({theme:e})=>e(\"colors\"),strokeWidth:{0:\"0\",1:\"1\",2:\"2\"},textColor:({theme:e})=>e(\"colors\"),textDecorationColor:({theme:e})=>e(\"colors\"),textDecorationThickness:{auto:\"auto\",\"from-font\":\"from-font\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},textUnderlineOffset:{auto:\"auto\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},textIndent:({theme:e})=>({...e(\"spacing\")}),textOpacity:({theme:e})=>e(\"opacity\"),transformOrigin:{center:\"center\",top:\"top\",\"top-right\":\"top right\",right:\"right\",\"bottom-right\":\"bottom right\",bottom:\"bottom\",\"bottom-left\":\"bottom left\",left:\"left\",\"top-left\":\"top left\"},transitionDelay:{75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionDuration:{DEFAULT:\"150ms\",75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionProperty:{none:\"none\",all:\"all\",DEFAULT:\"color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter\",colors:\"color, background-color, border-color, text-decoration-color, fill, stroke\",opacity:\"opacity\",shadow:\"box-shadow\",transform:\"transform\"},transitionTimingFunction:{DEFAULT:\"cubic-bezier(0.4, 0, 0.2, 1)\",linear:\"linear\",in:\"cubic-bezier(0.4, 0, 1, 1)\",out:\"cubic-bezier(0, 0, 0.2, 1)\",\"in-out\":\"cubic-bezier(0.4, 0, 0.2, 1)\"},translate:({theme:e})=>({...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),width:({theme:e})=>({auto:\"auto\",...e(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\",screen:\"100vw\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),willChange:{auto:\"auto\",scroll:\"scroll-position\",contents:\"contents\",transform:\"transform\"},zIndex:{auto:\"auto\",0:\"0\",10:\"10\",20:\"20\",30:\"30\",40:\"40\",50:\"50\"}},variantOrder:[\"first\",\"last\",\"odd\",\"even\",\"visited\",\"checked\",\"empty\",\"read-only\",\"group-hover\",\"group-focus\",\"focus-within\",\"hover\",\"focus\",\"focus-visible\",\"active\",\"disabled\"],plugins:[]}});var vr={};go(vr,{default:()=>Sl});var Sl,br=Wr(()=>{c();Sl={info(e,t){console.info(...Array.isArray(e)?[e]:[t,e])},warn(e,t){console.warn(...Array.isArray(e)?[e]:[t,e])},risk(e,t){console.error(...Array.isArray(e)?[e]:[t,e])}}});var Yo=I(wn=>{\"use strict\";c();Object.defineProperty(wn,\"__esModule\",{value:!0});Object.defineProperty(wn,\"default\",{enumerable:!0,get:()=>Ol});var kl=Tl((br(),lr(vr)));function Tl(e){return e&&e.__esModule?e:{default:e}}function wt({version:e,from:t,to:n}){kl.default.warn(`${t}-color-renamed`,[`As of Tailwind CSS ${e}, \\`${t}\\` has been renamed to \\`${n}\\`.`,\"Update your configuration file to silence this warning.\"])}var Ol={inherit:\"inherit\",current:\"currentColor\",transparent:\"transparent\",black:\"#000\",white:\"#fff\",slate:{50:\"#f8fafc\",100:\"#f1f5f9\",200:\"#e2e8f0\",300:\"#cbd5e1\",400:\"#94a3b8\",500:\"#64748b\",600:\"#475569\",700:\"#334155\",800:\"#1e293b\",900:\"#0f172a\"},gray:{50:\"#f9fafb\",100:\"#f3f4f6\",200:\"#e5e7eb\",300:\"#d1d5db\",400:\"#9ca3af\",500:\"#6b7280\",600:\"#4b5563\",700:\"#374151\",800:\"#1f2937\",900:\"#111827\"},zinc:{50:\"#fafafa\",100:\"#f4f4f5\",200:\"#e4e4e7\",300:\"#d4d4d8\",400:\"#a1a1aa\",500:\"#71717a\",600:\"#52525b\",700:\"#3f3f46\",800:\"#27272a\",900:\"#18181b\"},neutral:{50:\"#fafafa\",100:\"#f5f5f5\",200:\"#e5e5e5\",300:\"#d4d4d4\",400:\"#a3a3a3\",500:\"#737373\",600:\"#525252\",700:\"#404040\",800:\"#262626\",900:\"#171717\"},stone:{50:\"#fafaf9\",100:\"#f5f5f4\",200:\"#e7e5e4\",300:\"#d6d3d1\",400:\"#a8a29e\",500:\"#78716c\",600:\"#57534e\",700:\"#44403c\",800:\"#292524\",900:\"#1c1917\"},red:{50:\"#fef2f2\",100:\"#fee2e2\",200:\"#fecaca\",300:\"#fca5a5\",400:\"#f87171\",500:\"#ef4444\",600:\"#dc2626\",700:\"#b91c1c\",800:\"#991b1b\",900:\"#7f1d1d\"},orange:{50:\"#fff7ed\",100:\"#ffedd5\",200:\"#fed7aa\",300:\"#fdba74\",400:\"#fb923c\",500:\"#f97316\",600:\"#ea580c\",700:\"#c2410c\",800:\"#9a3412\",900:\"#7c2d12\"},amber:{50:\"#fffbeb\",100:\"#fef3c7\",200:\"#fde68a\",300:\"#fcd34d\",400:\"#fbbf24\",500:\"#f59e0b\",600:\"#d97706\",700:\"#b45309\",800:\"#92400e\",900:\"#78350f\"},yellow:{50:\"#fefce8\",100:\"#fef9c3\",200:\"#fef08a\",300:\"#fde047\",400:\"#facc15\",500:\"#eab308\",600:\"#ca8a04\",700:\"#a16207\",800:\"#854d0e\",900:\"#713f12\"},lime:{50:\"#f7fee7\",100:\"#ecfccb\",200:\"#d9f99d\",300:\"#bef264\",400:\"#a3e635\",500:\"#84cc16\",600:\"#65a30d\",700:\"#4d7c0f\",800:\"#3f6212\",900:\"#365314\"},green:{50:\"#f0fdf4\",100:\"#dcfce7\",200:\"#bbf7d0\",300:\"#86efac\",400:\"#4ade80\",500:\"#22c55e\",600:\"#16a34a\",700:\"#15803d\",800:\"#166534\",900:\"#14532d\"},emerald:{50:\"#ecfdf5\",100:\"#d1fae5\",200:\"#a7f3d0\",300:\"#6ee7b7\",400:\"#34d399\",500:\"#10b981\",600:\"#059669\",700:\"#047857\",800:\"#065f46\",900:\"#064e3b\"},teal:{50:\"#f0fdfa\",100:\"#ccfbf1\",200:\"#99f6e4\",300:\"#5eead4\",400:\"#2dd4bf\",500:\"#14b8a6\",600:\"#0d9488\",700:\"#0f766e\",800:\"#115e59\",900:\"#134e4a\"},cyan:{50:\"#ecfeff\",100:\"#cffafe\",200:\"#a5f3fc\",300:\"#67e8f9\",400:\"#22d3ee\",500:\"#06b6d4\",600:\"#0891b2\",700:\"#0e7490\",800:\"#155e75\",900:\"#164e63\"},sky:{50:\"#f0f9ff\",100:\"#e0f2fe\",200:\"#bae6fd\",300:\"#7dd3fc\",400:\"#38bdf8\",500:\"#0ea5e9\",600:\"#0284c7\",700:\"#0369a1\",800:\"#075985\",900:\"#0c4a6e\"},blue:{50:\"#eff6ff\",100:\"#dbeafe\",200:\"#bfdbfe\",300:\"#93c5fd\",400:\"#60a5fa\",500:\"#3b82f6\",600:\"#2563eb\",700:\"#1d4ed8\",800:\"#1e40af\",900:\"#1e3a8a\"},indigo:{50:\"#eef2ff\",100:\"#e0e7ff\",200:\"#c7d2fe\",300:\"#a5b4fc\",400:\"#818cf8\",500:\"#6366f1\",600:\"#4f46e5\",700:\"#4338ca\",800:\"#3730a3\",900:\"#312e81\"},violet:{50:\"#f5f3ff\",100:\"#ede9fe\",200:\"#ddd6fe\",300:\"#c4b5fd\",400:\"#a78bfa\",500:\"#8b5cf6\",600:\"#7c3aed\",700:\"#6d28d9\",800:\"#5b21b6\",900:\"#4c1d95\"},purple:{50:\"#faf5ff\",100:\"#f3e8ff\",200:\"#e9d5ff\",300:\"#d8b4fe\",400:\"#c084fc\",500:\"#a855f7\",600:\"#9333ea\",700:\"#7e22ce\",800:\"#6b21a8\",900:\"#581c87\"},fuchsia:{50:\"#fdf4ff\",100:\"#fae8ff\",200:\"#f5d0fe\",300:\"#f0abfc\",400:\"#e879f9\",500:\"#d946ef\",600:\"#c026d3\",700:\"#a21caf\",800:\"#86198f\",900:\"#701a75\"},pink:{50:\"#fdf2f8\",100:\"#fce7f3\",200:\"#fbcfe8\",300:\"#f9a8d4\",400:\"#f472b6\",500:\"#ec4899\",600:\"#db2777\",700:\"#be185d\",800:\"#9d174d\",900:\"#831843\"},rose:{50:\"#fff1f2\",100:\"#ffe4e6\",200:\"#fecdd3\",300:\"#fda4af\",400:\"#fb7185\",500:\"#f43f5e\",600:\"#e11d48\",700:\"#be123c\",800:\"#9f1239\",900:\"#881337\"},get lightBlue(){return wt({version:\"v2.2\",from:\"lightBlue\",to:\"sky\"}),this.sky},get warmGray(){return wt({version:\"v3.0\",from:\"warmGray\",to:\"stone\"}),this.stone},get trueGray(){return wt({version:\"v3.0\",from:\"trueGray\",to:\"neutral\"}),this.neutral},get coolGray(){return wt({version:\"v3.0\",from:\"coolGray\",to:\"gray\"}),this.gray},get blueGray(){return wt({version:\"v3.0\",from:\"blueGray\",to:\"slate\"}),this.slate}}});var Xo=I(_n=>{\"use strict\";c();Object.defineProperty(_n,\"__esModule\",{value:!0});Object.defineProperty(_n,\"defaults\",{enumerable:!0,get:()=>El});function El(e,...t){for(let i of t){for(let s in i){var n;!(e==null||(n=e.hasOwnProperty)===null||n===void 0)&&n.call(e,s)||(e[s]=i[s])}for(let s of Object.getOwnPropertySymbols(i)){var r;!(e==null||(r=e.hasOwnProperty)===null||r===void 0)&&r.call(e,s)||(e[s]=i[s])}}return e}});var Qo=I(Sn=>{\"use strict\";c();Object.defineProperty(Sn,\"__esModule\",{value:!0});Object.defineProperty(Sn,\"toPath\",{enumerable:!0,get:()=>Pl});function Pl(e){if(Array.isArray(e))return e;let t=e.split(\"[\").length-1,n=e.split(\"]\").length-1;if(t!==n)throw new Error(`Path is invalid. Has unbalanced brackets: ${e}`);return e.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)}});var Ko=I(kn=>{\"use strict\";c();Object.defineProperty(kn,\"__esModule\",{value:!0});Object.defineProperty(kn,\"normalizeConfig\",{enumerable:!0,get:()=>Rl});var _t=Al((br(),lr(vr)));function Jo(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,n=new WeakMap;return(Jo=function(r){return r?n:t})(e)}function Al(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var n=Jo(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(s!==\"default\"&&Object.prototype.hasOwnProperty.call(e,s)){var o=i?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}function Rl(e){if((()=>{if(e.purge||!e.content||!Array.isArray(e.content)&&!(typeof e.content==\"object\"&&e.content!==null))return!1;if(Array.isArray(e.content))return e.content.every(r=>typeof r==\"string\"?!0:!(typeof(r==null?void 0:r.raw)!=\"string\"||(r==null?void 0:r.extension)&&typeof(r==null?void 0:r.extension)!=\"string\"));if(typeof e.content==\"object\"&&e.content!==null){if(Object.keys(e.content).some(r=>![\"files\",\"extract\",\"transform\"].includes(r)))return!1;if(Array.isArray(e.content.files)){if(!e.content.files.every(r=>typeof r==\"string\"?!0:!(typeof(r==null?void 0:r.raw)!=\"string\"||(r==null?void 0:r.extension)&&typeof(r==null?void 0:r.extension)!=\"string\")))return!1;if(typeof e.content.extract==\"object\"){for(let r of Object.values(e.content.extract))if(typeof r!=\"function\")return!1}else if(!(e.content.extract===void 0||typeof e.content.extract==\"function\"))return!1;if(typeof e.content.transform==\"object\"){for(let r of Object.values(e.content.transform))if(typeof r!=\"function\")return!1}else if(!(e.content.transform===void 0||typeof e.content.transform==\"function\"))return!1}return!0}return!1})()||_t.default.warn(\"purge-deprecation\",[\"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\"Update your configuration file to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"]),e.safelist=(()=>{var r;let{content:i,purge:s,safelist:o}=e;return Array.isArray(o)?o:Array.isArray(i==null?void 0:i.safelist)?i.safelist:Array.isArray(s==null?void 0:s.safelist)?s.safelist:Array.isArray(s==null||(r=s.options)===null||r===void 0?void 0:r.safelist)?s.options.safelist:[]})(),typeof e.prefix==\"function\")_t.default.warn(\"prefix-function\",[\"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\"Update `prefix` in your configuration to be a string to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"]),e.prefix=\"\";else{var n;e.prefix=(n=e.prefix)!==null&&n!==void 0?n:\"\"}e.content={files:(()=>{let{content:r,purge:i}=e;return Array.isArray(i)?i:Array.isArray(i==null?void 0:i.content)?i.content:Array.isArray(r)?r:Array.isArray(r==null?void 0:r.content)?r.content:Array.isArray(r==null?void 0:r.files)?r.files:[]})(),extract:(()=>{let r=(()=>{var o,a,u,f,l,p,y,h,d,m;return!((o=e.purge)===null||o===void 0)&&o.extract?e.purge.extract:!((a=e.content)===null||a===void 0)&&a.extract?e.content.extract:!((u=e.purge)===null||u===void 0||(f=u.extract)===null||f===void 0)&&f.DEFAULT?e.purge.extract.DEFAULT:!((l=e.content)===null||l===void 0||(p=l.extract)===null||p===void 0)&&p.DEFAULT?e.content.extract.DEFAULT:!((y=e.purge)===null||y===void 0||(h=y.options)===null||h===void 0)&&h.extractors?e.purge.options.extractors:!((d=e.content)===null||d===void 0||(m=d.options)===null||m===void 0)&&m.extractors?e.content.options.extractors:{}})(),i={},s=(()=>{var o,a,u,f;if(!((o=e.purge)===null||o===void 0||(a=o.options)===null||a===void 0)&&a.defaultExtractor)return e.purge.options.defaultExtractor;if(!((u=e.content)===null||u===void 0||(f=u.options)===null||f===void 0)&&f.defaultExtractor)return e.content.options.defaultExtractor})();if(s!==void 0&&(i.DEFAULT=s),typeof r==\"function\")i.DEFAULT=r;else if(Array.isArray(r))for(let{extensions:o,extractor:a}of r!=null?r:[])for(let u of o)i[u]=a;else typeof r==\"object\"&&r!==null&&Object.assign(i,r);return i})(),transform:(()=>{let r=(()=>{var s,o,a,u,f,l;return!((s=e.purge)===null||s===void 0)&&s.transform?e.purge.transform:!((o=e.content)===null||o===void 0)&&o.transform?e.content.transform:!((a=e.purge)===null||a===void 0||(u=a.transform)===null||u===void 0)&&u.DEFAULT?e.purge.transform.DEFAULT:!((f=e.content)===null||f===void 0||(l=f.transform)===null||l===void 0)&&l.DEFAULT?e.content.transform.DEFAULT:{}})(),i={};return typeof r==\"function\"&&(i.DEFAULT=r),typeof r==\"object\"&&r!==null&&Object.assign(i,r),i})()};for(let r of e.content.files)if(typeof r==\"string\"&&/{([^,]*?)}/g.test(r)){_t.default.warn(\"invalid-glob-braces\",[`The glob pattern ${(0,_t.dim)(r)} in your Tailwind CSS configuration is invalid.`,`Update it to ${(0,_t.dim)(r.replace(/{([^,]*?)}/g,\"$1\"))} to silence this warning.`]);break}return e}});var Zo=I(Tn=>{\"use strict\";c();Object.defineProperty(Tn,\"__esModule\",{value:!0});Object.defineProperty(Tn,\"default\",{enumerable:!0,get:()=>Il});function Il(e){if(Object.prototype.toString.call(e)!==\"[object Object]\")return!1;let t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}});var es=I(En=>{\"use strict\";c();Object.defineProperty(En,\"__esModule\",{value:!0});Object.defineProperty(En,\"cloneDeep\",{enumerable:!0,get:()=>On});function On(e){return Array.isArray(e)?e.map(t=>On(t)):typeof e==\"object\"&&e!==null?Object.fromEntries(Object.entries(e).map(([t,n])=>[t,On(n)])):e}});var Pn=I((yr,ts)=>{\"use strict\";c();yr.__esModule=!0;yr.default=Dl;function Ll(e){for(var t=e.toLowerCase(),n=\"\",r=!1,i=0;i<6&&t[i]!==void 0;i++){var s=t.charCodeAt(i),o=s>=97&&s<=102||s>=48&&s<=57;if(r=s===32,!o)break;n+=t[i]}if(n.length!==0){var a=parseInt(n,16),u=a>=55296&&a<=57343;return u||a===0||a>1114111?[\"\\uFFFD\",n.length+(r?1:0)]:[String.fromCodePoint(a),n.length+(r?1:0)]}}var Cl=/\\\\/;function Dl(e){var t=Cl.test(e);if(!t)return e;for(var n=\"\",r=0;r<e.length;r++){if(e[r]===\"\\\\\"){var i=Ll(e.slice(r+1,r+7));if(i!==void 0){n+=i[0],r+=i[1];continue}if(e[r+1]===\"\\\\\"){n+=\"\\\\\",r++;continue}e.length===r+1&&(n+=e[r]);continue}n+=e[r]}return n}ts.exports=yr.default});var ns=I((xr,rs)=>{\"use strict\";c();xr.__esModule=!0;xr.default=Ml;function Ml(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(;n.length>0;){var i=n.shift();if(!e[i])return;e=e[i]}return e}rs.exports=xr.default});var os=I((wr,is)=>{\"use strict\";c();wr.__esModule=!0;wr.default=Fl;function Fl(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(;n.length>0;){var i=n.shift();e[i]||(e[i]={}),e=e[i]}}is.exports=wr.default});var as=I((_r,ss)=>{\"use strict\";c();_r.__esModule=!0;_r.default=Nl;function Nl(e){for(var t=\"\",n=e.indexOf(\"/*\"),r=0;n>=0;){t=t+e.slice(r,n);var i=e.indexOf(\"*/\",n+2);if(i<0)return t;r=i+2,n=e.indexOf(\"/*\",r)}return t=t+e.slice(r),t}ss.exports=_r.default});var St=I(Oe=>{\"use strict\";c();Oe.__esModule=!0;Oe.stripComments=Oe.ensureObject=Oe.getProp=Oe.unesc=void 0;var $l=Sr(Pn());Oe.unesc=$l.default;var ql=Sr(ns());Oe.getProp=ql.default;var Wl=Sr(os());Oe.ensureObject=Wl.default;var Bl=Sr(as());Oe.stripComments=Bl.default;function Sr(e){return e&&e.__esModule?e:{default:e}}});var Le=I((kt,fs)=>{\"use strict\";c();kt.__esModule=!0;kt.default=void 0;var us=St();function ls(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ul(e,t,n){return t&&ls(e.prototype,t),n&&ls(e,n),e}var zl=function e(t,n){if(typeof t!=\"object\"||t===null)return t;var r=new t.constructor;for(var i in t)if(!!t.hasOwnProperty(i)){var s=t[i],o=typeof s;i===\"parent\"&&o===\"object\"?n&&(r[i]=n):s instanceof Array?r[i]=s.map(function(a){return e(a,r)}):r[i]=e(s,r)}return r},Gl=function(){function e(n){n===void 0&&(n={}),Object.assign(this,n),this.spaces=this.spaces||{},this.spaces.before=this.spaces.before||\"\",this.spaces.after=this.spaces.after||\"\"}var t=e.prototype;return t.remove=function(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this},t.replaceWith=function(){if(this.parent){for(var r in arguments)this.parent.insertBefore(this,arguments[r]);this.remove()}return this},t.next=function(){return this.parent.at(this.parent.index(this)+1)},t.prev=function(){return this.parent.at(this.parent.index(this)-1)},t.clone=function(r){r===void 0&&(r={});var i=zl(this);for(var s in r)i[s]=r[s];return i},t.appendToPropertyAndEscape=function(r,i,s){this.raws||(this.raws={});var o=this[r],a=this.raws[r];this[r]=o+i,a||s!==i?this.raws[r]=(a||o)+s:delete this.raws[r]},t.setPropertyAndEscape=function(r,i,s){this.raws||(this.raws={}),this[r]=i,this.raws[r]=s},t.setPropertyWithoutEscape=function(r,i){this[r]=i,this.raws&&delete this.raws[r]},t.isAtPosition=function(r,i){if(this.source&&this.source.start&&this.source.end)return!(this.source.start.line>r||this.source.end.line<r||this.source.start.line===r&&this.source.start.column>i||this.source.end.line===r&&this.source.end.column<i)},t.stringifyProperty=function(r){return this.raws&&this.raws[r]||this[r]},t.valueToString=function(){return String(this.stringifyProperty(\"value\"))},t.toString=function(){return[this.rawSpaceBefore,this.valueToString(),this.rawSpaceAfter].join(\"\")},Ul(e,[{key:\"rawSpaceBefore\",get:function(){var r=this.raws&&this.raws.spaces&&this.raws.spaces.before;return r===void 0&&(r=this.spaces&&this.spaces.before),r||\"\"},set:function(r){(0,us.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.before=r}},{key:\"rawSpaceAfter\",get:function(){var r=this.raws&&this.raws.spaces&&this.raws.spaces.after;return r===void 0&&(r=this.spaces.after),r||\"\"},set:function(r){(0,us.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.after=r}}]),e}();kt.default=Gl;fs.exports=kt.default});var oe=I(Y=>{\"use strict\";c();Y.__esModule=!0;Y.UNIVERSAL=Y.ATTRIBUTE=Y.CLASS=Y.COMBINATOR=Y.COMMENT=Y.ID=Y.NESTING=Y.PSEUDO=Y.ROOT=Y.SELECTOR=Y.STRING=Y.TAG=void 0;var Vl=\"tag\";Y.TAG=Vl;var Hl=\"string\";Y.STRING=Hl;var jl=\"selector\";Y.SELECTOR=jl;var Yl=\"root\";Y.ROOT=Yl;var Xl=\"pseudo\";Y.PSEUDO=Xl;var Ql=\"nesting\";Y.NESTING=Ql;var Jl=\"id\";Y.ID=Jl;var Kl=\"comment\";Y.COMMENT=Kl;var Zl=\"combinator\";Y.COMBINATOR=Zl;var ef=\"class\";Y.CLASS=ef;var tf=\"attribute\";Y.ATTRIBUTE=tf;var rf=\"universal\";Y.UNIVERSAL=rf});var kr=I((Tt,hs)=>{\"use strict\";c();Tt.__esModule=!0;Tt.default=void 0;var nf=sf(Le()),Ce=of(oe());function ps(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return ps=function(){return e},e}function of(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=ps();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function sf(e){return e&&e.__esModule?e:{default:e}}function af(e,t){var n;if(typeof Symbol>\"u\"||e[Symbol.iterator]==null){if(Array.isArray(e)||(n=uf(e))||t&&e&&typeof e.length==\"number\"){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}return n=e[Symbol.iterator](),n.next.bind(n)}function uf(e,t){if(!!e){if(typeof e==\"string\")return cs(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n===\"Object\"&&e.constructor&&(n=e.constructor.name),n===\"Map\"||n===\"Set\")return Array.from(e);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return cs(e,t)}}function cs(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function ds(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function lf(e,t,n){return t&&ds(e.prototype,t),n&&ds(e,n),e}function ff(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,An(e,t)}function An(e,t){return An=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},An(e,t)}var cf=function(e){ff(t,e);function t(r){var i;return i=e.call(this,r)||this,i.nodes||(i.nodes=[]),i}var n=t.prototype;return n.append=function(i){return i.parent=this,this.nodes.push(i),this},n.prepend=function(i){return i.parent=this,this.nodes.unshift(i),this},n.at=function(i){return this.nodes[i]},n.index=function(i){return typeof i==\"number\"?i:this.nodes.indexOf(i)},n.removeChild=function(i){i=this.index(i),this.at(i).parent=void 0,this.nodes.splice(i,1);var s;for(var o in this.indexes)s=this.indexes[o],s>=i&&(this.indexes[o]=s-1);return this},n.removeAll=function(){for(var i=af(this.nodes),s;!(s=i()).done;){var o=s.value;o.parent=void 0}return this.nodes=[],this},n.empty=function(){return this.removeAll()},n.insertAfter=function(i,s){s.parent=this;var o=this.index(i);this.nodes.splice(o+1,0,s),s.parent=this;var a;for(var u in this.indexes)a=this.indexes[u],o<=a&&(this.indexes[u]=a+1);return this},n.insertBefore=function(i,s){s.parent=this;var o=this.index(i);this.nodes.splice(o,0,s),s.parent=this;var a;for(var u in this.indexes)a=this.indexes[u],a<=o&&(this.indexes[u]=a+1);return this},n._findChildAtPosition=function(i,s){var o=void 0;return this.each(function(a){if(a.atPosition){var u=a.atPosition(i,s);if(u)return o=u,!1}else if(a.isAtPosition(i,s))return o=a,!1}),o},n.atPosition=function(i,s){if(this.isAtPosition(i,s))return this._findChildAtPosition(i,s)||this},n._inferEndPosition=function(){this.last&&this.last.source&&this.last.source.end&&(this.source=this.source||{},this.source.end=this.source.end||{},Object.assign(this.source.end,this.last.source.end))},n.each=function(i){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach++;var s=this.lastEach;if(this.indexes[s]=0,!!this.length){for(var o,a;this.indexes[s]<this.length&&(o=this.indexes[s],a=i(this.at(o),o),a!==!1);)this.indexes[s]+=1;if(delete this.indexes[s],a===!1)return!1}},n.walk=function(i){return this.each(function(s,o){var a=i(s,o);if(a!==!1&&s.length&&(a=s.walk(i)),a===!1)return!1})},n.walkAttributes=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.ATTRIBUTE)return i.call(s,o)})},n.walkClasses=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.CLASS)return i.call(s,o)})},n.walkCombinators=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.COMBINATOR)return i.call(s,o)})},n.walkComments=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.COMMENT)return i.call(s,o)})},n.walkIds=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.ID)return i.call(s,o)})},n.walkNesting=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.NESTING)return i.call(s,o)})},n.walkPseudos=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.PSEUDO)return i.call(s,o)})},n.walkTags=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.TAG)return i.call(s,o)})},n.walkUniversals=function(i){var s=this;return this.walk(function(o){if(o.type===Ce.UNIVERSAL)return i.call(s,o)})},n.split=function(i){var s=this,o=[];return this.reduce(function(a,u,f){var l=i.call(s,u);return o.push(u),l?(a.push(o),o=[]):f===s.length-1&&a.push(o),a},[])},n.map=function(i){return this.nodes.map(i)},n.reduce=function(i,s){return this.nodes.reduce(i,s)},n.every=function(i){return this.nodes.every(i)},n.some=function(i){return this.nodes.some(i)},n.filter=function(i){return this.nodes.filter(i)},n.sort=function(i){return this.nodes.sort(i)},n.toString=function(){return this.map(String).join(\"\")},lf(t,[{key:\"first\",get:function(){return this.at(0)}},{key:\"last\",get:function(){return this.at(this.length-1)}},{key:\"length\",get:function(){return this.nodes.length}}]),t}(nf.default);Tt.default=cf;hs.exports=Tt.default});var In=I((Ot,gs)=>{\"use strict\";c();Ot.__esModule=!0;Ot.default=void 0;var df=hf(kr()),pf=oe();function hf(e){return e&&e.__esModule?e:{default:e}}function ms(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function mf(e,t,n){return t&&ms(e.prototype,t),n&&ms(e,n),e}function gf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Rn(e,t)}function Rn(e,t){return Rn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Rn(e,t)}var vf=function(e){gf(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=pf.ROOT,i}var n=t.prototype;return n.toString=function(){var i=this.reduce(function(s,o){return s.push(String(o)),s},[]).join(\",\");return this.trailingComma?i+\",\":i},n.error=function(i,s){return this._error?this._error(i,s):new Error(i)},mf(t,[{key:\"errorGenerator\",set:function(i){this._error=i}}]),t}(df.default);Ot.default=vf;gs.exports=Ot.default});var Cn=I((Et,vs)=>{\"use strict\";c();Et.__esModule=!0;Et.default=void 0;var bf=xf(kr()),yf=oe();function xf(e){return e&&e.__esModule?e:{default:e}}function wf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Ln(e,t)}function Ln(e,t){return Ln=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Ln(e,t)}var _f=function(e){wf(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=yf.SELECTOR,r}return t}(bf.default);Et.default=_f;vs.exports=Et.default});var Tr=I((lg,bs)=>{\"use strict\";c();var Sf={},kf=Sf.hasOwnProperty,Tf=function(t,n){if(!t)return n;var r={};for(var i in n)r[i]=kf.call(t,i)?t[i]:n[i];return r},Of=/[ -,\\.\\/:-@\\[-\\^`\\{-~]/,Ef=/[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/,Pf=/(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g,Dn=function e(t,n){n=Tf(n,e.options),n.quotes!=\"single\"&&n.quotes!=\"double\"&&(n.quotes=\"single\");for(var r=n.quotes==\"double\"?'\"':\"'\",i=n.isIdentifier,s=t.charAt(0),o=\"\",a=0,u=t.length;a<u;){var f=t.charAt(a++),l=f.charCodeAt(),p=void 0;if(l<32||l>126){if(l>=55296&&l<=56319&&a<u){var y=t.charCodeAt(a++);(y&64512)==56320?l=((l&1023)<<10)+(y&1023)+65536:a--}p=\"\\\\\"+l.toString(16).toUpperCase()+\" \"}else n.escapeEverything?Of.test(f)?p=\"\\\\\"+f:p=\"\\\\\"+l.toString(16).toUpperCase()+\" \":/[\\t\\n\\f\\r\\x0B]/.test(f)?p=\"\\\\\"+l.toString(16).toUpperCase()+\" \":f==\"\\\\\"||!i&&(f=='\"'&&r==f||f==\"'\"&&r==f)||i&&Ef.test(f)?p=\"\\\\\"+f:p=f;o+=p}return i&&(/^-[-\\d]/.test(o)?o=\"\\\\-\"+o.slice(1):/\\d/.test(s)&&(o=\"\\\\3\"+s+\" \"+o.slice(1))),o=o.replace(Pf,function(h,d,m){return d&&d.length%2?h:(d||\"\")+m}),!i&&n.wrap?r+o+r:o};Dn.options={escapeEverything:!1,isIdentifier:!1,quotes:\"single\",wrap:!1};Dn.version=\"3.0.0\";bs.exports=Dn});var Fn=I((Pt,ws)=>{\"use strict\";c();Pt.__esModule=!0;Pt.default=void 0;var Af=xs(Tr()),Rf=St(),If=xs(Le()),Lf=oe();function xs(e){return e&&e.__esModule?e:{default:e}}function ys(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Cf(e,t,n){return t&&ys(e.prototype,t),n&&ys(e,n),e}function Df(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Mn(e,t)}function Mn(e,t){return Mn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Mn(e,t)}var Mf=function(e){Df(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=Lf.CLASS,i._constructed=!0,i}var n=t.prototype;return n.valueToString=function(){return\".\"+e.prototype.valueToString.call(this)},Cf(t,[{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var s=(0,Af.default)(i,{isIdentifier:!0});s!==i?((0,Rf.ensureObject)(this,\"raws\"),this.raws.value=s):this.raws&&delete this.raws.value}this._value=i}}]),t}(If.default);Pt.default=Mf;ws.exports=Pt.default});var $n=I((At,_s)=>{\"use strict\";c();At.__esModule=!0;At.default=void 0;var Ff=$f(Le()),Nf=oe();function $f(e){return e&&e.__esModule?e:{default:e}}function qf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Nn(e,t)}function Nn(e,t){return Nn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Nn(e,t)}var Wf=function(e){qf(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Nf.COMMENT,r}return t}(Ff.default);At.default=Wf;_s.exports=At.default});var Wn=I((Rt,Ss)=>{\"use strict\";c();Rt.__esModule=!0;Rt.default=void 0;var Bf=zf(Le()),Uf=oe();function zf(e){return e&&e.__esModule?e:{default:e}}function Gf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,qn(e,t)}function qn(e,t){return qn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},qn(e,t)}var Vf=function(e){Gf(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=Uf.ID,i}var n=t.prototype;return n.valueToString=function(){return\"#\"+e.prototype.valueToString.call(this)},t}(Bf.default);Rt.default=Vf;Ss.exports=Rt.default});var Or=I((It,Os)=>{\"use strict\";c();It.__esModule=!0;It.default=void 0;var Hf=Ts(Tr()),jf=St(),Yf=Ts(Le());function Ts(e){return e&&e.__esModule?e:{default:e}}function ks(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Xf(e,t,n){return t&&ks(e.prototype,t),n&&ks(e,n),e}function Qf(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Bn(e,t)}function Bn(e,t){return Bn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Bn(e,t)}var Jf=function(e){Qf(t,e);function t(){return e.apply(this,arguments)||this}var n=t.prototype;return n.qualifiedName=function(i){return this.namespace?this.namespaceString+\"|\"+i:i},n.valueToString=function(){return this.qualifiedName(e.prototype.valueToString.call(this))},Xf(t,[{key:\"namespace\",get:function(){return this._namespace},set:function(i){if(i===!0||i===\"*\"||i===\"&\"){this._namespace=i,this.raws&&delete this.raws.namespace;return}var s=(0,Hf.default)(i,{isIdentifier:!0});this._namespace=i,s!==i?((0,jf.ensureObject)(this,\"raws\"),this.raws.namespace=s):this.raws&&delete this.raws.namespace}},{key:\"ns\",get:function(){return this._namespace},set:function(i){this.namespace=i}},{key:\"namespaceString\",get:function(){if(this.namespace){var i=this.stringifyProperty(\"namespace\");return i===!0?\"\":i}else return\"\"}}]),t}(Yf.default);It.default=Jf;Os.exports=It.default});var zn=I((Lt,Es)=>{\"use strict\";c();Lt.__esModule=!0;Lt.default=void 0;var Kf=ec(Or()),Zf=oe();function ec(e){return e&&e.__esModule?e:{default:e}}function tc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Un(e,t)}function Un(e,t){return Un=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Un(e,t)}var rc=function(e){tc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Zf.TAG,r}return t}(Kf.default);Lt.default=rc;Es.exports=Lt.default});var Vn=I((Ct,Ps)=>{\"use strict\";c();Ct.__esModule=!0;Ct.default=void 0;var nc=oc(Le()),ic=oe();function oc(e){return e&&e.__esModule?e:{default:e}}function sc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Gn(e,t)}function Gn(e,t){return Gn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Gn(e,t)}var ac=function(e){sc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=ic.STRING,r}return t}(nc.default);Ct.default=ac;Ps.exports=Ct.default});var jn=I((Dt,As)=>{\"use strict\";c();Dt.__esModule=!0;Dt.default=void 0;var uc=fc(kr()),lc=oe();function fc(e){return e&&e.__esModule?e:{default:e}}function cc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Hn(e,t)}function Hn(e,t){return Hn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Hn(e,t)}var dc=function(e){cc(t,e);function t(r){var i;return i=e.call(this,r)||this,i.type=lc.PSEUDO,i}var n=t.prototype;return n.toString=function(){var i=this.length?\"(\"+this.map(String).join(\",\")+\")\":\"\";return[this.rawSpaceBefore,this.stringifyProperty(\"value\"),i,this.rawSpaceAfter].join(\"\")},t}(uc.default);Dt.default=dc;As.exports=Dt.default});var Is=I((fg,Rs)=>{c();Rs.exports=function(t,n){return function(...r){return console.warn(n),t(...r)}}});var Zn=I(Nt=>{\"use strict\";c();Nt.__esModule=!0;Nt.unescapeValue=Kn;Nt.default=void 0;var Mt=Jn(Tr()),pc=Jn(Pn()),hc=Jn(Or()),mc=oe(),Yn;function Jn(e){return e&&e.__esModule?e:{default:e}}function Ls(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function gc(e,t,n){return t&&Ls(e.prototype,t),n&&Ls(e,n),e}function vc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,Qn(e,t)}function Qn(e,t){return Qn=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},Qn(e,t)}var Ft=Is(),bc=/^('|\")([^]*)\\1$/,yc=Ft(function(){},\"Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.\"),xc=Ft(function(){},\"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\"),wc=Ft(function(){},\"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");function Kn(e){var t=!1,n=null,r=e,i=r.match(bc);return i&&(n=i[1],r=i[2]),r=(0,pc.default)(r),r!==e&&(t=!0),{deprecatedUsage:t,unescaped:r,quoteMark:n}}function _c(e){if(e.quoteMark!==void 0||e.value===void 0)return e;wc();var t=Kn(e.value),n=t.quoteMark,r=t.unescaped;return e.raws||(e.raws={}),e.raws.value===void 0&&(e.raws.value=e.value),e.value=r,e.quoteMark=n,e}var Er=function(e){vc(t,e);function t(r){var i;return r===void 0&&(r={}),i=e.call(this,_c(r))||this,i.type=mc.ATTRIBUTE,i.raws=i.raws||{},Object.defineProperty(i.raws,\"unquoted\",{get:Ft(function(){return i.value},\"attr.raws.unquoted is deprecated. Call attr.value instead.\"),set:Ft(function(){return i.value},\"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")}),i._constructed=!0,i}var n=t.prototype;return n.getQuotedValue=function(i){i===void 0&&(i={});var s=this._determineQuoteMark(i),o=Xn[s],a=(0,Mt.default)(this._value,o);return a},n._determineQuoteMark=function(i){return i.smart?this.smartQuoteMark(i):this.preferredQuoteMark(i)},n.setValue=function(i,s){s===void 0&&(s={}),this._value=i,this._quoteMark=this._determineQuoteMark(s),this._syncRawValue()},n.smartQuoteMark=function(i){var s=this.value,o=s.replace(/[^']/g,\"\").length,a=s.replace(/[^\"]/g,\"\").length;if(o+a===0){var u=(0,Mt.default)(s,{isIdentifier:!0});if(u===s)return t.NO_QUOTE;var f=this.preferredQuoteMark(i);if(f===t.NO_QUOTE){var l=this.quoteMark||i.quoteMark||t.DOUBLE_QUOTE,p=Xn[l],y=(0,Mt.default)(s,p);if(y.length<u.length)return l}return f}else return a===o?this.preferredQuoteMark(i):a<o?t.DOUBLE_QUOTE:t.SINGLE_QUOTE},n.preferredQuoteMark=function(i){var s=i.preferCurrentQuoteMark?this.quoteMark:i.quoteMark;return s===void 0&&(s=i.preferCurrentQuoteMark?i.quoteMark:this.quoteMark),s===void 0&&(s=t.DOUBLE_QUOTE),s},n._syncRawValue=function(){var i=(0,Mt.default)(this._value,Xn[this.quoteMark]);i===this._value?this.raws&&delete this.raws.value:this.raws.value=i},n._handleEscapes=function(i,s){if(this._constructed){var o=(0,Mt.default)(s,{isIdentifier:!0});o!==s?this.raws[i]=o:delete this.raws[i]}},n._spacesFor=function(i){var s={before:\"\",after:\"\"},o=this.spaces[i]||{},a=this.raws.spaces&&this.raws.spaces[i]||{};return Object.assign(s,o,a)},n._stringFor=function(i,s,o){s===void 0&&(s=i),o===void 0&&(o=Cs);var a=this._spacesFor(s);return o(this.stringifyProperty(i),a)},n.offsetOf=function(i){var s=1,o=this._spacesFor(\"attribute\");if(s+=o.before.length,i===\"namespace\"||i===\"ns\")return this.namespace?s:-1;if(i===\"attributeNS\"||(s+=this.namespaceString.length,this.namespace&&(s+=1),i===\"attribute\"))return s;s+=this.stringifyProperty(\"attribute\").length,s+=o.after.length;var a=this._spacesFor(\"operator\");s+=a.before.length;var u=this.stringifyProperty(\"operator\");if(i===\"operator\")return u?s:-1;s+=u.length,s+=a.after.length;var f=this._spacesFor(\"value\");s+=f.before.length;var l=this.stringifyProperty(\"value\");if(i===\"value\")return l?s:-1;s+=l.length,s+=f.after.length;var p=this._spacesFor(\"insensitive\");return s+=p.before.length,i===\"insensitive\"&&this.insensitive?s:-1},n.toString=function(){var i=this,s=[this.rawSpaceBefore,\"[\"];return s.push(this._stringFor(\"qualifiedAttribute\",\"attribute\")),this.operator&&(this.value||this.value===\"\")&&(s.push(this._stringFor(\"operator\")),s.push(this._stringFor(\"value\")),s.push(this._stringFor(\"insensitiveFlag\",\"insensitive\",function(o,a){return o.length>0&&!i.quoted&&a.before.length===0&&!(i.spaces.value&&i.spaces.value.after)&&(a.before=\" \"),Cs(o,a)}))),s.push(\"]\"),s.push(this.rawSpaceAfter),s.join(\"\")},gc(t,[{key:\"quoted\",get:function(){var i=this.quoteMark;return i===\"'\"||i==='\"'},set:function(i){xc()}},{key:\"quoteMark\",get:function(){return this._quoteMark},set:function(i){if(!this._constructed){this._quoteMark=i;return}this._quoteMark!==i&&(this._quoteMark=i,this._syncRawValue())}},{key:\"qualifiedAttribute\",get:function(){return this.qualifiedName(this.raws.attribute||this.attribute)}},{key:\"insensitiveFlag\",get:function(){return this.insensitive?\"i\":\"\"}},{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var s=Kn(i),o=s.deprecatedUsage,a=s.unescaped,u=s.quoteMark;if(o&&yc(),a===this._value&&u===this._quoteMark)return;this._value=a,this._quoteMark=u,this._syncRawValue()}else this._value=i}},{key:\"attribute\",get:function(){return this._attribute},set:function(i){this._handleEscapes(\"attribute\",i),this._attribute=i}}]),t}(hc.default);Nt.default=Er;Er.NO_QUOTE=null;Er.SINGLE_QUOTE=\"'\";Er.DOUBLE_QUOTE='\"';var Xn=(Yn={\"'\":{quotes:\"single\",wrap:!0},'\"':{quotes:\"double\",wrap:!0}},Yn[null]={isIdentifier:!0},Yn);function Cs(e,t){return\"\"+t.before+e+t.after}});var ti=I(($t,Ds)=>{\"use strict\";c();$t.__esModule=!0;$t.default=void 0;var Sc=Tc(Or()),kc=oe();function Tc(e){return e&&e.__esModule?e:{default:e}}function Oc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ei(e,t)}function ei(e,t){return ei=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ei(e,t)}var Ec=function(e){Oc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=kc.UNIVERSAL,r.value=\"*\",r}return t}(Sc.default);$t.default=Ec;Ds.exports=$t.default});var ni=I((qt,Ms)=>{\"use strict\";c();qt.__esModule=!0;qt.default=void 0;var Pc=Rc(Le()),Ac=oe();function Rc(e){return e&&e.__esModule?e:{default:e}}function Ic(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ri(e,t)}function ri(e,t){return ri=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ri(e,t)}var Lc=function(e){Ic(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Ac.COMBINATOR,r}return t}(Pc.default);qt.default=Lc;Ms.exports=qt.default});var oi=I((Wt,Fs)=>{\"use strict\";c();Wt.__esModule=!0;Wt.default=void 0;var Cc=Mc(Le()),Dc=oe();function Mc(e){return e&&e.__esModule?e:{default:e}}function Fc(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,ii(e,t)}function ii(e,t){return ii=Object.setPrototypeOf||function(r,i){return r.__proto__=i,r},ii(e,t)}var Nc=function(e){Fc(t,e);function t(n){var r;return r=e.call(this,n)||this,r.type=Dc.NESTING,r.value=\"&\",r}return t}(Cc.default);Wt.default=Nc;Fs.exports=Wt.default});var $s=I((Pr,Ns)=>{\"use strict\";c();Pr.__esModule=!0;Pr.default=$c;function $c(e){return e.sort(function(t,n){return t-n})}Ns.exports=Pr.default});var si=I(P=>{\"use strict\";c();P.__esModule=!0;P.combinator=P.word=P.comment=P.str=P.tab=P.newline=P.feed=P.cr=P.backslash=P.bang=P.slash=P.doubleQuote=P.singleQuote=P.space=P.greaterThan=P.pipe=P.equals=P.plus=P.caret=P.tilde=P.dollar=P.closeSquare=P.openSquare=P.closeParenthesis=P.openParenthesis=P.semicolon=P.colon=P.comma=P.at=P.asterisk=P.ampersand=void 0;var qc=38;P.ampersand=qc;var Wc=42;P.asterisk=Wc;var Bc=64;P.at=Bc;var Uc=44;P.comma=Uc;var zc=58;P.colon=zc;var Gc=59;P.semicolon=Gc;var Vc=40;P.openParenthesis=Vc;var Hc=41;P.closeParenthesis=Hc;var jc=91;P.openSquare=jc;var Yc=93;P.closeSquare=Yc;var Xc=36;P.dollar=Xc;var Qc=126;P.tilde=Qc;var Jc=94;P.caret=Jc;var Kc=43;P.plus=Kc;var Zc=61;P.equals=Zc;var ed=124;P.pipe=ed;var td=62;P.greaterThan=td;var rd=32;P.space=rd;var qs=39;P.singleQuote=qs;var nd=34;P.doubleQuote=nd;var id=47;P.slash=id;var od=33;P.bang=od;var sd=92;P.backslash=sd;var ad=13;P.cr=ad;var ud=12;P.feed=ud;var ld=10;P.newline=ld;var fd=9;P.tab=fd;var cd=qs;P.str=cd;var dd=-1;P.comment=dd;var pd=-2;P.word=pd;var hd=-3;P.combinator=hd});var Us=I(Bt=>{\"use strict\";c();Bt.__esModule=!0;Bt.default=wd;Bt.FIELDS=void 0;var T=md(si()),it,j;function Bs(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return Bs=function(){return e},e}function md(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=Bs();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}var gd=(it={},it[T.tab]=!0,it[T.newline]=!0,it[T.cr]=!0,it[T.feed]=!0,it),vd=(j={},j[T.space]=!0,j[T.tab]=!0,j[T.newline]=!0,j[T.cr]=!0,j[T.feed]=!0,j[T.ampersand]=!0,j[T.asterisk]=!0,j[T.bang]=!0,j[T.comma]=!0,j[T.colon]=!0,j[T.semicolon]=!0,j[T.openParenthesis]=!0,j[T.closeParenthesis]=!0,j[T.openSquare]=!0,j[T.closeSquare]=!0,j[T.singleQuote]=!0,j[T.doubleQuote]=!0,j[T.plus]=!0,j[T.pipe]=!0,j[T.tilde]=!0,j[T.greaterThan]=!0,j[T.equals]=!0,j[T.dollar]=!0,j[T.caret]=!0,j[T.slash]=!0,j),ai={},Ws=\"0123456789abcdefABCDEF\";for(Ar=0;Ar<Ws.length;Ar++)ai[Ws.charCodeAt(Ar)]=!0;var Ar;function bd(e,t){var n=t,r;do{if(r=e.charCodeAt(n),vd[r])return n-1;r===T.backslash?n=yd(e,n)+1:n++}while(n<e.length);return n-1}function yd(e,t){var n=t,r=e.charCodeAt(n+1);if(!gd[r])if(ai[r]){var i=0;do n++,i++,r=e.charCodeAt(n+1);while(ai[r]&&i<6);i<6&&r===T.space&&n++}else n++;return n}var xd={TYPE:0,START_LINE:1,START_COL:2,END_LINE:3,END_COL:4,START_POS:5,END_POS:6};Bt.FIELDS=xd;function wd(e){var t=[],n=e.css.valueOf(),r=n,i=r.length,s=-1,o=1,a=0,u=0,f,l,p,y,h,d,m,b,g,_,O,A,L;function N(C,D){if(e.safe)n+=D,g=n.length-1;else throw e.error(\"Unclosed \"+C,o,a-s,a)}for(;a<i;){switch(f=n.charCodeAt(a),f===T.newline&&(s=a,o+=1),f){case T.space:case T.tab:case T.newline:case T.cr:case T.feed:g=a;do g+=1,f=n.charCodeAt(g),f===T.newline&&(s=g,o+=1);while(f===T.space||f===T.newline||f===T.tab||f===T.cr||f===T.feed);L=T.space,y=o,p=g-s-1,u=g;break;case T.plus:case T.greaterThan:case T.tilde:case T.pipe:g=a;do g+=1,f=n.charCodeAt(g);while(f===T.plus||f===T.greaterThan||f===T.tilde||f===T.pipe);L=T.combinator,y=o,p=a-s,u=g;break;case T.asterisk:case T.ampersand:case T.bang:case T.comma:case T.equals:case T.dollar:case T.caret:case T.openSquare:case T.closeSquare:case T.colon:case T.semicolon:case T.openParenthesis:case T.closeParenthesis:g=a,L=f,y=o,p=a-s,u=g+1;break;case T.singleQuote:case T.doubleQuote:A=f===T.singleQuote?\"'\":'\"',g=a;do for(h=!1,g=n.indexOf(A,g+1),g===-1&&N(\"quote\",A),d=g;n.charCodeAt(d-1)===T.backslash;)d-=1,h=!h;while(h);L=T.str,y=o,p=a-s,u=g+1;break;default:f===T.slash&&n.charCodeAt(a+1)===T.asterisk?(g=n.indexOf(\"*/\",a+2)+1,g===0&&N(\"comment\",\"*/\"),l=n.slice(a,g+1),b=l.split(`\n`),m=b.length-1,m>0?(_=o+m,O=g-b[m].length):(_=o,O=s),L=T.comment,o=_,y=_,p=g-O):f===T.slash?(g=a,L=f,y=o,p=a-s,u=g+1):(g=bd(n,a),L=T.word,y=o,p=g-s),u=g+1;break}t.push([L,o,a-s,y,p,a,u]),O&&(s=O,O=null),a=u}return t}});var Qs=I((Ut,Xs)=>{\"use strict\";c();Ut.__esModule=!0;Ut.default=void 0;var _d=ye(In()),ui=ye(Cn()),Sd=ye(Fn()),zs=ye($n()),kd=ye(Wn()),Td=ye(zn()),li=ye(Vn()),Od=ye(jn()),Gs=Rr(Zn()),Ed=ye(ti()),fi=ye(ni()),Pd=ye(oi()),Ad=ye($s()),S=Rr(Us()),E=Rr(si()),Rd=Rr(oe()),J=St(),Xe,ci;function Ys(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return Ys=function(){return e},e}function Rr(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=Ys();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function ye(e){return e&&e.__esModule?e:{default:e}}function Vs(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Id(e,t,n){return t&&Vs(e.prototype,t),n&&Vs(e,n),e}var hi=(Xe={},Xe[E.space]=!0,Xe[E.cr]=!0,Xe[E.feed]=!0,Xe[E.newline]=!0,Xe[E.tab]=!0,Xe),Ld=Object.assign({},hi,(ci={},ci[E.comment]=!0,ci));function Hs(e){return{line:e[S.FIELDS.START_LINE],column:e[S.FIELDS.START_COL]}}function js(e){return{line:e[S.FIELDS.END_LINE],column:e[S.FIELDS.END_COL]}}function Qe(e,t,n,r){return{start:{line:e,column:t},end:{line:n,column:r}}}function ot(e){return Qe(e[S.FIELDS.START_LINE],e[S.FIELDS.START_COL],e[S.FIELDS.END_LINE],e[S.FIELDS.END_COL])}function di(e,t){if(!!e)return Qe(e[S.FIELDS.START_LINE],e[S.FIELDS.START_COL],t[S.FIELDS.END_LINE],t[S.FIELDS.END_COL])}function st(e,t){var n=e[t];if(typeof n==\"string\")return n.indexOf(\"\\\\\")!==-1&&((0,J.ensureObject)(e,\"raws\"),e[t]=(0,J.unesc)(n),e.raws[t]===void 0&&(e.raws[t]=n)),e}function pi(e,t){for(var n=-1,r=[];(n=e.indexOf(t,n+1))!==-1;)r.push(n);return r}function Cd(){var e=Array.prototype.concat.apply([],arguments);return e.filter(function(t,n){return n===e.indexOf(t)})}var Dd=function(){function e(n,r){r===void 0&&(r={}),this.rule=n,this.options=Object.assign({lossy:!1,safe:!1},r),this.position=0,this.css=typeof this.rule==\"string\"?this.rule:this.rule.selector,this.tokens=(0,S.default)({css:this.css,error:this._errorGenerator(),safe:this.options.safe});var i=di(this.tokens[0],this.tokens[this.tokens.length-1]);this.root=new _d.default({source:i}),this.root.errorGenerator=this._errorGenerator();var s=new ui.default({source:{start:{line:1,column:1}}});this.root.append(s),this.current=s,this.loop()}var t=e.prototype;return t._errorGenerator=function(){var r=this;return function(i,s){return typeof r.rule==\"string\"?new Error(i):r.rule.error(i,s)}},t.attribute=function(){var r=[],i=this.currToken;for(this.position++;this.position<this.tokens.length&&this.currToken[S.FIELDS.TYPE]!==E.closeSquare;)r.push(this.currToken),this.position++;if(this.currToken[S.FIELDS.TYPE]!==E.closeSquare)return this.expected(\"closing square bracket\",this.currToken[S.FIELDS.START_POS]);var s=r.length,o={source:Qe(i[1],i[2],this.currToken[3],this.currToken[4]),sourceIndex:i[S.FIELDS.START_POS]};if(s===1&&!~[E.word].indexOf(r[0][S.FIELDS.TYPE]))return this.expected(\"attribute\",r[0][S.FIELDS.START_POS]);for(var a=0,u=\"\",f=\"\",l=null,p=!1;a<s;){var y=r[a],h=this.content(y),d=r[a+1];switch(y[S.FIELDS.TYPE]){case E.space:if(p=!0,this.options.lossy)break;if(l){(0,J.ensureObject)(o,\"spaces\",l);var m=o.spaces[l].after||\"\";o.spaces[l].after=m+h;var b=(0,J.getProp)(o,\"raws\",\"spaces\",l,\"after\")||null;b&&(o.raws.spaces[l].after=b+h)}else u=u+h,f=f+h;break;case E.asterisk:if(d[S.FIELDS.TYPE]===E.equals)o.operator=h,l=\"operator\";else if((!o.namespace||l===\"namespace\"&&!p)&&d){u&&((0,J.ensureObject)(o,\"spaces\",\"attribute\"),o.spaces.attribute.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"attribute\"),o.raws.spaces.attribute.before=u,f=\"\"),o.namespace=(o.namespace||\"\")+h;var g=(0,J.getProp)(o,\"raws\",\"namespace\")||null;g&&(o.raws.namespace+=h),l=\"namespace\"}p=!1;break;case E.dollar:if(l===\"value\"){var _=(0,J.getProp)(o,\"raws\",\"value\");o.value+=\"$\",_&&(o.raws.value=_+\"$\");break}case E.caret:d[S.FIELDS.TYPE]===E.equals&&(o.operator=h,l=\"operator\"),p=!1;break;case E.combinator:if(h===\"~\"&&d[S.FIELDS.TYPE]===E.equals&&(o.operator=h,l=\"operator\"),h!==\"|\"){p=!1;break}d[S.FIELDS.TYPE]===E.equals?(o.operator=h,l=\"operator\"):!o.namespace&&!o.attribute&&(o.namespace=!0),p=!1;break;case E.word:if(d&&this.content(d)===\"|\"&&r[a+2]&&r[a+2][S.FIELDS.TYPE]!==E.equals&&!o.operator&&!o.namespace)o.namespace=h,l=\"namespace\";else if(!o.attribute||l===\"attribute\"&&!p){u&&((0,J.ensureObject)(o,\"spaces\",\"attribute\"),o.spaces.attribute.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"attribute\"),o.raws.spaces.attribute.before=f,f=\"\"),o.attribute=(o.attribute||\"\")+h;var O=(0,J.getProp)(o,\"raws\",\"attribute\")||null;O&&(o.raws.attribute+=h),l=\"attribute\"}else if(!o.value&&o.value!==\"\"||l===\"value\"&&!p){var A=(0,J.unesc)(h),L=(0,J.getProp)(o,\"raws\",\"value\")||\"\",N=o.value||\"\";o.value=N+A,o.quoteMark=null,(A!==h||L)&&((0,J.ensureObject)(o,\"raws\"),o.raws.value=(L||N)+h),l=\"value\"}else{var C=h===\"i\"||h===\"I\";(o.value||o.value===\"\")&&(o.quoteMark||p)?(o.insensitive=C,(!C||h===\"I\")&&((0,J.ensureObject)(o,\"raws\"),o.raws.insensitiveFlag=h),l=\"insensitive\",u&&((0,J.ensureObject)(o,\"spaces\",\"insensitive\"),o.spaces.insensitive.before=u,u=\"\"),f&&((0,J.ensureObject)(o,\"raws\",\"spaces\",\"insensitive\"),o.raws.spaces.insensitive.before=f,f=\"\")):(o.value||o.value===\"\")&&(l=\"value\",o.value+=h,o.raws.value&&(o.raws.value+=h))}p=!1;break;case E.str:if(!o.attribute||!o.operator)return this.error(\"Expected an attribute followed by an operator preceding the string.\",{index:y[S.FIELDS.START_POS]});var D=(0,Gs.unescapeValue)(h),$=D.unescaped,z=D.quoteMark;o.value=$,o.quoteMark=z,l=\"value\",(0,J.ensureObject)(o,\"raws\"),o.raws.value=h,p=!1;break;case E.equals:if(!o.attribute)return this.expected(\"attribute\",y[S.FIELDS.START_POS],h);if(o.value)return this.error('Unexpected \"=\" found; an operator was already defined.',{index:y[S.FIELDS.START_POS]});o.operator=o.operator?o.operator+h:h,l=\"operator\",p=!1;break;case E.comment:if(l)if(p||d&&d[S.FIELDS.TYPE]===E.space||l===\"insensitive\"){var U=(0,J.getProp)(o,\"spaces\",l,\"after\")||\"\",M=(0,J.getProp)(o,\"raws\",\"spaces\",l,\"after\")||U;(0,J.ensureObject)(o,\"raws\",\"spaces\",l),o.raws.spaces[l].after=M+h}else{var q=o[l]||\"\",ee=(0,J.getProp)(o,\"raws\",l)||q;(0,J.ensureObject)(o,\"raws\"),o.raws[l]=ee+h}else f=f+h;break;default:return this.error('Unexpected \"'+h+'\" found.',{index:y[S.FIELDS.START_POS]})}a++}st(o,\"attribute\"),st(o,\"namespace\"),this.newNode(new Gs.default(o)),this.position++},t.parseWhitespaceEquivalentTokens=function(r){r<0&&(r=this.tokens.length);var i=this.position,s=[],o=\"\",a=void 0;do if(hi[this.currToken[S.FIELDS.TYPE]])this.options.lossy||(o+=this.content());else if(this.currToken[S.FIELDS.TYPE]===E.comment){var u={};o&&(u.before=o,o=\"\"),a=new zs.default({value:this.content(),source:ot(this.currToken),sourceIndex:this.currToken[S.FIELDS.START_POS],spaces:u}),s.push(a)}while(++this.position<r);if(o){if(a)a.spaces.after=o;else if(!this.options.lossy){var f=this.tokens[i],l=this.tokens[this.position-1];s.push(new li.default({value:\"\",source:Qe(f[S.FIELDS.START_LINE],f[S.FIELDS.START_COL],l[S.FIELDS.END_LINE],l[S.FIELDS.END_COL]),sourceIndex:f[S.FIELDS.START_POS],spaces:{before:o,after:\"\"}}))}}return s},t.convertWhitespaceNodesToSpace=function(r,i){var s=this;i===void 0&&(i=!1);var o=\"\",a=\"\";r.forEach(function(f){var l=s.lossySpace(f.spaces.before,i),p=s.lossySpace(f.rawSpaceBefore,i);o+=l+s.lossySpace(f.spaces.after,i&&l.length===0),a+=l+f.value+s.lossySpace(f.rawSpaceAfter,i&&p.length===0)}),a===o&&(a=void 0);var u={space:o,rawSpace:a};return u},t.isNamedCombinator=function(r){return r===void 0&&(r=this.position),this.tokens[r+0]&&this.tokens[r+0][S.FIELDS.TYPE]===E.slash&&this.tokens[r+1]&&this.tokens[r+1][S.FIELDS.TYPE]===E.word&&this.tokens[r+2]&&this.tokens[r+2][S.FIELDS.TYPE]===E.slash},t.namedCombinator=function(){if(this.isNamedCombinator()){var r=this.content(this.tokens[this.position+1]),i=(0,J.unesc)(r).toLowerCase(),s={};i!==r&&(s.value=\"/\"+r+\"/\");var o=new fi.default({value:\"/\"+i+\"/\",source:Qe(this.currToken[S.FIELDS.START_LINE],this.currToken[S.FIELDS.START_COL],this.tokens[this.position+2][S.FIELDS.END_LINE],this.tokens[this.position+2][S.FIELDS.END_COL]),sourceIndex:this.currToken[S.FIELDS.START_POS],raws:s});return this.position=this.position+3,o}else this.unexpected()},t.combinator=function(){var r=this;if(this.content()===\"|\")return this.namespace();var i=this.locateNextMeaningfulToken(this.position);if(i<0||this.tokens[i][S.FIELDS.TYPE]===E.comma){var s=this.parseWhitespaceEquivalentTokens(i);if(s.length>0){var o=this.current.last;if(o){var a=this.convertWhitespaceNodesToSpace(s),u=a.space,f=a.rawSpace;f!==void 0&&(o.rawSpaceAfter+=f),o.spaces.after+=u}else s.forEach(function(L){return r.newNode(L)})}return}var l=this.currToken,p=void 0;i>this.position&&(p=this.parseWhitespaceEquivalentTokens(i));var y;if(this.isNamedCombinator()?y=this.namedCombinator():this.currToken[S.FIELDS.TYPE]===E.combinator?(y=new fi.default({value:this.content(),source:ot(this.currToken),sourceIndex:this.currToken[S.FIELDS.START_POS]}),this.position++):hi[this.currToken[S.FIELDS.TYPE]]||p||this.unexpected(),y){if(p){var h=this.convertWhitespaceNodesToSpace(p),d=h.space,m=h.rawSpace;y.spaces.before=d,y.rawSpaceBefore=m}}else{var b=this.convertWhitespaceNodesToSpace(p,!0),g=b.space,_=b.rawSpace;_||(_=g);var O={},A={spaces:{}};g.endsWith(\" \")&&_.endsWith(\" \")?(O.before=g.slice(0,g.length-1),A.spaces.before=_.slice(0,_.length-1)):g.startsWith(\" \")&&_.startsWith(\" \")?(O.after=g.slice(1),A.spaces.after=_.slice(1)):A.value=_,y=new fi.default({value:\" \",source:di(l,this.tokens[this.position-1]),sourceIndex:l[S.FIELDS.START_POS],spaces:O,raws:A})}return this.currToken&&this.currToken[S.FIELDS.TYPE]===E.space&&(y.spaces.after=this.optionalSpace(this.content()),this.position++),this.newNode(y)},t.comma=function(){if(this.position===this.tokens.length-1){this.root.trailingComma=!0,this.position++;return}this.current._inferEndPosition();var r=new ui.default({source:{start:Hs(this.tokens[this.position+1])}});this.current.parent.append(r),this.current=r,this.position++},t.comment=function(){var r=this.currToken;this.newNode(new zs.default({value:this.content(),source:ot(r),sourceIndex:r[S.FIELDS.START_POS]})),this.position++},t.error=function(r,i){throw this.root.error(r,i)},t.missingBackslash=function(){return this.error(\"Expected a backslash preceding the semicolon.\",{index:this.currToken[S.FIELDS.START_POS]})},t.missingParenthesis=function(){return this.expected(\"opening parenthesis\",this.currToken[S.FIELDS.START_POS])},t.missingSquareBracket=function(){return this.expected(\"opening square bracket\",this.currToken[S.FIELDS.START_POS])},t.unexpected=function(){return this.error(\"Unexpected '\"+this.content()+\"'. Escaping special characters with \\\\ may help.\",this.currToken[S.FIELDS.START_POS])},t.namespace=function(){var r=this.prevToken&&this.content(this.prevToken)||!0;if(this.nextToken[S.FIELDS.TYPE]===E.word)return this.position++,this.word(r);if(this.nextToken[S.FIELDS.TYPE]===E.asterisk)return this.position++,this.universal(r)},t.nesting=function(){if(this.nextToken){var r=this.content(this.nextToken);if(r===\"|\"){this.position++;return}}var i=this.currToken;this.newNode(new Pd.default({value:this.content(),source:ot(i),sourceIndex:i[S.FIELDS.START_POS]})),this.position++},t.parentheses=function(){var r=this.current.last,i=1;if(this.position++,r&&r.type===Rd.PSEUDO){var s=new ui.default({source:{start:Hs(this.tokens[this.position-1])}}),o=this.current;for(r.append(s),this.current=s;this.position<this.tokens.length&&i;)this.currToken[S.FIELDS.TYPE]===E.openParenthesis&&i++,this.currToken[S.FIELDS.TYPE]===E.closeParenthesis&&i--,i?this.parse():(this.current.source.end=js(this.currToken),this.current.parent.source.end=js(this.currToken),this.position++);this.current=o}else{for(var a=this.currToken,u=\"(\",f;this.position<this.tokens.length&&i;)this.currToken[S.FIELDS.TYPE]===E.openParenthesis&&i++,this.currToken[S.FIELDS.TYPE]===E.closeParenthesis&&i--,f=this.currToken,u+=this.parseParenthesisToken(this.currToken),this.position++;r?r.appendToPropertyAndEscape(\"value\",u,u):this.newNode(new li.default({value:u,source:Qe(a[S.FIELDS.START_LINE],a[S.FIELDS.START_COL],f[S.FIELDS.END_LINE],f[S.FIELDS.END_COL]),sourceIndex:a[S.FIELDS.START_POS]}))}if(i)return this.expected(\"closing parenthesis\",this.currToken[S.FIELDS.START_POS])},t.pseudo=function(){for(var r=this,i=\"\",s=this.currToken;this.currToken&&this.currToken[S.FIELDS.TYPE]===E.colon;)i+=this.content(),this.position++;if(!this.currToken)return this.expected([\"pseudo-class\",\"pseudo-element\"],this.position-1);if(this.currToken[S.FIELDS.TYPE]===E.word)this.splitWord(!1,function(o,a){i+=o,r.newNode(new Od.default({value:i,source:di(s,r.currToken),sourceIndex:s[S.FIELDS.START_POS]})),a>1&&r.nextToken&&r.nextToken[S.FIELDS.TYPE]===E.openParenthesis&&r.error(\"Misplaced parenthesis.\",{index:r.nextToken[S.FIELDS.START_POS]})});else return this.expected([\"pseudo-class\",\"pseudo-element\"],this.currToken[S.FIELDS.START_POS])},t.space=function(){var r=this.content();this.position===0||this.prevToken[S.FIELDS.TYPE]===E.comma||this.prevToken[S.FIELDS.TYPE]===E.openParenthesis||this.current.nodes.every(function(i){return i.type===\"comment\"})?(this.spaces=this.optionalSpace(r),this.position++):this.position===this.tokens.length-1||this.nextToken[S.FIELDS.TYPE]===E.comma||this.nextToken[S.FIELDS.TYPE]===E.closeParenthesis?(this.current.last.spaces.after=this.optionalSpace(r),this.position++):this.combinator()},t.string=function(){var r=this.currToken;this.newNode(new li.default({value:this.content(),source:ot(r),sourceIndex:r[S.FIELDS.START_POS]})),this.position++},t.universal=function(r){var i=this.nextToken;if(i&&this.content(i)===\"|\")return this.position++,this.namespace();var s=this.currToken;this.newNode(new Ed.default({value:this.content(),source:ot(s),sourceIndex:s[S.FIELDS.START_POS]}),r),this.position++},t.splitWord=function(r,i){for(var s=this,o=this.nextToken,a=this.content();o&&~[E.dollar,E.caret,E.equals,E.word].indexOf(o[S.FIELDS.TYPE]);){this.position++;var u=this.content();if(a+=u,u.lastIndexOf(\"\\\\\")===u.length-1){var f=this.nextToken;f&&f[S.FIELDS.TYPE]===E.space&&(a+=this.requiredSpace(this.content(f)),this.position++)}o=this.nextToken}var l=pi(a,\".\").filter(function(d){var m=a[d-1]===\"\\\\\",b=/^\\d+\\.\\d+%$/.test(a);return!m&&!b}),p=pi(a,\"#\").filter(function(d){return a[d-1]!==\"\\\\\"}),y=pi(a,\"#{\");y.length&&(p=p.filter(function(d){return!~y.indexOf(d)}));var h=(0,Ad.default)(Cd([0].concat(l,p)));h.forEach(function(d,m){var b=h[m+1]||a.length,g=a.slice(d,b);if(m===0&&i)return i.call(s,g,h.length);var _,O=s.currToken,A=O[S.FIELDS.START_POS]+h[m],L=Qe(O[1],O[2]+d,O[3],O[2]+(b-1));if(~l.indexOf(d)){var N={value:g.slice(1),source:L,sourceIndex:A};_=new Sd.default(st(N,\"value\"))}else if(~p.indexOf(d)){var C={value:g.slice(1),source:L,sourceIndex:A};_=new kd.default(st(C,\"value\"))}else{var D={value:g,source:L,sourceIndex:A};st(D,\"value\"),_=new Td.default(D)}s.newNode(_,r),r=null}),this.position++},t.word=function(r){var i=this.nextToken;return i&&this.content(i)===\"|\"?(this.position++,this.namespace()):this.splitWord(r)},t.loop=function(){for(;this.position<this.tokens.length;)this.parse(!0);return this.current._inferEndPosition(),this.root},t.parse=function(r){switch(this.currToken[S.FIELDS.TYPE]){case E.space:this.space();break;case E.comment:this.comment();break;case E.openParenthesis:this.parentheses();break;case E.closeParenthesis:r&&this.missingParenthesis();break;case E.openSquare:this.attribute();break;case E.dollar:case E.caret:case E.equals:case E.word:this.word();break;case E.colon:this.pseudo();break;case E.comma:this.comma();break;case E.asterisk:this.universal();break;case E.ampersand:this.nesting();break;case E.slash:case E.combinator:this.combinator();break;case E.str:this.string();break;case E.closeSquare:this.missingSquareBracket();case E.semicolon:this.missingBackslash();default:this.unexpected()}},t.expected=function(r,i,s){if(Array.isArray(r)){var o=r.pop();r=r.join(\", \")+\" or \"+o}var a=/^[aeiou]/.test(r[0])?\"an\":\"a\";return s?this.error(\"Expected \"+a+\" \"+r+', found \"'+s+'\" instead.',{index:i}):this.error(\"Expected \"+a+\" \"+r+\".\",{index:i})},t.requiredSpace=function(r){return this.options.lossy?\" \":r},t.optionalSpace=function(r){return this.options.lossy?\"\":r},t.lossySpace=function(r,i){return this.options.lossy?i?\" \":\"\":r},t.parseParenthesisToken=function(r){var i=this.content(r);return r[S.FIELDS.TYPE]===E.space?this.requiredSpace(i):i},t.newNode=function(r,i){return i&&(/^ +$/.test(i)&&(this.options.lossy||(this.spaces=(this.spaces||\"\")+i),i=!0),r.namespace=i,st(r,\"namespace\")),this.spaces&&(r.spaces.before=this.spaces,this.spaces=\"\"),this.current.append(r)},t.content=function(r){return r===void 0&&(r=this.currToken),this.css.slice(r[S.FIELDS.START_POS],r[S.FIELDS.END_POS])},t.locateNextMeaningfulToken=function(r){r===void 0&&(r=this.position+1);for(var i=r;i<this.tokens.length;)if(Ld[this.tokens[i][S.FIELDS.TYPE]]){i++;continue}else return i;return-1},Id(e,[{key:\"currToken\",get:function(){return this.tokens[this.position]}},{key:\"nextToken\",get:function(){return this.tokens[this.position+1]}},{key:\"prevToken\",get:function(){return this.tokens[this.position-1]}}]),e}();Ut.default=Dd;Xs.exports=Ut.default});var Ks=I((zt,Js)=>{\"use strict\";c();zt.__esModule=!0;zt.default=void 0;var Md=Fd(Qs());function Fd(e){return e&&e.__esModule?e:{default:e}}var Nd=function(){function e(n,r){this.func=n||function(){},this.funcRes=null,this.options=r}var t=e.prototype;return t._shouldUpdateSelector=function(r,i){i===void 0&&(i={});var s=Object.assign({},this.options,i);return s.updateSelector===!1?!1:typeof r!=\"string\"},t._isLossy=function(r){r===void 0&&(r={});var i=Object.assign({},this.options,r);return i.lossless===!1},t._root=function(r,i){i===void 0&&(i={});var s=new Md.default(r,this._parseOptions(i));return s.root},t._parseOptions=function(r){return{lossy:this._isLossy(r)}},t._run=function(r,i){var s=this;return i===void 0&&(i={}),new Promise(function(o,a){try{var u=s._root(r,i);Promise.resolve(s.func(u)).then(function(f){var l=void 0;return s._shouldUpdateSelector(r,i)&&(l=u.toString(),r.selector=l),{transform:f,root:u,string:l}}).then(o,a)}catch(f){a(f);return}})},t._runSync=function(r,i){i===void 0&&(i={});var s=this._root(r,i),o=this.func(s);if(o&&typeof o.then==\"function\")throw new Error(\"Selector processor returned a promise to a synchronous call.\");var a=void 0;return i.updateSelector&&typeof r!=\"string\"&&(a=s.toString(),r.selector=a),{transform:o,root:s,string:a}},t.ast=function(r,i){return this._run(r,i).then(function(s){return s.root})},t.astSync=function(r,i){return this._runSync(r,i).root},t.transform=function(r,i){return this._run(r,i).then(function(s){return s.transform})},t.transformSync=function(r,i){return this._runSync(r,i).transform},t.process=function(r,i){return this._run(r,i).then(function(s){return s.string||s.root.toString()})},t.processSync=function(r,i){var s=this._runSync(r,i);return s.string||s.root.toString()},e}();zt.default=Nd;Js.exports=zt.default});var Zs=I(X=>{\"use strict\";c();X.__esModule=!0;X.universal=X.tag=X.string=X.selector=X.root=X.pseudo=X.nesting=X.id=X.comment=X.combinator=X.className=X.attribute=void 0;var $d=xe(Zn()),qd=xe(Fn()),Wd=xe(ni()),Bd=xe($n()),Ud=xe(Wn()),zd=xe(oi()),Gd=xe(jn()),Vd=xe(In()),Hd=xe(Cn()),jd=xe(Vn()),Yd=xe(zn()),Xd=xe(ti());function xe(e){return e&&e.__esModule?e:{default:e}}var Qd=function(t){return new $d.default(t)};X.attribute=Qd;var Jd=function(t){return new qd.default(t)};X.className=Jd;var Kd=function(t){return new Wd.default(t)};X.combinator=Kd;var Zd=function(t){return new Bd.default(t)};X.comment=Zd;var ep=function(t){return new Ud.default(t)};X.id=ep;var tp=function(t){return new zd.default(t)};X.nesting=tp;var rp=function(t){return new Gd.default(t)};X.pseudo=rp;var np=function(t){return new Vd.default(t)};X.root=np;var ip=function(t){return new Hd.default(t)};X.selector=ip;var op=function(t){return new jd.default(t)};X.string=op;var sp=function(t){return new Yd.default(t)};X.tag=sp;var ap=function(t){return new Xd.default(t)};X.universal=ap});var na=I(W=>{\"use strict\";c();W.__esModule=!0;W.isNode=mi;W.isPseudoElement=ra;W.isPseudoClass=bp;W.isContainer=yp;W.isNamespace=xp;W.isUniversal=W.isTag=W.isString=W.isSelector=W.isRoot=W.isPseudo=W.isNesting=W.isIdentifier=W.isComment=W.isCombinator=W.isClassName=W.isAttribute=void 0;var K=oe(),de,up=(de={},de[K.ATTRIBUTE]=!0,de[K.CLASS]=!0,de[K.COMBINATOR]=!0,de[K.COMMENT]=!0,de[K.ID]=!0,de[K.NESTING]=!0,de[K.PSEUDO]=!0,de[K.ROOT]=!0,de[K.SELECTOR]=!0,de[K.STRING]=!0,de[K.TAG]=!0,de[K.UNIVERSAL]=!0,de);function mi(e){return typeof e==\"object\"&&up[e.type]}function we(e,t){return mi(t)&&t.type===e}var ea=we.bind(null,K.ATTRIBUTE);W.isAttribute=ea;var lp=we.bind(null,K.CLASS);W.isClassName=lp;var fp=we.bind(null,K.COMBINATOR);W.isCombinator=fp;var cp=we.bind(null,K.COMMENT);W.isComment=cp;var dp=we.bind(null,K.ID);W.isIdentifier=dp;var pp=we.bind(null,K.NESTING);W.isNesting=pp;var gi=we.bind(null,K.PSEUDO);W.isPseudo=gi;var hp=we.bind(null,K.ROOT);W.isRoot=hp;var mp=we.bind(null,K.SELECTOR);W.isSelector=mp;var gp=we.bind(null,K.STRING);W.isString=gp;var ta=we.bind(null,K.TAG);W.isTag=ta;var vp=we.bind(null,K.UNIVERSAL);W.isUniversal=vp;function ra(e){return gi(e)&&e.value&&(e.value.startsWith(\"::\")||e.value.toLowerCase()===\":before\"||e.value.toLowerCase()===\":after\"||e.value.toLowerCase()===\":first-letter\"||e.value.toLowerCase()===\":first-line\")}function bp(e){return gi(e)&&!ra(e)}function yp(e){return!!(mi(e)&&e.walk)}function xp(e){return ea(e)||ta(e)}});var ia=I(Te=>{\"use strict\";c();Te.__esModule=!0;var vi=oe();Object.keys(vi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===vi[e]||(Te[e]=vi[e])});var bi=Zs();Object.keys(bi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===bi[e]||(Te[e]=bi[e])});var yi=na();Object.keys(yi).forEach(function(e){e===\"default\"||e===\"__esModule\"||e in Te&&Te[e]===yi[e]||(Te[e]=yi[e])})});var aa=I((Gt,sa)=>{\"use strict\";c();Gt.__esModule=!0;Gt.default=void 0;var wp=kp(Ks()),_p=Sp(ia());function oa(){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap;return oa=function(){return e},e}function Sp(e){if(e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var t=oa();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=r?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(n,i,s):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}function kp(e){return e&&e.__esModule?e:{default:e}}var xi=function(t){return new wp.default(t)};Object.assign(xi,_p);delete xi.__esModule;var Tp=xi;Gt.default=Tp;sa.exports=Gt.default});var ua=I(wi=>{\"use strict\";c();Object.defineProperty(wi,\"__esModule\",{value:!0});Object.defineProperty(wi,\"default\",{enumerable:!0,get:()=>Op});function Op(e){return e.replace(/\\\\,/g,\"\\\\2c \")}});var fa=I((bg,la)=>{\"use strict\";c();la.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}});var Si=I(_i=>{\"use strict\";c();Object.defineProperty(_i,\"__esModule\",{value:!0});function Ep(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Ep(_i,{parseColor:()=>Cp,formatColor:()=>Dp});var ca=Pp(fa());function Pp(e){return e&&e.__esModule?e:{default:e}}var Ap=/^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,Rp=/^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,Be=/(?:\\d+|\\d*\\.\\d+)%?/,Ir=/(?:\\s*,\\s*|\\s+)/,da=/\\s*[,/]\\s*/,Ue=/var\\(--(?:[^ )]*?)\\)/,Ip=new RegExp(`^(rgb)a?\\\\(\\\\s*(${Be.source}|${Ue.source})(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${da.source}(${Be.source}|${Ue.source}))?\\\\s*\\\\)$`),Lp=new RegExp(`^(hsl)a?\\\\(\\\\s*((?:${Be.source})(?:deg|rad|grad|turn)?|${Ue.source})(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${Ir.source}(${Be.source}|${Ue.source}))?(?:${da.source}(${Be.source}|${Ue.source}))?\\\\s*\\\\)$`);function Cp(e,{loose:t=!1}={}){var n,r;if(typeof e!=\"string\")return null;if(e=e.trim(),e===\"transparent\")return{mode:\"rgb\",color:[\"0\",\"0\",\"0\"],alpha:\"0\"};if(e in ca.default)return{mode:\"rgb\",color:ca.default[e].map(u=>u.toString())};let i=e.replace(Rp,(u,f,l,p,y)=>[\"#\",f,f,l,l,p,p,y?y+y:\"\"].join(\"\")).match(Ap);if(i!==null)return{mode:\"rgb\",color:[parseInt(i[1],16),parseInt(i[2],16),parseInt(i[3],16)].map(u=>u.toString()),alpha:i[4]?(parseInt(i[4],16)/255).toString():void 0};var s;let o=(s=e.match(Ip))!==null&&s!==void 0?s:e.match(Lp);if(o===null)return null;let a=[o[2],o[3],o[4]].filter(Boolean).map(u=>u.toString());return!t&&a.length!==3||a.length<3&&!a.some(u=>/^var\\(.*?\\)$/.test(u))?null:{mode:o[1],color:a,alpha:(n=o[5])===null||n===void 0||(r=n.toString)===null||r===void 0?void 0:r.call(n)}}function Dp({mode:e,color:t,alpha:n}){let r=n!==void 0;return`${e}(${t.join(\" \")}${r?` / ${n}`:\"\"})`}});var Ti=I(ki=>{\"use strict\";c();Object.defineProperty(ki,\"__esModule\",{value:!0});function Mp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Mp(ki,{withAlphaValue:()=>Fp,default:()=>Np});var Lr=Si();function Fp(e,t,n){if(typeof e==\"function\")return e({opacityValue:t});let r=(0,Lr.parseColor)(e,{loose:!0});return r===null?n:(0,Lr.formatColor)({...r,alpha:t})}function Np({color:e,property:t,variable:n}){let r=[].concat(t);if(typeof e==\"function\")return{[n]:\"1\",...Object.fromEntries(r.map(s=>[s,e({opacityVariable:n,opacityValue:`var(${n})`})]))};let i=(0,Lr.parseColor)(e);return i===null?Object.fromEntries(r.map(s=>[s,e])):i.alpha!==void 0?Object.fromEntries(r.map(s=>[s,e])):{[n]:\"1\",...Object.fromEntries(r.map(s=>[s,(0,Lr.formatColor)({...i,alpha:`var(${n})`})]))}}});var va=I(Oi=>{\"use strict\";c();Object.defineProperty(Oi,\"__esModule\",{value:!0});function $p(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}$p(Oi,{pattern:()=>Wp,withoutCapturing:()=>ha,any:()=>ma,optional:()=>Bp,zeroOrMore:()=>Up,nestedBrackets:()=>ga,escape:()=>Je});var pa=/[\\\\^$.*+?()[\\]{}|]/g,qp=RegExp(pa.source);function Vt(e){return e=Array.isArray(e)?e:[e],e=e.map(t=>t instanceof RegExp?t.source:t),e.join(\"\")}function Wp(e){return new RegExp(Vt(e),\"g\")}function ha(e){return new RegExp(`(?:${Vt(e)})`,\"g\")}function ma(e){return`(?:${e.map(Vt).join(\"|\")})`}function Bp(e){return`(?:${Vt(e)})?`}function Up(e){return`(?:${Vt(e)})*`}function ga(e,t,n=1){return ha([Je(e),/[^\\s]*/,n===1?`[^${Je(e)}${Je(t)}s]*`:ma([`[^${Je(e)}${Je(t)}s]*`,ga(e,t,n-1)]),/[^\\s]*/,Je(t)])}function Je(e){return e&&qp.test(e)?e.replace(pa,\"\\\\$&\"):e||\"\"}});var ya=I(Ei=>{\"use strict\";c();Object.defineProperty(Ei,\"__esModule\",{value:!0});Object.defineProperty(Ei,\"splitAtTopLevelOnly\",{enumerable:!0,get:()=>Vp});var zp=Gp(va());function ba(e){if(typeof WeakMap!=\"function\")return null;var t=new WeakMap,n=new WeakMap;return(ba=function(r){return r?n:t})(e)}function Gp(e,t){if(!t&&e&&e.__esModule)return e;if(e===null||typeof e!=\"object\"&&typeof e!=\"function\")return{default:e};var n=ba(t);if(n&&n.has(e))return n.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if(s!==\"default\"&&Object.prototype.hasOwnProperty.call(e,s)){var o=i?Object.getOwnPropertyDescriptor(e,s):null;o&&(o.get||o.set)?Object.defineProperty(r,s,o):r[s]=e[s]}return r.default=e,n&&n.set(e,r),r}function*Vp(e,t){let n=new RegExp(`[(){}\\\\[\\\\]${zp.escape(t)}]`,\"g\"),r=0,i=0,s=!1,o=0,a=0,u=t.length;for(let f of e.matchAll(n)){let l=f[0]===t[o],p=o===u-1,y=l&&p;f[0]===\"(\"&&r++,f[0]===\")\"&&r--,f[0]===\"[\"&&r++,f[0]===\"]\"&&r--,f[0]===\"{\"&&r++,f[0]===\"}\"&&r--,l&&r===0&&(a===0&&(a=f.index),o++),y&&r===0&&(s=!0,yield e.substring(i,a),i=a+u),o===u&&(o=0,a=0)}s?yield e.substring(i):yield e}});var wa=I(Pi=>{\"use strict\";c();Object.defineProperty(Pi,\"__esModule\",{value:!0});function Hp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Hp(Pi,{parseBoxShadowValue:()=>Qp,formatBoxShadowValue:()=>Jp});var jp=ya(),Yp=new Set([\"inset\",\"inherit\",\"initial\",\"revert\",\"unset\"]),Xp=/\\ +(?![^(]*\\))/g,xa=/^-?(\\d+|\\.\\d+)(.*?)$/g;function Qp(e){return Array.from((0,jp.splitAtTopLevelOnly)(e,\",\")).map(n=>{let r=n.trim(),i={raw:r},s=r.split(Xp),o=new Set;for(let a of s)xa.lastIndex=0,!o.has(\"KEYWORD\")&&Yp.has(a)?(i.keyword=a,o.add(\"KEYWORD\")):xa.test(a)?o.has(\"X\")?o.has(\"Y\")?o.has(\"BLUR\")?o.has(\"SPREAD\")||(i.spread=a,o.add(\"SPREAD\")):(i.blur=a,o.add(\"BLUR\")):(i.y=a,o.add(\"Y\")):(i.x=a,o.add(\"X\")):i.color?(i.unknown||(i.unknown=[]),i.unknown.push(a)):i.color=a;return i.valid=i.x!==void 0&&i.y!==void 0,i})}function Jp(e){return e.map(t=>t.valid?[t.keyword,t.x,t.y,t.blur,t.spread,t.color].filter(Boolean).join(\" \"):t.raw).join(\", \")}});var Pa=I(Ri=>{\"use strict\";c();Object.defineProperty(Ri,\"__esModule\",{value:!0});function Kp(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Kp(Ri,{normalize:()=>ze,url:()=>ka,number:()=>th,percentage:()=>Ta,length:()=>Oa,lineWidth:()=>ih,shadow:()=>oh,color:()=>sh,image:()=>ah,gradient:()=>Ea,position:()=>fh,familyName:()=>ch,genericName:()=>ph,absoluteSize:()=>mh,relativeSize:()=>vh});var Zp=Si(),eh=wa(),Ai=[\"min\",\"max\",\"clamp\",\"calc\"],Sa=/,(?![^(]*\\))/g,Cr=/_(?![^(]*\\))/g;function ze(e,t=!0){return e.includes(\"url(\")?e.split(/(url\\(.*?\\))/g).filter(Boolean).map(n=>/^url\\(.*?\\)$/.test(n)?n:ze(n,!1)).join(\"\"):(e=e.replace(/([^\\\\])_+/g,(n,r)=>r+\" \".repeat(n.length-1)).replace(/^_/g,\" \").replace(/\\\\_/g,\"_\"),t&&(e=e.trim()),e=e.replace(/(calc|min|max|clamp)\\(.+\\)/g,n=>n.replace(/(-?\\d*\\.?\\d(?!\\b-.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g,\"$1 $2 \")),e)}function ka(e){return e.startsWith(\"url(\")}function th(e){return!isNaN(Number(e))||Ai.some(t=>new RegExp(`^${t}\\\\(.+?`).test(e))}function Ta(e){return e.split(Cr).every(t=>/%$/g.test(t)||Ai.some(n=>new RegExp(`^${n}\\\\(.+?%`).test(t)))}var rh=[\"cm\",\"mm\",\"Q\",\"in\",\"pc\",\"pt\",\"px\",\"em\",\"ex\",\"ch\",\"rem\",\"lh\",\"vw\",\"vh\",\"vmin\",\"vmax\"],_a=`(?:${rh.join(\"|\")})`;function Oa(e){return e.split(Cr).every(t=>t===\"0\"||new RegExp(`${_a}$`).test(t)||Ai.some(n=>new RegExp(`^${n}\\\\(.+?${_a}`).test(t)))}var nh=new Set([\"thin\",\"medium\",\"thick\"]);function ih(e){return nh.has(e)}function oh(e){let t=(0,eh.parseBoxShadowValue)(ze(e));for(let n of t)if(!n.valid)return!1;return!0}function sh(e){let t=0;return e.split(Cr).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:(0,Zp.parseColor)(r,{loose:!0})!==null?(t++,!0):!1))?t>0:!1}function ah(e){let t=0;return e.split(Sa).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:ka(r)||Ea(r)||[\"element(\",\"image(\",\"cross-fade(\",\"image-set(\"].some(i=>r.startsWith(i))?(t++,!0):!1))?t>0:!1}var uh=new Set([\"linear-gradient\",\"radial-gradient\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"conic-gradient\"]);function Ea(e){e=ze(e);for(let t of uh)if(e.startsWith(`${t}(`))return!0;return!1}var lh=new Set([\"center\",\"top\",\"right\",\"bottom\",\"left\"]);function fh(e){let t=0;return e.split(Cr).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:lh.has(r)||Oa(r)||Ta(r)?(t++,!0):!1))?t>0:!1}function ch(e){let t=0;return e.split(Sa).every(r=>(r=ze(r),r.startsWith(\"var(\")?!0:r.includes(\" \")&&!/(['\"])([^\"']+)\\1/g.test(r)||/^\\d/g.test(r)?!1:(t++,!0)))?t>0:!1}var dh=new Set([\"serif\",\"sans-serif\",\"monospace\",\"cursive\",\"fantasy\",\"system-ui\",\"ui-serif\",\"ui-sans-serif\",\"ui-monospace\",\"ui-rounded\",\"math\",\"emoji\",\"fangsong\"]);function ph(e){return dh.has(e)}var hh=new Set([\"xx-small\",\"x-small\",\"small\",\"medium\",\"large\",\"x-large\",\"x-large\",\"xxx-large\"]);function mh(e){return hh.has(e)}var gh=new Set([\"larger\",\"smaller\"]);function vh(e){return gh.has(e)}});var Fa=I(Ci=>{\"use strict\";c();Object.defineProperty(Ci,\"__esModule\",{value:!0});function bh(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}bh(Ci,{updateAllClasses:()=>wh,asValue:()=>jt,parseColorFormat:()=>Ii,asColor:()=>Ca,asLookupValue:()=>Da,coerceValue:()=>Th});var yh=Li(aa()),xh=Li(ua()),Aa=Ti(),pe=Pa(),Ra=Li(vn());function Li(e){return e&&e.__esModule?e:{default:e}}function wh(e,t){return(0,yh.default)(i=>{i.walkClasses(s=>{let o=t(s.value);s.value=o,s.raws&&s.raws.value&&(s.raws.value=(0,xh.default)(s.raws.value))})}).processSync(e)}function La(e,t){if(!Ht(e))return;let n=e.slice(1,-1);if(!!t(n))return(0,pe.normalize)(n)}function _h(e,t={},n){let r=t[e];if(r!==void 0)return(0,Ra.default)(r);if(Ht(e)){let i=La(e,n);return i===void 0?void 0:(0,Ra.default)(i)}}function jt(e,t={},{validate:n=()=>!0}={}){var r;let i=(r=t.values)===null||r===void 0?void 0:r[e];return i!==void 0?i:t.supportsNegativeValues&&e.startsWith(\"-\")?_h(e.slice(1),t.values,n):La(e,n)}function Ht(e){return e.startsWith(\"[\")&&e.endsWith(\"]\")}function Sh(e){let t=e.lastIndexOf(\"/\");return t===-1||t===e.length-1?[e]:[e.slice(0,t),e.slice(t+1)]}function Ii(e){if(typeof e==\"string\"&&e.includes(\"<alpha-value>\")){let t=e;return({opacityValue:n=1})=>t.replace(\"<alpha-value>\",n)}return e}function Ca(e,t={},{tailwindConfig:n={}}={}){var r;if(((r=t.values)===null||r===void 0?void 0:r[e])!==void 0){var i;return Ii((i=t.values)===null||i===void 0?void 0:i[e])}let[s,o]=Sh(e);if(o!==void 0){var a,u,f,l;let p=(l=(a=t.values)===null||a===void 0?void 0:a[s])!==null&&l!==void 0?l:Ht(s)?s.slice(1,-1):void 0;return p===void 0?void 0:(p=Ii(p),Ht(o)?(0,Aa.withAlphaValue)(p,o.slice(1,-1)):((u=n.theme)===null||u===void 0||(f=u.opacity)===null||f===void 0?void 0:f[o])===void 0?void 0:(0,Aa.withAlphaValue)(p,n.theme.opacity[o]))}return jt(e,t,{validate:pe.color})}function Da(e,t={}){var n;return(n=t.values)===null||n===void 0?void 0:n[e]}function _e(e){return(t,n)=>jt(t,n,{validate:e})}var Ma={any:jt,color:Ca,url:_e(pe.url),image:_e(pe.image),length:_e(pe.length),percentage:_e(pe.percentage),position:_e(pe.position),lookup:Da,\"generic-name\":_e(pe.genericName),\"family-name\":_e(pe.familyName),number:_e(pe.number),\"line-width\":_e(pe.lineWidth),\"absolute-size\":_e(pe.absoluteSize),\"relative-size\":_e(pe.relativeSize),shadow:_e(pe.shadow)},Ia=Object.keys(Ma);function kh(e,t){let n=e.indexOf(t);return n===-1?[void 0,e]:[e.slice(0,n),e.slice(n+1)]}function Th(e,t,n,r){if(Ht(t)){let i=t.slice(1,-1),[s,o]=kh(i,\":\");if(!/^[\\w-_]+$/g.test(s))o=i;else if(s!==void 0&&!Ia.includes(s))return[];if(o.length>0&&Ia.includes(s))return[jt(`[${o}]`,n),s]}for(let i of[].concat(e)){let s=Ma[i](t,n,{tailwindConfig:r});if(s!==void 0)return[s,i]}return[]}});var Na=I(Di=>{\"use strict\";c();Object.defineProperty(Di,\"__esModule\",{value:!0});Object.defineProperty(Di,\"default\",{enumerable:!0,get:()=>Oh});function Oh(e){return typeof e==\"function\"?e({}):e}});var Ua=I(Fi=>{\"use strict\";c();Object.defineProperty(Fi,\"__esModule\",{value:!0});Object.defineProperty(Fi,\"default\",{enumerable:!0,get:()=>Hh});var Eh=Ke(vn()),Ph=Ke(Vo()),Ah=Ke(Ho()),Rh=Ke(xn()),Ih=Ke(Yo()),Wa=Xo(),$a=Qo(),Lh=Ko(),Ch=Ke(Zo()),Dh=es(),Mh=Fa(),Fh=Ti(),Nh=Ke(Na());function Ke(e){return e&&e.__esModule?e:{default:e}}function at(e){return typeof e==\"function\"}function Yt(e){return typeof e==\"object\"&&e!==null}function Xt(e,...t){let n=t.pop();for(let r of t)for(let i in r){let s=n(e[i],r[i]);s===void 0?Yt(e[i])&&Yt(r[i])?e[i]=Xt(e[i],r[i],n):e[i]=r[i]:e[i]=s}return e}var Mi={colors:Ih.default,negative(e){return Object.keys(e).filter(t=>e[t]!==\"0\").reduce((t,n)=>{let r=(0,Eh.default)(e[n]);return r!==void 0&&(t[`-${n}`]=r),t},{})},breakpoints(e){return Object.keys(e).filter(t=>typeof e[t]==\"string\").reduce((t,n)=>({...t,[`screen-${n}`]:e[n]}),{})}};function $h(e,...t){return at(e)?e(...t):e}function qh(e){return e.reduce((t,{extend:n})=>Xt(t,n,(r,i)=>r===void 0?[i]:Array.isArray(r)?[i,...r]:[i,r]),{})}function Wh(e){return{...e.reduce((t,n)=>(0,Wa.defaults)(t,n),{}),extend:qh(e)}}function qa(e,t){if(Array.isArray(e)&&Yt(e[0]))return e.concat(t);if(Array.isArray(t)&&Yt(t[0])&&Yt(e))return[e,...t];if(Array.isArray(t))return t}function Bh({extend:e,...t}){return Xt(t,e,(n,r)=>!at(n)&&!r.some(at)?Xt({},n,...r,qa):(i,s)=>Xt({},...[n,...r].map(o=>$h(o,i,s)),qa))}function*Uh(e){let t=(0,$a.toPath)(e);if(t.length===0||(yield t,Array.isArray(e)))return;let n=/^(.*?)\\s*\\/\\s*([^/]+)$/,r=e.match(n);if(r!==null){let[,i,s]=r,o=(0,$a.toPath)(i);o.alpha=s,yield o}}function zh(e){let t=(n,r)=>{for(let i of Uh(n)){let s=0,o=e;for(;o!=null&&s<i.length;)o=o[i[s++]],o=at(o)&&(i.alpha===void 0||s<=i.length-1)?o(t,Mi):o;if(o!==void 0){if(i.alpha!==void 0){let a=(0,Mh.parseColorFormat)(o);return(0,Fh.withAlphaValue)(a,i.alpha,(0,Nh.default)(a))}return(0,Ch.default)(o)?(0,Dh.cloneDeep)(o):o}}return r};return Object.assign(t,{theme:t,...Mi}),Object.keys(e).reduce((n,r)=>(n[r]=at(e[r])?e[r](t,Mi):e[r],n),{})}function Ba(e){let t=[];return e.forEach(n=>{t=[...t,n];var r;let i=(r=n==null?void 0:n.plugins)!==null&&r!==void 0?r:[];i.length!==0&&i.forEach(s=>{s.__isOptionsFunction&&(s=s());var o;t=[...t,...Ba([(o=s==null?void 0:s.config)!==null&&o!==void 0?o:{}])]})}),t}function Gh(e){return[...e].reduceRight((n,r)=>at(r)?r({corePlugins:n}):(0,Ah.default)(r,n),Ph.default)}function Vh(e){return[...e].reduceRight((n,r)=>[...n,...r],[])}function Hh(e){let t=[...Ba(e),{prefix:\"\",important:!1,separator:\":\",variantOrder:Rh.default.variantOrder}];var n,r;return(0,Lh.normalizeConfig)((0,Wa.defaults)({theme:zh(Bh(Wh(t.map(i=>(n=i==null?void 0:i.theme)!==null&&n!==void 0?n:{})))),corePlugins:Gh(t.map(i=>i.corePlugins)),plugins:Vh(e.map(i=>(r=i==null?void 0:i.plugins)!==null&&r!==void 0?r:[]))},...t))}});var za={};go(za,{default:()=>jh});var jh,Ga=Wr(()=>{c();jh={yellow:e=>e}});var Ya=I(Ni=>{\"use strict\";c();Object.defineProperty(Ni,\"__esModule\",{value:!0});function Yh(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Yh(Ni,{flagEnabled:()=>Jh,issueFlagNotices:()=>Kh,default:()=>Zh});var Xh=ja((Ga(),lr(za))),Qh=ja((br(),lr(vr)));function ja(e){return e&&e.__esModule?e:{default:e}}var Va={optimizeUniversalDefaults:!1},Qt={future:[\"hoverOnlyWhenSupported\",\"respectDefaultRingColorOpacity\"],experimental:[\"optimizeUniversalDefaults\",\"matchVariant\"]};function Jh(e,t){if(Qt.future.includes(t)){var n,r,i;return e.future===\"all\"||((i=(r=e==null||(n=e.future)===null||n===void 0?void 0:n[t])!==null&&r!==void 0?r:Va[t])!==null&&i!==void 0?i:!1)}if(Qt.experimental.includes(t)){var s,o,a;return e.experimental===\"all\"||((a=(o=e==null||(s=e.experimental)===null||s===void 0?void 0:s[t])!==null&&o!==void 0?o:Va[t])!==null&&a!==void 0?a:!1)}return!1}function Ha(e){if(e.experimental===\"all\")return Qt.experimental;var t;return Object.keys((t=e==null?void 0:e.experimental)!==null&&t!==void 0?t:{}).filter(n=>Qt.experimental.includes(n)&&e.experimental[n])}function Kh(e){if(process.env.JEST_WORKER_ID===void 0&&Ha(e).length>0){let t=Ha(e).map(n=>Xh.default.yellow(n)).join(\", \");Qh.default.warn(\"experimental-flags-enabled\",[`You have enabled experimental features: ${t}`,\"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"])}}var Zh=Qt});var Qa=I($i=>{\"use strict\";c();Object.defineProperty($i,\"__esModule\",{value:!0});Object.defineProperty($i,\"default\",{enumerable:!0,get:()=>Xa});var e0=r0(xn()),t0=Ya();function r0(e){return e&&e.__esModule?e:{default:e}}function Xa(e){var t;let n=((t=e==null?void 0:e.presets)!==null&&t!==void 0?t:[e0.default]).slice().reverse().flatMap(s=>Xa(typeof s==\"function\"?s():s)),r={respectDefaultRingColorOpacity:{theme:{ringColor:{DEFAULT:\"#3b82f67f\"}}}},i=Object.keys(r).filter(s=>(0,t0.flagEnabled)(e,s)).map(s=>r[s]);return[e,...i,...n]}});var Ka=I(qi=>{\"use strict\";c();Object.defineProperty(qi,\"__esModule\",{value:!0});Object.defineProperty(qi,\"default\",{enumerable:!0,get:()=>o0});var n0=Ja(Ua()),i0=Ja(Qa());function Ja(e){return e&&e.__esModule?e:{default:e}}function o0(...e){let[,...t]=(0,i0.default)(e[0]);return(0,n0.default)([...e,...t])}});var eu=I((Ig,Za)=>{c();var Wi=Ka();Za.exports=(Wi.__esModule?Wi:{default:Wi}).default});c();c();c();c();var bo={};var Br;Br=bo.default;function Du(e){Br=e}function Ie(){return Br}c();c();c();var dt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Mu=dt((e,t)=>{t.exports=[\"em\",\"ex\",\"ch\",\"rem\",\"vh\",\"vw\",\"vmin\",\"vmax\",\"px\",\"mm\",\"cm\",\"in\",\"pt\",\"pc\",\"mozmm\"]}),Fu=dt((e,t)=>{t.exports=[\"deg\",\"grad\",\"rad\",\"turn\"]}),Nu=dt((e,t)=>{t.exports=[\"dpi\",\"dpcm\",\"dppx\"]}),$u=dt((e,t)=>{t.exports=[\"Hz\",\"kHz\"]}),qu=dt((e,t)=>{t.exports=[\"s\",\"ms\"]}),Wu=Mu(),yo=Fu(),xo=Nu(),wo=$u(),_o=qu();function zr(e){if(/\\.\\D?$/.test(e))throw new Error(\"The dot should be followed by a number\");if(/^[+-]{2}/.test(e))throw new Error(\"Only one leading +/- is allowed\");if(Bu(e)>1)throw new Error(\"Only one dot is allowed\");if(/%$/.test(e)){this.type=\"percentage\",this.value=Ur(e),this.unit=\"%\";return}var t=zu(e);if(!t){this.type=\"number\",this.value=Ur(e);return}this.type=Vu(t),this.value=Ur(e.substr(0,e.length-t.length)),this.unit=t}zr.prototype.valueOf=function(){return this.value};zr.prototype.toString=function(){return this.value+(this.unit||\"\")};function We(e){return new zr(e)}function Bu(e){var t=e.match(/\\./g);return t?t.length:0}function Ur(e){var t=parseFloat(e);if(isNaN(t))throw new Error(\"Invalid number: \"+e);return t}var Uu=[].concat(yo,wo,Wu,xo,_o);function zu(e){var t=e.match(/\\D+$/),n=t&&t[0];if(n&&Uu.indexOf(n)===-1)throw new Error(\"Invalid unit: \"+n);return n}var Gu=Object.assign(fr(yo,\"angle\"),fr(wo,\"frequency\"),fr(xo,\"resolution\"),fr(_o,\"time\"));function fr(e,t){return Object.fromEntries(e.map(n=>[n,t]))}function Vu(e){return Gu[e]||\"length\"}function jr(e){let t=typeof e;return!(t===\"number\"||t===\"bigint\"||t===\"string\"||t===\"boolean\")}function ko(e){return/^class\\s/.test(e.toString())}function To(e){return\"dangerouslySetInnerHTML\"in e}function Oo(e){let t=typeof e>\"u\"?[]:[].concat(e).flat(1/0),n=[];for(let r=0;r<t.length;r++){let i=t[r];typeof i>\"u\"||typeof i==\"boolean\"||i===null||(typeof i==\"number\"&&(i=String(i)),typeof i==\"string\"&&n.length&&typeof n[n.length-1]==\"string\"?n[n.length-1]+=i:n.push(i))}return n}function ve(e,t,n,r,i=!1){if(typeof e==\"number\")return e;try{if(e=e.trim(),/[ /\\(,]/.test(e))return;if(e===String(+e))return+e;let s=new We(e);if(s.type===\"length\")switch(s.unit){case\"em\":return s.value*t;case\"rem\":return s.value*16;case\"vw\":return~~(s.value*r._viewportWidth/100);case\"vh\":return~~(s.value*r._viewportHeight/100);default:return s.value}else if(s.type===\"angle\")switch(s.unit){case\"deg\":return s.value;case\"rad\":return s.value*180/Math.PI;default:return s.value}else if(s.type===\"percentage\"&&i)return s.value/100*n}catch{}}function pt(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]}function ue(e,t,n,r){let i=t[e];if(typeof i>\"u\"){if(r&&typeof e<\"u\")throw new Error(`Invalid value for CSS property \"${r}\". Allowed values: ${Object.keys(t).map(s=>`\"${s}\"`).join(\" | \")}. Received: \"${e}\".`);i=n}return i}var So=void 0,Gr,Vr,cr=[32,160,4961,65792,65793,4153,4241,10].map(e=>String.fromCodePoint(e));function je(e,t){if(!Gr||!Vr){if(!(typeof Intl<\"u\"&&\"Segmenter\"in Intl))throw new Error(\"Intl.Segmenter does not exist, please use import a polyfill.\");Gr=new Intl.Segmenter(So,{granularity:\"word\"}),Vr=new Intl.Segmenter(So,{granularity:\"grapheme\"})}return t===\"word\"?[...Gr.segment(e)].map(n=>n.segment):[...Vr.segment(e)].map(n=>n.segment)}function R(e,t,n){let r=\"\";for(let[i,s]of Object.entries(t))typeof s<\"u\"&&(r+=` ${i}=\"${s}\"`);return n?`<${e}${r}>${n}</${e}>`:`<${e}${r}/>`}function Eo(e=20){let t=new Map;function n(i,s){if(t.size>=e){let o=t.keys().next().value;t.delete(o)}t.set(i,s)}function r(i){if(!t.has(i))return;let o=t.get(i);return t.delete(i),t.set(i,o),o}return{set:n,get:r}}var Po={accentHeight:\"accent-height\",alignmentBaseline:\"alignment-baseline\",arabicForm:\"arabic-form\",baselineShift:\"baseline-shift\",capHeight:\"cap-height\",clipPath:\"clip-path\",clipRule:\"clip-rule\",colorInterpolation:\"color-interpolation\",colorInterpolationFilters:\"color-interpolation-filters\",colorProfile:\"color-profile\",colorRendering:\"color-rendering\",dominantBaseline:\"dominant-baseline\",enableBackground:\"enable-background\",fillOpacity:\"fill-opacity\",fillRule:\"fill-rule\",floodColor:\"flood-color\",floodOpacity:\"flood-opacity\",fontFamily:\"font-family\",fontSize:\"font-size\",fontSizeAdjust:\"font-size-adjust\",fontStretch:\"font-stretch\",fontStyle:\"font-style\",fontVariant:\"font-variant\",fontWeight:\"font-weight\",glyphName:\"glyph-name\",glyphOrientationHorizontal:\"glyph-orientation-horizontal\",glyphOrientationVertical:\"glyph-orientation-vertical\",horizAdvX:\"horiz-adv-x\",horizOriginX:\"horiz-origin-x\",imageRendering:\"image-rendering\",letterSpacing:\"letter-spacing\",lightingColor:\"lighting-color\",markerEnd:\"marker-end\",markerMid:\"marker-mid\",markerStart:\"marker-start\",overlinePosition:\"overline-position\",overlineThickness:\"overline-thickness\",paintOrder:\"paint-order\",panose1:\"panose-1\",pointerEvents:\"pointer-events\",renderingIntent:\"rendering-intent\",shapeRendering:\"shape-rendering\",stopColor:\"stop-color\",stopOpacity:\"stop-opacity\",strikethroughPosition:\"strikethrough-position\",strikethroughThickness:\"strikethrough-thickness\",strokeDasharray:\"stroke-dasharray\",strokeDashoffset:\"stroke-dashoffset\",strokeLinecap:\"stroke-linecap\",strokeLinejoin:\"stroke-linejoin\",strokeMiterlimit:\"stroke-miterlimit\",strokeOpacity:\"stroke-opacity\",strokeWidth:\"stroke-width\",textAnchor:\"text-anchor\",textDecoration:\"text-decoration\",textRendering:\"text-rendering\",underlinePosition:\"underline-position\",underlineThickness:\"underline-thickness\",unicodeBidi:\"unicode-bidi\",unicodeRange:\"unicode-range\",unitsPerEm:\"units-per-em\",vAlphabetic:\"v-alphabetic\",vHanging:\"v-hanging\",vIdeographic:\"v-ideographic\",vMathematical:\"v-mathematical\",vectorEffect:\"vector-effect\",vertAdvY:\"vert-adv-y\",vertOriginX:\"vert-origin-x\",vertOriginY:\"vert-origin-y\",wordSpacing:\"word-spacing\",writingMode:\"writing-mode\",xHeight:\"x-height\",xlinkActuate:\"xlink:actuate\",xlinkArcrole:\"xlink:arcrole\",xlinkHref:\"xlink:href\",xlinkRole:\"xlink:role\",xlinkShow:\"xlink:show\",xlinkTitle:\"xlink:title\",xlinkType:\"xlink:type\",xmlBase:\"xml:base\",xmlLang:\"xml:lang\",xmlSpace:\"xml:space\",xmlnsXlink:\"xmlns:xlink\"},Hu=/[\\r\\n%#()<>?[\\\\\\]^`{|}\"']/g;function Hr(e){if(!e)return\"\";if(Array.isArray(e))return e.map(Hr).join(\"\");if(typeof e!=\"object\")return String(e);let t=e.type;if(t===\"text\")throw new Error(\"<text> nodes are not currently supported, please convert them to <path>\");let{children:n,...r}=e.props||{};return`<${t}${Object.entries(r).map(([i,s])=>` ${Po[i]||i}=\"${s}\"`).join(\"\")}>${Hr(n)}</${t}>`}function ht(e){return e.split(/[, ]/).filter(Boolean).map(Number)}function Ao(e){let{viewBox:t,viewbox:n,width:r,height:i,className:s,style:o,children:a,...u}=e.props||{};t||(t=n);let f=ht(t);return u.xmlns=\"http://www.w3.org/2000/svg\",u.viewBox=t,u.width=f[2],u.height=f[3],`data:image/svg+xml;utf8,${`<svg${Object.entries(u).map(([l,p])=>` ${Po[l]||l}=\"${p}\"`).join(\"\")}>${Hr(a)}</svg>`.replace(Hu,encodeURIComponent)}`}c();c();var be=\"flex\",Ro={p:{display:be,marginTop:\"1em\",marginBottom:\"1em\"},div:{display:be},blockquote:{display:be,marginTop:\"1em\",marginBottom:\"1em\",marginLeft:40,marginRight:40},center:{display:be,textAlign:\"center\"},hr:{display:be,marginTop:\"0.5em\",marginBottom:\"0.5em\",marginLeft:\"auto\",marginRight:\"auto\",borderWidth:1,borderStyle:\"solid\"},h1:{display:be,fontSize:\"2em\",marginTop:\"0.67em\",marginBottom:\"0.67em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h2:{display:be,fontSize:\"1.5em\",marginTop:\"0.83em\",marginBottom:\"0.83em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h3:{display:be,fontSize:\"1.17em\",marginTop:\"1em\",marginBottom:\"1em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h4:{display:be,marginTop:\"1.33em\",marginBottom:\"1.33em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h5:{display:be,fontSize:\"0.83em\",marginTop:\"1.67em\",marginBottom:\"1.67em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},h6:{display:be,fontSize:\"0.67em\",marginTop:\"2.33em\",marginBottom:\"2.33em\",marginLeft:0,marginRight:0,fontWeight:\"bold\"},u:{textDecoration:\"underline\"},strong:{fontWeight:\"bold\"},b:{fontWeight:\"bold\"},i:{fontStyle:\"italic\"},em:{fontStyle:\"italic\"},code:{fontFamily:\"monospace\"},kbd:{fontFamily:\"monospace\"},pre:{display:be,fontFamily:\"monospace\",whiteSpace:\"pre\",marginTop:\"1em\",marginBottom:\"1em\"},mark:{backgroundColor:\"yellow\",color:\"black\"},big:{fontSize:\"larger\"},small:{fontSize:\"smaller\"},s:{textDecoration:\"line-through\"}};c();var ju=new Set([\"color\",\"font\",\"fontFamily\",\"fontSize\",\"fontStyle\",\"fontWeight\",\"letterSpacing\",\"lineHeight\",\"textAlign\",\"textTransform\",\"textShadowOffset\",\"textShadowColor\",\"textShadowRadius\",\"textDecorationLine\",\"textDecorationStyle\",\"textDecorationColor\",\"whiteSpace\",\"transform\",\"wordBreak\",\"opacity\",\"filter\",\"_viewportWidth\",\"_viewportHeight\",\"_inheritedClipPathId\",\"_inheritedMaskId\",\"_inheritedBackgroundClipTextPath\"]);function Yr(e){let t={};for(let n in e)ju.has(n)&&(t[n]=e[n]);return t}c();c();function Xu(e,t){try{let n=new We(e);switch(n.unit){case\"px\":return{absolute:n.value};case\"em\":return{absolute:n.value*t};case\"rem\":return{absolute:n.value*16};case\"%\":return{relative:n.value};default:return{}}}catch{return{}}}function Xr(e,t,n){switch(e){case\"top\":return{yRelative:0};case\"left\":return{xRelative:0};case\"right\":return{xRelative:100};case\"bottom\":return{yRelative:100};case\"center\":return{};default:{let r=Xu(e,t);return r.absolute?{[n?\"xAbsolute\":\"yAbsolute\"]:r.absolute}:r.relative?{[n?\"xRelative\":\"yRelative\"]:r.relative}:{}}}}function Qr(e,t){if(typeof e==\"number\")return{xAbsolute:e};let n;try{n=lib(e).nodes.filter(r=>r.type===\"word\").map(r=>r.value)}catch{return{}}return n.length===1?Xr(n[0],t,!0):n.length===2?((n[0]===\"top\"||n[0]===\"bottom\"||n[1]===\"left\"||n[1]===\"right\")&&n.reverse(),{...Xr(n[0],t,!0),...Xr(n[1],t,!1)}):{}}var Zu=new Set([\"flex\",\"flexGrow\",\"flexShrink\",\"flexBasis\",\"fontWeight\",\"lineHeight\",\"opacity\",\"scale\",\"scaleX\",\"scaleY\"]),el=new Set([\"lineHeight\"]);function tl(e,t,n,r){return e===\"textDecoration\"&&!n.includes(t.textDecorationColor)&&(t.textDecorationColor=r),t}function mt(e,t){return typeof t==\"number\"?Zu.has(e)?el.has(e)?t:String(t):t+\"px\":t}function rl(e,t,n){if(e===\"lineHeight\")return{lineHeight:mt(e,t)};if(e===\"fontFamily\")return{fontFamily:t.split(\",\").map(r=>r.trim().replace(/(^['\"])|(['\"]$)/g,\"\").toLocaleLowerCase())};if(e===\"borderRadius\"){if(typeof t!=\"string\"||!t.includes(\"/\"))return;let[r,i]=t.split(\"/\"),s=(0,css_to_react_native/* getStylesForProperty */.HM)(e,r,!0),o=(0,css_to_react_native/* getStylesForProperty */.HM)(e,i,!0);for(let a in s)o[a]=mt(e,s[a])+\" \"+mt(e,o[a]);return o}if(/^border(Top|Right|Bottom|Left)?$/.test(e)){let r=(0,css_to_react_native/* getStylesForProperty */.HM)(\"border\",t,!0);r.borderWidth===1&&!String(t).includes(\"1px\")&&(r.borderWidth=3),r.borderColor===\"black\"&&!String(t).includes(\"black\")&&(r.borderColor=n);let i={Width:mt(e+\"Width\",r.borderWidth),Style:ue(r.borderStyle,{solid:\"solid\",dashed:\"dashed\"},\"solid\",e+\"Style\"),Color:r.borderColor},s={};for(let o of e===\"border\"?[\"Top\",\"Right\",\"Bottom\",\"Left\"]:[e.slice(6)])for(let a in i)s[\"border\"+o+a]=i[a];return s}if(e===\"boxShadow\"){if(!t)throw new Error('Invalid `boxShadow` value: \"'+t+'\".');return{[e]:typeof t==\"string\"?(0,css_box_shadow.parse)(t):t}}if(e===\"transform\"){if(typeof t!=\"string\")throw new Error(\"Invalid `transform` value.\");let r={},i=t.replace(/(-?[\\d.]+%)/g,(o,a)=>{let u=~~(Math.random()*1e9);return r[u]=a,u+\"px\"}),s=(0,css_to_react_native/* getStylesForProperty */.HM)(\"transform\",i,!0);for(let o of s.transform)for(let a in o)r[o[a]]&&(o[a]=r[o[a]]);return s}if(e===\"background\")return t=t.toString().trim(),/^(linear-gradient|radial-gradient|url)\\(/.test(t)?(0,css_to_react_native/* getStylesForProperty */.HM)(\"backgroundImage\",t,!0):(0,css_to_react_native/* getStylesForProperty */.HM)(\"background\",t,!0)}function Io(e){return e===\"transform\"?\" Only absolute lengths such as `10px` are supported.\":\"\"}var Lo=/rgb\\((\\d+)\\s+(\\d+)\\s+(\\d+)\\s*\\/\\s*([\\.\\d]+)\\)/;function Co(e){if(typeof e==\"string\"&&Lo.test(e.trim()))return e.trim().replace(Lo,(t,n,r,i,s)=>`rgba(${n}, ${r}, ${i}, ${s})`);if(typeof e==\"object\"&&e!==null){for(let t in e)e[t]=Co(e[t]);return e}return e}function dr(e,t){var i;let n={};for(let s in e){if(s.startsWith(\"_\")){n[s]=e[s];continue}let o=(0,css_to_react_native/* getPropertyName */.Hp)(s),a=e.color||t.color;try{let u=rl(o,e[s],a)||tl(o,(0,css_to_react_native/* getStylesForProperty */.HM)(o,mt(o,e[s]),!0),e[s],a);Object.assign(n,u)}catch(u){throw new Error(u.message+(u.message.includes(e[s])?`\n  `+Io(o):`\n  in CSS rule \\`${o}: ${e[s]}\\`.${Io(o)}`))}}if(n.backgroundImage){let{backgrounds:s}=(0,css_background_parser.parseElementStyle)(n);n.backgroundImage=s}let r=typeof n.fontSize==\"number\"?n.fontSize:t.fontSize;if(typeof r==\"string\")try{let s=new We(r);switch(s.unit){case\"em\":r=s.value*t.fontSize;break;case\"rem\":r=s.value*16;break}}catch{r=16}typeof n.fontSize<\"u\"&&(n.fontSize=r),n.transformOrigin&&(n.transformOrigin=Qr(n.transformOrigin,r));for(let s in n){let o=n[s];if(s===\"lineHeight\")typeof o==\"string\"&&(o=n[s]=ve(o,r,r,t,!0)/r);else{if(typeof o==\"string\"){let a=ve(o,r,r,t);typeof a<\"u\"&&(n[s]=a),o=n[s]}if(typeof o==\"string\"||typeof o==\"object\"){let a=Co(o);a&&(n[s]=a),o=n[s]}}if(s===\"opacity\"&&(o=n[s]=o*t.opacity),s===\"transform\"){let a=o;for(let u of a){let f=Object.keys(u)[0],l=u[f],p=typeof l==\"string\"&&(i=ve(l,r,r,t))!=null?i:l;u[f]=p}}}return n}c();var nl=\"image/avif\",il=\"image/webp\",Zr=\"image/png\",en=\"image/jpeg\",tn=\"image/gif\",Do=\"image/svg+xml\";function ol(e){let t=new DataView(e),n=4,r=t.byteLength;for(;n<r;){let i=t.getUint16(n,!1);if(i>r)throw new TypeError(\"Invalid JPEG\");let s=t.getUint8(i+1+n);if(s===192||s===193||s===194)return[t.getUint16(i+7+n,!1),t.getUint16(i+5+n,!1)];n+=i+2}throw new TypeError(\"Invalid JPEG\")}function sl(e){let t=new Uint8Array(e.slice(6,10));return[t[0]|t[1]<<8,t[2]|t[3]<<8]}function al(e){let t=new DataView(e);return[t.getUint16(18,!1),t.getUint16(22,!1)]}var Jr=Eo(100),Kr=new Map,ul=[Zr,en,tn,Do];function ll(e){let t=\"\",n=new Uint8Array(e);for(let r=0;r<n.byteLength;r++)t+=String.fromCharCode(n[r]);return btoa(t)}async function pr(e){if(!e)throw new Error(\"Image source is not provided.\");if(/\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/.test(e)&&(e=e.slice(1,-1)),e.startsWith(\"data:\"))return[e];if(!globalThis.fetch)throw new Error(\"`fetch` is required to be polyfilled to load images.\");if(Kr.has(e))return Kr.get(e);let t=Jr.get(e);if(t)return t;let n=new Promise((r,i)=>{fetch(e).then(s=>{let o=s.headers.get(\"content-type\");return o===\"image/svg+xml\"||o===\"application/svg+xml\"?s.text():s.arrayBuffer()}).then(s=>{if(typeof s==\"string\")try{let f=`data:image/svg+xml;base64,${btoa(s)}`,l=s.match(/<svg[^>]*>/)[0],p=l.match(/viewBox=['\"](.+)['\"]/),y=p?ht(p[1]):null,h=l.match(/width=\"(\\d*\\.\\d+|\\d+)\"/),d=l.match(/height=\"(\\d*\\.\\d+|\\d+)\"/);if(!y&&(!h||!d))throw new Error(`Failed to parse SVG from ${e}: missing \"viewBox\"`);let m=y?[y[2],y[3]]:[+h[1],+d[1]],b=m[0]/m[1],g=h&&d?[+h[1],+d[1]]:h?[+h[1],+h[1]/b]:d?[+d[1]*b,+d[1]]:[m[0],m[1]];Jr.set(e,[f,...g]),r([f,...g]);return}catch(f){throw new Error(`Failed to parse SVG image: ${f.message}`)}let o,a=index_wasm_fl(new Uint8Array(s));switch(a){case Zr:o=al(s);break;case tn:o=sl(s);break;case en:o=ol(s);break}if(!ul.includes(a))throw new Error(`Unsupported image type: ${a||\"unknown\"}`);let u=`data:${a};base64,${ll(s)}`;Jr.set(e,[u,...o]),r([u,...o])}).catch(s=>{i(new Error(`Can't load image ${e}: `+s.message))})});return Kr.set(e,n),n}function index_wasm_fl(e){return[255,216,255].every((t,n)=>e[n]===t)?en:[137,80,78,71,13,10,26,10].every((t,n)=>e[n]===t)?Zr:[71,73,70,56].every((t,n)=>e[n]===t)?tn:[82,73,70,70,0,0,0,0,87,69,66,80].every((t,n)=>!t||e[n]===t)?il:[60,63,120,109,108].every((t,n)=>e[n]===t)?Do:[0,0,0,0,102,116,121,112,97,118,105,102].every((t,n)=>!t||e[n]===t)?nl:null}async function rn(e,t,n,r,i){let s=Ie(),o={...n,...dr(Ro[t],n),...dr(r,n)};if(t===\"img\"){let[a,u,f]=await pr(i.src);if(u===void 0&&f===void 0){if(i.width===void 0||i.height===void 0)throw new Error(\"Image size cannot be determined. Please provide the width and height of the image.\");u=parseInt(i.width),f=parseInt(i.height)}let l=f/u,p=(o.borderLeftWidth||0)+(o.borderRightWidth||0)+(o.paddingLeft||0)+(o.paddingRight||0),y=(o.borderTopWidth||0)+(o.borderBottomWidth||0)+(o.paddingTop||0)+(o.paddingBottom||0),h=o.width||i.width,d=o.height||i.height,m=typeof h!=\"string\"&&typeof d!=\"string\";typeof h==\"number\"&&m&&(h-=p),typeof d==\"number\"&&m&&(d-=y),h===void 0&&d===void 0?(h=u,d=f):h===void 0?typeof d==\"number\"?h=d/l:e.setAspectRatio(1/l):d===void 0&&(typeof h==\"number\"?d=h*l:e.setAspectRatio(1/l)),o.width=m?h+p:h,o.height=m?d+y:d,o.__src=a}if(t===\"svg\"){let a=i.viewBox||i.viewbox,u=ht(a),f=u[3]/u[2],{width:l,height:p}=i;typeof l>\"u\"&&p?typeof p==\"string\"&&p.endsWith(\"%\")?l=parseInt(p)/f+\"%\":(p=ve(p,n.fontSize,1,n),l=p/f):typeof p>\"u\"&&l?typeof l==\"string\"&&l.endsWith(\"%\")?p=parseInt(l)*f+\"%\":(l=ve(l,n.fontSize,1,n),p=l*f):(typeof l<\"u\"&&(l=ve(l,n.fontSize,1,n)||l),typeof p<\"u\"&&(p=ve(p,n.fontSize,1,n)||p),l||(l=u[2]),p||(p=u[3])),o.width||(o.width=l),o.height||(o.height=p)}return e.setDisplay(ue(o.display,{flex:s.DISPLAY_FLEX,none:s.DISPLAY_NONE},s.DISPLAY_FLEX,\"display\")),e.setAlignContent(ue(o.alignContent,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,\"space-between\":s.ALIGN_SPACE_BETWEEN,\"space-around\":s.ALIGN_SPACE_AROUND,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_AUTO,\"alignContent\")),e.setAlignItems(ue(o.alignItems,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_FLEX_START,\"alignItems\")),e.setAlignSelf(ue(o.alignSelf,{stretch:s.ALIGN_STRETCH,center:s.ALIGN_CENTER,\"flex-start\":s.ALIGN_FLEX_START,\"flex-end\":s.ALIGN_FLEX_END,baseline:s.ALIGN_BASELINE,normal:s.ALIGN_AUTO},s.ALIGN_AUTO,\"alignSelf\")),e.setJustifyContent(ue(o.justifyContent,{center:s.JUSTIFY_CENTER,\"flex-start\":s.JUSTIFY_FLEX_START,\"flex-end\":s.JUSTIFY_FLEX_END,\"space-between\":s.JUSTIFY_SPACE_BETWEEN,\"space-around\":s.JUSTIFY_SPACE_AROUND},s.JUSTIFY_FLEX_START,\"justifyContent\")),e.setFlexDirection(ue(o.flexDirection,{row:s.FLEX_DIRECTION_ROW,column:s.FLEX_DIRECTION_COLUMN,\"row-reverse\":s.FLEX_DIRECTION_ROW_REVERSE,\"column-reverse\":s.FLEX_DIRECTION_COLUMN_REVERSE},s.FLEX_DIRECTION_ROW,\"flexDirection\")),e.setFlexWrap(ue(o.flexWrap,{wrap:s.WRAP_WRAP,nowrap:s.WRAP_NO_WRAP,\"wrap-reverse\":s.WRAP_WRAP_REVERSE},s.WRAP_NO_WRAP,\"flexWrap\")),typeof o.flexBasis<\"u\"&&e.setFlexBasis(o.flexBasis),e.setFlexGrow(typeof o.flexGrow>\"u\"?0:o.flexGrow),e.setFlexShrink(typeof o.flexShrink>\"u\"?0:o.flexShrink),typeof o.maxHeight<\"u\"&&e.setMaxHeight(o.maxHeight),typeof o.maxWidth<\"u\"&&e.setMaxWidth(o.maxWidth),typeof o.minHeight<\"u\"&&e.setMinHeight(o.minHeight),typeof o.minWidth<\"u\"&&e.setMinWidth(o.minWidth),e.setOverflow(ue(o.overflow,{visible:s.OVERFLOW_VISIBLE,hidden:s.OVERFLOW_HIDDEN},s.OVERFLOW_VISIBLE,\"overflow\")),e.setMargin(s.EDGE_TOP,o.marginTop||0),e.setMargin(s.EDGE_BOTTOM,o.marginBottom||0),e.setMargin(s.EDGE_LEFT,o.marginLeft||0),e.setMargin(s.EDGE_RIGHT,o.marginRight||0),e.setBorder(s.EDGE_TOP,o.borderTopWidth||0),e.setBorder(s.EDGE_BOTTOM,o.borderBottomWidth||0),e.setBorder(s.EDGE_LEFT,o.borderLeftWidth||0),e.setBorder(s.EDGE_RIGHT,o.borderRightWidth||0),e.setPadding(s.EDGE_TOP,o.paddingTop||0),e.setPadding(s.EDGE_BOTTOM,o.paddingBottom||0),e.setPadding(s.EDGE_LEFT,o.paddingLeft||0),e.setPadding(s.EDGE_RIGHT,o.paddingRight||0),e.setPositionType(ue(o.position,{absolute:s.POSITION_TYPE_ABSOLUTE,relative:s.POSITION_TYPE_RELATIVE},s.POSITION_TYPE_RELATIVE,\"position\")),typeof o.top<\"u\"&&e.setPosition(s.EDGE_TOP,o.top),typeof o.bottom<\"u\"&&e.setPosition(s.EDGE_BOTTOM,o.bottom),typeof o.left<\"u\"&&e.setPosition(s.EDGE_LEFT,o.left),typeof o.right<\"u\"&&e.setPosition(s.EDGE_RIGHT,o.right),typeof o.height<\"u\"?e.setHeight(o.height):e.setHeightAuto(),typeof o.width<\"u\"?e.setWidth(o.width):e.setWidthAuto(),[o,Yr(o)]}c();c();c();var Mo=[1,0,0,1,0,0];function cl(e,t,n){let r=[...Mo];for(let i of e){let s=Object.keys(i)[0],o=i[s];if(typeof o==\"string\")if(s===\"translateX\")o=parseFloat(o)/100*t,i[s]=o;else if(s===\"translateY\")o=parseFloat(o)/100*n,i[s]=o;else throw new Error(`Invalid transform: \"${s}: ${o}\".`);let a=o,u=[...Mo];switch(s){case\"translateX\":u[4]=a;break;case\"translateY\":u[5]=a;break;case\"scale\":u[0]=a,u[3]=a;break;case\"scaleX\":u[0]=a;break;case\"scaleY\":u[3]=a;break;case\"rotate\":{let f=a*Math.PI/180,l=Math.cos(f),p=Math.sin(f);u[0]=l,u[1]=p,u[2]=-p,u[3]=l;break}case\"skewX\":u[2]=Math.tan(a*Math.PI/180);break;case\"skewY\":u[1]=Math.tan(a*Math.PI/180);break}r=pt(u,r)}e.splice(0,e.length),e.push(...r),e.__resolved=!0}function gt({left:e,top:t,width:n,height:r},i,s,o){var f,l,p,y;let a;i.__resolved||cl(i,n,r);let u=i;if(s)a=u;else{let h=(l=o==null?void 0:o.xAbsolute)!=null?l:((f=o==null?void 0:o.xRelative)!=null?f:50)*n/100,d=(y=o==null?void 0:o.yAbsolute)!=null?y:((p=o==null?void 0:o.yRelative)!=null?p:50)*r/100,m=e+h,b=t+d;a=pt([1,0,0,1,m,b],pt(u,[1,0,0,1,-m,-b])),u.__parent&&(a=pt(u.__parent,a)),u.splice(0,6,...a)}return`matrix(${a.map(h=>h.toFixed(2)).join(\",\")})`}function Fo({left:e,top:t,width:n,height:r,isInheritingTransform:i},s){let o=\"\",a=1;return s.transform&&(o=gt({left:e,top:t,width:n,height:r},s.transform,i,s.transformOrigin)),s.opacity!==void 0&&(a=+s.opacity),{matrix:o,opacity:a}}function nn({id:e,content:t,filter:n,left:r,top:i,width:s,height:o,matrix:a,opacity:u,image:f,clipPathId:l,debug:p,shape:y,decorationShape:h},d){let m=\"\";if(p&&(m=R(\"rect\",{x:r,y:i-o,width:s,height:o,fill:\"transparent\",stroke:\"#575eff\",\"stroke-width\":1,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0})),f){let g={href:f,x:r,y:i,width:s,height:o,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0,style:d.filter?`filter:${d.filter}`:void 0};return[(n?`${n}<g filter=\"url(#satori_s-${e})\">`:\"\")+R(\"image\",{...g,opacity:u!==1?u:void 0})+(h||\"\")+(n?\"</g>\":\"\")+m,\"\"]}let b={x:r,y:i,width:s,height:o,\"font-weight\":d.fontWeight,\"font-style\":d.fontStyle,\"font-size\":d.fontSize,\"font-family\":d.fontFamily,\"letter-spacing\":d.letterSpacing||void 0,transform:a||void 0,\"clip-path\":l?`url(#${l})`:void 0,style:d.filter?`filter:${d.filter}`:void 0};return[(n?`${n}<g filter=\"url(#satori_s-${e})\">`:\"\")+R(\"text\",{...b,fill:d.color,opacity:u!==1?u:void 0},t)+(h||\"\")+(n?\"</g>\":\"\")+m,y?R(\"text\",b,t):\"\"]}c();function dl(e,t,n){return e.replace(/([MA])([0-9.-]+),([0-9.-]+)/g,function(r,i,s,o){return i+(parseFloat(s)+t)+\",\"+(parseFloat(o)+n)})}function No({id:e,width:t,height:n},r){if(!r.shadowColor||!r.shadowOffset||typeof r.shadowRadius>\"u\")return\"\";let i=r.shadowRadius*r.shadowRadius/4,s=Math.min(r.shadowOffset.width-i,0),o=Math.max(r.shadowOffset.width+i+t,t),a=Math.min(r.shadowOffset.height-i,0),u=Math.max(r.shadowOffset.height+i+n,n);return`<defs><filter id=\"satori_s-${e}\" x=\"${s/t*100}%\" y=\"${a/n*100}%\" width=\"${(o-s)/t*100}%\" height=\"${(u-a)/n*100}%\"><feDropShadow dx=\"${r.shadowOffset.width}\" dy=\"${r.shadowOffset.height}\" stdDeviation=\"${r.shadowRadius/2}\" flood-color=\"${r.shadowColor}\" flood-opacity=\"1\"/></filter></defs>`}function $o({width:e,height:t,shape:n,opacity:r,id:i},s){if(!s.boxShadow)return null;let o=\"\",a=\"\";for(let u=s.boxShadow.length-1;u>=0;u--){let f=\"\",l=s.boxShadow[u];l.spreadRadius&&l.inset&&(l.spreadRadius=-l.spreadRadius);let p=l.blurRadius*l.blurRadius/4+(l.spreadRadius||0),y=Math.min(-p-(l.inset?l.offsetX:0),0),h=Math.max(p+e-(l.inset?l.offsetX:0),e),d=Math.min(-p-(l.inset?l.offsetY:0),0),m=Math.max(p+t-(l.inset?l.offsetY:0),t),b=`satori_s-${i}-${u}`,g=`satori_ms-${i}-${u}`,_=l.spreadRadius?n.replace('stroke-width=\"0\"',`stroke-width=\"${l.spreadRadius*2}\"`):n;f+=R(\"mask\",{id:g,maskUnits:\"userSpaceOnUse\"},R(\"rect\",{x:0,y:0,width:s._viewportWidth,height:s._viewportHeight,fill:l.inset?\"#000\":\"#fff\"})+_.replace('fill=\"#fff\"',l.inset?'fill=\"#fff\"':'fill=\"#000\"').replace('stroke=\"#fff\"',\"\"));let O=_.replace(/d=\"([^\"]+)\"/,(A,L)=>'d=\"'+dl(L,l.offsetX,l.offsetY)+'\"').replace(/x=\"([^\"]+)\"/,(A,L)=>'x=\"'+(parseFloat(L)+l.offsetX)+'\"').replace(/y=\"([^\"]+)\"/,(A,L)=>'y=\"'+(parseFloat(L)+l.offsetY)+'\"');l.spreadRadius&&l.spreadRadius<0&&(f+=R(\"mask\",{id:g+\"-neg\",maskUnits:\"userSpaceOnUse\"},O.replace('stroke=\"#fff\"','stroke=\"#000\"').replace(/stroke-width=\"[^\"]+\"/,`stroke-width=\"${-l.spreadRadius*2}\"`))),l.spreadRadius&&l.spreadRadius<0&&(O=R(\"g\",{mask:`url(#${g}-neg)`},O)),f+=R(\"defs\",{},R(\"filter\",{id:b,x:`${y/e*100}%`,y:`${d/t*100}%`,width:`${(h-y)/e*100}%`,height:`${(m-d)/t*100}%`},R(\"feGaussianBlur\",{stdDeviation:l.blurRadius/2,result:\"b\"})+R(\"feFlood\",{\"flood-color\":l.color,in:\"SourceGraphic\",result:\"f\"})+R(\"feComposite\",{in:\"f\",in2:\"b\",operator:l.inset?\"out\":\"in\"})))+R(\"g\",{mask:`url(#${g})`,filter:`url(#${b})`,opacity:r},O),l.inset?a+=f:o+=f}return[o,a]}c();function on({width:e,left:t,top:n,ascender:r,clipPathId:i},s){let{textDecorationColor:o,textDecorationStyle:a,textDecorationLine:u,fontSize:f}=s;if(!u||u===\"none\")return\"\";let l=Math.max(1,f*.1),p=u===\"line-through\"?n+r*.5:u===\"underline\"?n+r*1.1:n,y=a===\"dashed\"?`${l*1.2} ${l*2}`:a===\"dotted\"?`0 ${l*2}`:void 0;return R(\"line\",{x1:t,y1:p,x2:t+e,y2:p,stroke:o,\"stroke-width\":l,\"stroke-dasharray\":y,\"stroke-linecap\":a===\"dotted\"?\"round\":\"square\",\"clip-path\":i?`url(#${i})`:void 0})}var sn=void 0;async function*an(e,t){var po;let n=Ie(),{parentStyle:r,inheritedStyle:i,parent:s,font:o,id:a,isInheritingTransform:u,debug:f,embedFont:l,graphemeImages:p,canLoadAdditionalAssets:y}=t;r.textTransform===\"uppercase\"?e=e.toLocaleUpperCase(sn):r.textTransform===\"lowercase\"?e=e.toLocaleLowerCase(sn):r.textTransform===\"capitalize\"&&(e=je(e,\"word\").map(V=>je(V,\"grapheme\").map((Q,H)=>H===0?Q.toLocaleUpperCase(sn):Q).join(\"\")).join(\"\"));let h=ue(r.wordBreak,{normal:\"word\",\"break-all\":\"grapheme\",\"break-word\":\"grapheme\",\"keep-all\":\"word\"},\"word\",\"wordBreak\"),d=je(e,h),m=n.Node.create();m.setAlignItems(n.ALIGN_BASELINE),m.setJustifyContent(ue(r.textAlign,{left:n.JUSTIFY_FLEX_START,right:n.JUSTIFY_FLEX_END,center:n.JUSTIFY_CENTER,justify:n.JUSTIFY_SPACE_BETWEEN,start:n.JUSTIFY_FLEX_START,end:n.JUSTIFY_FLEX_END},n.JUSTIFY_FLEX_START,\"textAlign\")),s.insertChild(m,s.getChildCount());let{textAlign:b,textOverflow:g,whiteSpace:_,lineHeight:O,filter:A,_inheritedBackgroundClipTextPath:L}=r,N=r.fontSize,C=o.getEngine(N,O,r),D=y?d.filter(V=>!C.has(V)):[];yield D,D.length&&(C=o.getEngine(N,O,r));let $=[],z=[],U=[],M=[],q=new Map,ee=V=>{let Q=0;for(let H of V){if(q.has(H)){Q+=q.get(H);continue}let le=C.measure(H,r);q.set(H,le),Q+=le}return Q},G=0,re=[],Me=0;for(let V of d){let Q=!1,H=p&&p[V];_===\"pre\"?Q=V[0]===`\n`:_!==\"nowrap\"&&(H||cr.includes(V[0]))&&(Q=!0),Q?(_===\"nowrap\"?Me+=ee(re)+r.fontSize:(G=Math.max(G,ee(re)),H&&(G=Math.max(G,r.fontSize))),re=[]):(!cr.includes(V[0])||!re.length)&&re.push(V===`\n`?\" \":V)}G=Math.max(G,ee(re)+Me);let k=s.getMinWidth(),F=s.getMaxWidth(),te=s.getWidth();isNaN(te.value)&&(isNaN(k.value)||k.unit===1&&k.value>G)&&(isNaN(F.value)||F.unit===1&&(G=Math.min(G,F.value)),s.setMinWidth(G)),typeof r.flexShrink>\"u\"&&s.setFlexShrink(1);let ke=[\"pre\",\"pre-wrap\",\"pre-line\"].includes(_),io=![\"pre\",\"pre-wrap\"].includes(_);m.setMeasureFunc(V=>{let Q=0,H=\"\",le=0,me=0,fe=0,ce=-1,Ve=0,Z=0,He=0;$=[],U=[0];for(let $e=0;$e<d.length;$e++){let se=d[$e],Re=ke&&se===`\n`;if(io&&cr.includes(se[0])&&!Re)H||(H=\" \"),le=ee([H]),M[$e]=null;else{let ge=Re?0:p&&p[se]?r.fontSize:ee([se]);Re&&Z===0&&(Z=C.height(se)),me||(H=\"\",le=0);let ie=le||\",.!?:-@)>]}%#\".indexOf(se[0])<0,ae=!me||!!le;if(Re||$e&&ie&&me+le+ge>V&&_!==\"nowrap\"&&_!==\"pre\")$.push(me),z.push(He),Q++,Ve+=Z,me=ge,Z=ge?C.height(se):0,He=ge?C.baseline(se):0,U.push(1),ce=-1,Re||(fe=Math.max(fe,V));else{me+=le+ge;let qe=C.height(se);qe>Z&&(Z=qe,He=C.baseline(se)),ae&&U[U.length-1]++}H=\"\",le=0,ae&&ce++,fe=Math.max(fe,me),M[$e]={y:Ve,x:me-ge,width:ge,line:Q,lineIndex:ce}}}return me&&(Q++,$.push(me),z.push(He),Ve+=Z),{width:fe,height:Ve}});let[ft,Ou]=yield,Nr=\"\",rr=\"\",Fe=i._inheritedClipPathId,oo=i._inheritedMaskId,{left:so,top:ao,width:nr,height:uo}=m.getComputedLayout(),$r=s.getComputedWidth()-s.getComputedPadding(n.EDGE_LEFT)-s.getComputedPadding(n.EDGE_RIGHT)-s.getComputedBorder(n.EDGE_LEFT)-s.getComputedBorder(n.EDGE_RIGHT),tt=ft+so,rt=Ou+ao,{matrix:Ae,opacity:ir}=Fo({left:so,top:ao,width:nr,height:uo,isInheritingTransform:u},r),or=\"\";r.textShadowOffset&&(or=No({width:nr,height:uo,id:a},{shadowColor:r.textShadowColor,shadowOffset:r.textShadowOffset,shadowRadius:r.textShadowRadius}));let ct=\"\",sr=\"\",lo=\"\",qr=-1,fo=g===\"ellipsis\"?ee([\"\\u2026\"]):0,Eu=g===\"ellipsis\"?ee([\" \"]):0,ar={},Ne=null,co=0;for(let V=0;V<d.length;V++){if(!M[V])continue;let Q=M[V],H=d[V],le=null,me=p?p[H]:null,fe=Q.y,ce=Q.x,Ve=Q.width,Z=Q.line;if(Z===qr)continue;let He=!1;if($.length>1){let ie=nr-$[Z];if(b===\"right\"||b===\"end\")ce+=ie;else if(b===\"center\")ce+=ie/2;else if(b===\"justify\"&&Z<$.length-1){let ae=U[Z];ce+=(ae>1?ie/(ae-1):0)*Q.lineIndex,He=!0}}if(ar[Z]||(ar[Z]=[ce,He?nr:$[Z]]),g===\"ellipsis\"&&$[Z]>$r&&Q.x+Ve+fo+Eu>$r){let ie=je(H,\"grapheme\"),ae=\"\",qe=0;for(let ho of ie){let mo=Q.x+ee([ae+ho]);if(ae&&mo+fo>$r)break;ae+=ho,qe=mo}H=ae+\"\\u2026\",qr=Z,ar[Z][1]=qe}let $e=z[Z],se=C.baseline(H),Re=C.height(H),ge=$e-se;if(me)fe+=0;else if(l){if(d[V+1]&&M[V+1]&&fe===M[V+1].y){Ne===null&&(co=ce),Ne=Ne===null?H:Ne+H;continue}let ie=Ne===null?H:Ne+H,ae=Ne===null?ce:co,qe=Q.width+ce-ae;le=C.getSVG(ie,{...r,left:tt+ae,top:rt+fe+se+ge,letterSpacing:r.letterSpacing}),Ne=null,f&&(lo+=R(\"rect\",{x:tt+ae,y:rt+fe+ge,width:qe,height:Re,fill:\"transparent\",stroke:\"#575eff\",\"stroke-width\":1,transform:Ae||void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0})+R(\"line\",{x1:tt+ce,x2:tt+ce+Q.width,y1:rt+fe+ge+se,y2:rt+fe+ge+se,stroke:\"#14c000\",\"stroke-width\":1,transform:Ae||void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0}))}else fe+=se+ge;if(r.textDecorationLine&&(Z!==((po=M[V+1])==null?void 0:po.line)||qr===Z)){let ie=ar[Z];ie&&!ie[2]&&(ct+=on({left:tt+ie[0],top:rt+Re*+Z,width:ie[1],ascender:C.baseline(H),clipPathId:Fe},r),ie[2]=1)}if(le!==null)sr+=le+\" \";else{let[ie,ae]=nn({content:H,filter:or,id:a,left:tt+ce,top:rt+fe,width:Ve,height:Re,matrix:Ae,opacity:ir,image:me,clipPathId:Fe,debug:f,shape:!!L,decorationShape:ct},r);Nr+=ie,rr+=ae,ct=\"\"}}if(sr){let V=r.color!==\"transparent\"&&ir!==0?R(\"path\",{fill:r.color,d:sr,transform:Ae||void 0,opacity:ir!==1?ir:void 0,\"clip-path\":Fe?`url(#${Fe})`:void 0,mask:oo?`url(#${oo})`:void 0,style:A?`filter:${A}`:void 0}):\"\";L&&(rr=R(\"path\",{d:sr,transform:Ae||void 0})),Nr+=(or?or+R(\"g\",{filter:`url(#satori_s-${a})`},V+ct):V+ct)+lo}return rr&&(r._inheritedBackgroundClipTextPath.value+=rr),Nr}c();c();c();var un=un||{},qo={type:\"directional\",value:\"bottom\"};un.parse=function(){var e={linearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,repeatingLinearGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,radialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,repeatingRadialGradient:/^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,sideOrCorner:/^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i,extentKeywords:/^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,positionKeywords:/^(left|center|right|top|bottom)/i,pixelValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,percentageValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,emValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,angleValue:/^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,zeroValue:/[0]/,startCall:/^\\(/,endCall:/^\\)/,comma:/^,/,hexColor:/^\\#([0-9a-fA-F]+)/,literalColor:/^([a-zA-Z]+)/,rgbColor:/^rgb/i,rgbaColor:/^rgba/i,number:/^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/},t=\"\";function n(k){var F=new Error(t+\": \"+k);throw F.source=t,F}function r(){var k=i();return t.length>0&&n(\"Invalid input not EOF\"),k}function i(){return A(s)}function s(){return o(\"linear-gradient\",e.linearGradient,u,qo)||o(\"repeating-linear-gradient\",e.repeatingLinearGradient,u,qo)||o(\"radial-gradient\",e.radialGradient,y)||o(\"repeating-radial-gradient\",e.repeatingRadialGradient,y)}function o(k,F,te,ke){return a(F,function(io){var ft=te();return ft?re(e.comma)||n(\"Missing comma before color stops\"):ft=ke,{type:k,orientation:ft,colorStops:A(L)}})}function a(k,F){var te=re(k);if(te){re(e.startCall)||n(\"Missing (\");var ke=F(te);return re(e.endCall)||n(\"Missing )\"),ke}}function u(){return f()||l()||p()}function f(){return G(\"directional\",e.sideOrCorner,1)}function l(){return G(\"angular\",e.angleValue,1)}function p(){return G(\"directional\",e.zeroValue,0)}function y(){var k,F=h(),te;return F&&(k=[],k.push(F),te=t,re(e.comma)&&(F=h(),F?k.push(F):t=te)),k}function h(){var k=d()||m();if(k)k.at=g();else{var F=b();if(F){k=F;var te=g();te&&(k.at=te)}else{var ke=_();ke&&(k={type:\"default-radial\",at:ke})}}return k}function d(){var k=G(\"shape\",/^(circle)/i,0);return k&&(k.style=ee()||b()),k}function m(){var k=G(\"shape\",/^(ellipse)/i,0);return k&&(k.style=M()||b()),k}function b(){return G(\"extent-keyword\",e.extentKeywords,1)}function g(){if(G(\"position\",/^at/,0)){var k=_();return k||n(\"Missing positioning value\"),k}}function _(){var k=O();if(k.x||k.y)return{type:\"position\",value:k}}function O(){return{x:M(),y:M()}}function A(k){var F=k(),te=[];if(F)for(te.push(F);re(e.comma);)F=k(),F?te.push(F):n(\"One extra comma\");return te}function L(){var k=N();return k||n(\"Expected color definition\"),k.length=M(),k}function N(){return D()||z()||$()||C()}function C(){return G(\"literal\",e.literalColor,0)}function D(){return G(\"hex\",e.hexColor,1)}function $(){return a(e.rgbColor,function(){return{type:\"rgb\",value:A(U)}})}function z(){return a(e.rgbaColor,function(){return{type:\"rgba\",value:A(U)}})}function U(){return re(e.number)[1]}function M(){return G(\"%\",e.percentageValue,1)||q()||ee()}function q(){return G(\"position-keyword\",e.positionKeywords,1)}function ee(){return G(\"px\",e.pixelValue,1)||G(\"em\",e.emValue,1)}function G(k,F,te){var ke=re(F);if(ke)return{type:k,value:ke[te]}}function re(k){var F,te;return te=/^[\\n\\r\\t\\s]+/.exec(t),te&&Me(te[0].length),F=k.exec(t),F&&Me(F[0].length),F}function Me(k){t=t.substr(k)}return function(k){return t=k.toString(),r()}}();var ln=un;function pl(e){return e.type===\"literal\"?e.value:e.type===\"hex\"?`#${e.value}`:e.type===\"rgb\"?`rgb(${e.value.join(\",\")})`:e.type===\"rgba\"?`rgba(${e.value.join(\",\")})`:\"transparent\"}function hl(e){let t=0,n=0,r=0,i=0;return e.includes(\"top\")?n=1:e.includes(\"bottom\")&&(i=1),e.includes(\"left\")?t=1:e.includes(\"right\")&&(r=1),!t&&!r&&!n&&!i&&(n=1),[t,n,r,i]}function ml(e,t){return typeof e==\"string\"&&e.endsWith(\"%\")?t*parseFloat(e)/100:+e}function fn(e,{x:t,y:n,defaultX:r,defaultY:i}){return(e?e.split(\" \").map(s=>{try{let o=new We(s);return o.type===\"length\"||o.type===\"number\"?o.value:o.value+o.unit}catch{return null}}).filter(s=>s!==null):[r,i]).map((s,o)=>ml(s,[t,n][o]))}function Wo(e,t){let n=[];for(let o of t){let a=pl(o);if(!n.length&&(n.push({offset:0,color:a}),typeof o.length>\"u\"||o.length.value===\"0\"))continue;let u=typeof o.length>\"u\"?void 0:o.length.type===\"%\"?o.length.value/100:o.length.value/e;n.push({offset:u,color:a})}n.length||n.push({offset:0,color:\"transparent\"});let r=n[n.length-1];r.offset!==1&&(typeof r.offset>\"u\"?r.offset=1:n.push({offset:1,color:r.color}));let i=0,s=1;for(let o=0;o<n.length;o++)if(typeof n[o].offset>\"u\"){for(s<o&&(s=o);typeof n[s].offset>\"u\";)s++;n[o].offset=(n[s].offset-n[i].offset)/(s-i)*(o-i)+n[i].offset}else i=o;return n}async function cn({id:e,width:t,height:n,left:r,top:i},{image:s,size:o,position:a,repeat:u}){u=u||\"repeat\";let f=u===\"repeat-x\"||u===\"repeat\",l=u===\"repeat-y\"||u===\"repeat\",p=fn(o,{x:t,y:n,defaultX:t,defaultY:n}),y=fn(a,{x:t,y:n,defaultX:0,defaultY:0});if(s.startsWith(\"linear-gradient(\")){let h=ln.parse(s)[0],[d,m]=p,b,g,_,O;if(h.orientation.type===\"directional\")[b,g,_,O]=hl(h.orientation.value);else if(h.orientation.type===\"angular\"){let D=+h.orientation.value/180*Math.PI-Math.PI/2,$=Math.cos(D),z=Math.sin(D);b=0,g=0,_=$,O=z,_<0&&(b-=_,_=0),O<0&&(g-=O,O=0)}let A=Wo(t,h.colorStops),L=`satori_bi${e}`,N=`satori_pattern_${e}`,C=R(\"pattern\",{id:N,x:y[0]/t,y:y[1]/n,width:f?d/t:\"1\",height:l?m/n:\"1\",patternUnits:\"objectBoundingBox\"},R(\"linearGradient\",{id:L,x1:b,y1:g,x2:_,y2:O},A.map(D=>R(\"stop\",{offset:D.offset*100+\"%\",\"stop-color\":D.color})).join(\"\"))+R(\"rect\",{x:0,y:0,width:d,height:m,fill:`url(#${L})`}));return[N,C]}if(s.startsWith(\"radial-gradient(\")){let h=ln.parse(s)[0],d=h.orientation[0],[m,b]=p,g=\"circle\",_=m/2,O=b/2;if(d.type===\"shape\"){if(g=d.value,d.at)if(d.at.type===\"position\")_=d.at.value.x.value,O=d.at.value.y.value;else throw new Error(\"orientation.at.type not implemented: \"+d.at.type)}else throw new Error(\"orientation.type not implemented: \"+d.type);let A=Wo(t,h.colorStops),L=`satori_radial_${e}`,N=`satori_pattern_${e}`,C=`satori_mask_${e}`,D={},$=Math.max(Math.abs(m-_),Math.abs(_)),z=Math.max(Math.abs(b-O),Math.abs(O));if(g===\"circle\")D.r=Math.sqrt($*$+z*z);else if(g===\"ellipse\"){let q=z!==0?$/z:1;D.ry=Math.sqrt($*$+z*z*q*q)/q,D.rx=D.ry*q}let U=R(\"pattern\",{id:N,x:y[0]/t,y:y[1]/n,width:f?m/t:\"1\",height:l?b/n:\"1\",patternUnits:\"objectBoundingBox\"},R(\"radialGradient\",{id:L},A.map(q=>R(\"stop\",{offset:q.offset,\"stop-color\":q.color})).join(\"\"))+R(\"mask\",{id:C},R(\"rect\",{x:0,y:0,width:m,height:b,fill:\"#fff\"}))+R(g,{cx:_,cy:O,width:m,height:b,...D,fill:`url(#${L})`,mask:`url(#${C})`}));return[N,U]}if(s.startsWith(\"url(\")){let h=fn(o,{x:t,y:n,defaultX:0,defaultY:0}),[d,m,b]=await pr(s.slice(4,-1)),g=h[0]||m,_=h[1]||b;return[`satori_bi${e}`,R(\"pattern\",{id:`satori_bi${e}`,patternContentUnits:\"userSpaceOnUse\",patternUnits:\"userSpaceOnUse\",x:y[0]+r,y:y[1]+i,width:f?g:\"100%\",height:l?_:\"100%\"},R(\"image\",{x:0,y:0,width:g,height:_,preserveAspectRatio:\"none\",href:d}))]}throw new Error(`Invalid background image: \"${s}\"`)}c();function gl([e,t]){return Math.round(e*1e3)===0&&Math.round(t*1e3)===0?0:Math.round(e*t/Math.sqrt(e*e+t*t)*1e3)/1e3}function hr(e,t,n){return n<e+t&&(n/2<e&&n/2<t?e=t=n/2:n/2<e?e=n-t:n/2<t&&(t=n-e)),[e,t]}function mr(e){e[0]=e[1]=Math.min(e[0],e[1])}function gr(e,t,n,r,i){if(typeof e==\"string\"){let s=e.split(\" \").map(a=>a.trim()),o=!s[1]&&!s[0].endsWith(\"%\");return s[1]=s[1]||s[0],[o,[Math.min(ve(s[0],r,t,i,!0),t),Math.min(ve(s[1],r,n,i,!0),n)]]}return typeof e==\"number\"?[!0,[Math.min(e,t),Math.min(e,n)]]:[!0,void 0]}function nt({left:e,top:t,width:n,height:r},i,s){let{borderTopLeftRadius:o,borderTopRightRadius:a,borderBottomLeftRadius:u,borderBottomRightRadius:f,fontSize:l}=i,p,y,h,d;if([p,o]=gr(o,n,r,l,i),[y,a]=gr(a,n,r,l,i),[h,u]=gr(u,n,r,l,i),[d,f]=gr(f,n,r,l,i),!s&&!o&&!a&&!u&&!f)return\"\";o||(o=[0,0]),a||(a=[0,0]),u||(u=[0,0]),f||(f=[0,0]),[o[0],a[0]]=hr(o[0],a[0],n),[u[0],f[0]]=hr(u[0],f[0],n),[o[1],u[1]]=hr(o[1],u[1],r),[a[1],f[1]]=hr(a[1],f[1],r),p&&mr(o),y&&mr(a),h&&mr(u),d&&mr(f);let m=[];m[0]=[a,a],m[1]=[f,[-f[0],f[1]]],m[2]=[u,[-u[0],-u[1]]],m[3]=[o,[o[0],-o[1]]];let b=`h${n-o[0]-a[0]} a${m[0][0]} 0 0 1 ${m[0][1]}`,g=`v${r-a[1]-f[1]} a${m[1][0]} 0 0 1 ${m[1][1]}`,_=`h${f[0]+u[0]-n} a${m[2][0]} 0 0 1 ${m[2][1]}`,O=`v${u[1]+o[1]-r} a${m[3][0]} 0 0 1 ${m[3][1]}`;if(s){let L=function(M){let q=gl([o,a,f,u][M]);return M===0?[[e+o[0]-q,t+o[1]-q],[e+o[0],t]]:M===1?[[e+n-a[0]+q,t+a[1]-q],[e+n,t+a[1]]]:M===2?[[e+n-f[0]+q,t+r-f[1]+q],[e+n-f[0],t+r]]:[[e+u[0]-q,t+r-u[1]+q],[e,t+r-u[1]]]},A=s.indexOf(!1);if(!s.includes(!0))throw new Error(\"Invalid `partialSides`.\");if(A===-1)A=0;else for(;!s[A];)A=(A+1)%4;let N=\"\",C=L(A),D=`M${C[0]} A${m[(A+3)%4][0]} 0 0 1 ${C[1]}`,$=0;for(;$<4&&s[(A+$)%4];$++)N+=D+\" \",D=[b,g,_,O][(A+$)%4];let z=(A+$)%4;N+=D.split(\" \")[0];let U=L(z);return N+=` A${m[(z+3)%4][0]} 0 0 1 ${U[0]}`,N}return`M${e+o[0]},${t} ${b} ${g} ${_} ${O}`}c();c();c();function Bo(e,t,n){return n[e+\"Width\"]===n[t+\"Width\"]&&n[e+\"Style\"]===n[t+\"Style\"]&&n[e+\"Color\"]===n[t+\"Color\"]}function Uo({id:e,currentClipPathId:t,borderPath:n,borderType:r,left:i,top:s,width:o,height:a},u){if(!(u.borderTopWidth||u.borderRightWidth||u.borderBottomWidth||u.borderLeftWidth))return null;let l=`satori_bc-${e}`;return[R(\"clipPath\",{id:l,\"clip-path\":t?`url(#${t})`:void 0},R(r,{x:i,y:s,width:o,height:a,d:n||void 0})),l]}function vt({left:e,top:t,width:n,height:r,props:i,asContentMask:s,maskBorderOnly:o},a){let u=[\"borderTop\",\"borderRight\",\"borderBottom\",\"borderLeft\"];if(!s&&!u.some(h=>a[h+\"Width\"]))return\"\";let f=\"\",l=0;for(;l>0&&Bo(u[l],u[(l+3)%4],a);)l=(l+3)%4;let p=[!1,!1,!1,!1],y=[];for(let h=0;h<4;h++){let d=(l+h)%4,m=(l+h+1)%4,b=u[d],g=u[m];if(p[d]=!0,y=[a[b+\"Width\"],a[b+\"Style\"],a[b+\"Color\"],b],!Bo(b,g,a)){let _=(y[0]||0)+(s&&!o&&a[b.replace(\"border\",\"padding\")]||0);_&&(f+=R(\"path\",{width:n,height:r,...i,fill:\"none\",stroke:s?\"#000\":y[2],\"stroke-width\":_*2,\"stroke-dasharray\":!s&&y[1]===\"dashed\"?_*2+\" \"+_:void 0,d:nt({left:e,top:t,width:n,height:r},a,p)})),p=[!1,!1,!1,!1]}}if(p.some(Boolean)){let h=(y[0]||0)+(s&&!o&&a[y[3].replace(\"border\",\"padding\")]||0);h&&(f+=R(\"path\",{width:n,height:r,...i,fill:\"none\",stroke:s?\"#000\":y[2],\"stroke-width\":h*2,\"stroke-dasharray\":!s&&y[1]===\"dashed\"?h*2+\" \"+h:void 0,d:nt({left:e,top:t,width:n,height:r},a,p)}))}return f}function dn({id:e,left:t,top:n,width:r,height:i,matrix:s,borderOnly:o},a){let u=(a.borderLeftWidth||0)+(o?0:a.paddingLeft||0),f=(a.borderTopWidth||0)+(o?0:a.paddingTop||0),l=(a.borderRightWidth||0)+(o?0:a.paddingRight||0),p=(a.borderBottomWidth||0)+(o?0:a.paddingBottom||0),y={x:t+u,y:n+f,width:r-u-l,height:i-f-p};return R(\"mask\",{id:e},R(\"rect\",{...y,fill:\"#fff\",mask:a._inheritedMaskId?`url(#${a._inheritedMaskId})`:void 0})+vt({left:t,top:n,width:r,height:i,props:{transform:s||void 0},asContentMask:!0,maskBorderOnly:o},a))}function pn({left:e,top:t,width:n,height:r,path:i,matrix:s,id:o,currentClipPath:a,src:u},f){if(f.overflow!==\"hidden\"&&!u)return\"\";let l=dn({id:`satori_om-${o}`,left:e,top:t,width:n,height:r,matrix:s,borderOnly:!u},f);return R(\"clipPath\",{id:`satori_cp-${o}`,\"clip-path\":a},R(i?\"path\":\"rect\",{x:e,y:t,width:n,height:r,d:i||void 0}))+l}async function bt({id:e,left:t,top:n,width:r,height:i,isInheritingTransform:s,src:o,debug:a},u){if(u.display===\"none\")return\"\";let f=!!o,l=\"rect\",p=\"\",y=\"\",h=[],d=1,m=\"\";u.backgroundColor&&h.push(u.backgroundColor),u.opacity!==void 0&&(d=+u.opacity),u.transform&&(p=gt({left:t,top:n,width:r,height:i},u.transform,s,u.transformOrigin));let b=\"\";if(u.backgroundImage){let U=[];for(let M=0;M<u.backgroundImage.length;M++){let q=u.backgroundImage[M],ee=await cn({id:e+\"_\"+M,width:r,height:i,left:t,top:n},q);ee&&U.unshift(ee)}for(let M of U)h.push(`url(#${M[0]})`),y+=M[1],M[2]&&(b+=M[2])}let g=nt({left:t,top:n,width:r,height:i},u);g&&(l=\"path\");let _=u._inheritedClipPathId,O=u._inheritedMaskId;a&&(m=R(\"rect\",{x:t,y:n,width:r,height:i,fill:\"transparent\",stroke:\"#ff5757\",\"stroke-width\":1,transform:p||void 0,\"clip-path\":_?`url(#${_})`:void 0}));let{backgroundClip:A,filter:L}=u,N=A===\"text\"?`url(#satori_bct-${e})`:_?`url(#${_})`:void 0,C=pn({left:t,top:n,width:r,height:i,path:g,id:e,matrix:p,currentClipPath:N,src:o},u),D=h.map(U=>R(l,{x:t,y:n,width:r,height:i,fill:U,d:g||void 0,transform:p||void 0,\"clip-path\":N,style:L?`filter:${L}`:void 0,mask:O?`url(#${O})`:void 0})).join(\"\"),$=Uo({id:e,left:t,top:n,width:r,height:i,currentClipPathId:_,borderPath:g,borderType:l},u);if(f){let U=(u.borderLeftWidth||0)+(u.paddingLeft||0),M=(u.borderTopWidth||0)+(u.paddingTop||0),q=(u.borderRightWidth||0)+(u.paddingRight||0),ee=(u.borderBottomWidth||0)+(u.paddingBottom||0),G=u.objectFit===\"contain\"?\"xMidYMid\":u.objectFit===\"cover\"?\"xMidYMid slice\":\"none\";D+=R(\"image\",{x:t+U,y:n+M,width:r-U-q,height:i-M-ee,href:o,preserveAspectRatio:G,transform:p||void 0,style:L?`filter:${L}`:void 0,\"clip-path\":`url(#satori_cp-${e})`,mask:`url(#satori_om-${e})`})}if($){y+=$[0];let U=$[1];D+=vt({left:t,top:n,width:r,height:i,props:{transform:p||void 0,\"clip-path\":`url(#${U})`}},u)}let z=$o({width:r,height:i,id:e,opacity:d,shape:R(l,{x:t,y:n,width:r,height:i,fill:\"#fff\",stroke:\"#fff\",\"stroke-width\":0,d:g||void 0,transform:p||void 0,\"clip-path\":N,mask:O?`url(#${O})`:void 0})},u);return(y?R(\"defs\",{},y):\"\")+(z?z[0]:\"\")+C+(d!==1?`<g opacity=\"${d}\">`:\"\")+(b||D)+(d!==1?\"</g>\":\"\")+(z?z[1]:\"\")+m}async function*yt(e,t){let n=Ie(),{id:r,inheritedStyle:i,parent:s,font:o,debug:a,embedFont:u=!0,graphemeImages:f,canLoadAdditionalAssets:l,getTwStyles:p}=t;if(e===null||typeof e>\"u\")return yield,yield,\"\";if(!jr(e)||typeof e.type==\"function\"){let k;if(!jr(e))k=an(String(e),t),yield(await k.next()).value;else{if(ko(e.type))throw new Error(\"Class component is not supported.\");k=yt(e.type(e.props),t),yield(await k.next()).value}await k.next();let F=yield;return(await k.next(F)).value}let{type:y,props:h}=e;if(h&&To(h))throw new Error(\"dangerouslySetInnerHTML property is not supported. See documentation for more information https://github.com/vercel/satori#jsx.\");let{style:d,children:m,tw:b}=h||{};if(b){let k=p(b,d);d=Object.assign(k,d)}let g=n.Node.create();s.insertChild(g,s.getChildCount());let[_,O]=await rn(g,y,i,d,h),A=_.transform===i.transform;if(A||(_.transform.__parent=i.transform),_.overflow===\"hidden\"&&(O._inheritedClipPathId=`satori_cp-${r}`,O._inheritedMaskId=`satori_om-${r}`),_.backgroundClip===\"text\"){let k={value:\"\"};O._inheritedBackgroundClipTextPath=k,_._inheritedBackgroundClipTextPath=k}let L=Oo(m),N=[],C=0,D=[];for(let k of L){let F=yt(k,{id:r+\"-\"+C++,parentStyle:_,inheritedStyle:O,isInheritingTransform:!0,parent:g,font:o,embedFont:u,debug:a,graphemeImages:f,canLoadAdditionalAssets:l,getTwStyles:p});l?D.push(...(await F.next()).value||[]):await F.next(),N.push(F)}yield D;for(let k of N)await k.next();let[$,z]=yield,{left:U,top:M,width:q,height:ee}=g.getComputedLayout();U+=$,M+=z;let G=\"\",re=\"\",Me=\"\";if(y===\"img\"){let k=_.__src;re=await bt({id:r,left:U,top:M,width:q,height:ee,src:k,isInheritingTransform:A,debug:a},_)}else if(y===\"svg\"){let k=Ao(e);re=await bt({id:r,left:U,top:M,width:q,height:ee,src:k,isInheritingTransform:A,debug:a},_)}else{let k=d==null?void 0:d.display;if(y===\"div\"&&m&&typeof m!=\"string\"&&k!==\"flex\"&&k!==\"none\")throw new Error('Expected <div> to have explicit \"display: flex\" or \"display: none\" if it has more than one child node.');re=await bt({id:r,left:U,top:M,width:q,height:ee,isInheritingTransform:A,debug:a},_)}for(let k of N)G+=(await k.next([U,M])).value;return _._inheritedBackgroundClipTextPath&&(Me+=R(\"clipPath\",{id:`satori_bct-${r}`,\"clip-path\":_._inheritedClipPathId?`url(#${_._inheritedClipPathId})`:void 0},_._inheritedBackgroundClipTextPath.value)),Me+re+G}c();function vl(e,t,[n,r],[i,s]){if(n!==i)return n?!i||n===e?-1:i===e?1:e===400&&n===500||e===500&&n===400?-1:e===400&&i===500||e===500&&i===400?1:e<400?n<e&&i<e?i-n:n<e?-1:i<e?1:n-i:e<n&&e<i?n-i:e<n?-1:e<i?1:i-n:1;if(r!==s){if(r===t)return-1;if(s===t)return 1}return-1}var xt=class{constructor(t){this.fonts=new Map;this.addFonts(t)}get({name:t,weight:n,style:r}){if(!this.fonts.has(t))return null;n===\"normal\"&&(n=400),n===\"bold\"&&(n=700),typeof n==\"string\"&&(n=Number.parseInt(n,10));let i=[...this.fonts.get(t)],s=i[0];for(let o=1;o<i.length;o++){let[,a,u]=s,[,f,l]=i[o];vl(n,r,[a,u],[f,l])>0&&(s=i[o])}return s[0]}addFonts(t){for(let n of t){let r=n.data,i=opentype_module.parse(\"buffer\"in r?r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength):r,{lowMemory:!0}),s=i.charToGlyphIndex;i.charToGlyphIndex=a=>{let u=s.call(i,a);return u===0&&i._trackBrokenChars&&i._trackBrokenChars.push(a),u},this.defaultFont||(this.defaultFont=i);let o=n.name.toLowerCase();this.fonts.has(o)||this.fonts.set(o,[]),this.fonts.get(o).push([i,n.weight,n.style])}}getEngine(t=16,n=1.2,{fontFamily:r,fontWeight:i=400,fontStyle:s=\"normal\"}){if(!this.fonts.size)throw new Error(\"No fonts are loaded. At least one font is required to calculate the layout.\");r=(Array.isArray(r)?r:[r]).map(d=>d.toLowerCase());let o=r.map(d=>this.get({name:d,weight:i,style:s})).filter(Boolean),a=Array.from(this.fonts.keys());for(let d of a)r.includes(d)||o.push(this.get({name:d,weight:i,style:s}));let u=new Map,f=(d,m=!0)=>{let b=d.charCodeAt(0);if(u.has(b))return u.get(b);let g=o.find((_,O)=>!!_.charToGlyphIndex(d)||m&&O===o.length-1);return g&&u.set(b,g),g},l=(d,m=!1)=>{var g,_;return((m?(_=(g=d.tables)==null?void 0:g.os2)==null?void 0:_.sTypoAscender:0)||d.ascender)/d.unitsPerEm*t},p=(d,m=!1)=>{var g,_;return((m?(_=(g=d.tables)==null?void 0:g.os2)==null?void 0:_.sTypoDescender:0)||d.descender)/d.unitsPerEm*t},y=d=>f(d,!1),h={has:d=>{if(d===`\n`)return!0;let m=y(d);return m?(m._trackBrokenChars=[],m.stringToGlyphs(d),m._trackBrokenChars.length?(m._trackBrokenChars=void 0,!1):!0):!1},baseline:(d,m=typeof d>\"u\"?o[0]:f(d))=>{let b=l(m,!0),g=p(m,!0),_=h.height(d,m),{yMax:O,yMin:A}=m.tables.head,L=b-g,N=(O/(O-A)-1)*L;return _*((1.2/n+1)/2)+N},height:(d,m=typeof d>\"u\"?o[0]:f(d))=>(l(m)-p(m))*(n/1.2),measure:(d,m)=>this.measure(f,d,m),getSVG:(d,m)=>this.getSVG(f,d,m)};return h}patchFontFallbackResolver(t,n){let r=[];t._trackBrokenChars=r;let i=t.stringToGlyphs;return t.stringToGlyphs=(s,...o)=>{let a=i.call(t,s,...o);for(let u=0;u<a.length;u++)if(a[u].unicode===void 0){let f=r.shift(),l=n(f);if(l!==t){let p=l.charToGlyph(f),y=t.unitsPerEm/l.unitsPerEm,h=new opentype_module.Path;h.unitsPerEm=t.unitsPerEm,h.commands=p.path.commands.map(m=>{let b={...m};for(let g in b)typeof b[g]==\"number\"&&(b[g]*=y);return b});let d=new opentype_module.Glyph({...p,advanceWidth:p.advanceWidth*y,xMin:p.xMin*y,xMax:p.xMax*y,yMin:p.yMin*y,yMax:p.yMax*y,path:h});a[u]=d}}return a},()=>{t.stringToGlyphs=i,t._trackBrokenChars=void 0}}measure(t,n,{fontSize:r,letterSpacing:i=0}){let s=t(n),o=this.patchFontFallbackResolver(s,t);try{return s.getAdvanceWidth(n,r,{letterSpacing:i/r})}finally{o()}}getSVG(t,n,{fontSize:r,top:i,left:s,letterSpacing:o=0}){let a=t(n),u=this.patchFontFallbackResolver(a,t);try{return r===0?\"\":a.getPath(n.replace(/\\n/g,\"\"),s,i,r,{letterSpacing:o/r}).toPathData(1)}finally{u()}}};c();function mn({width:e,height:t,content:n}){return R(\"svg\",{width:e,height:t,viewBox:`0 0 ${e} ${t}`,xmlns:\"http://www.w3.org/2000/svg\"},n)}c();var yl=new RegExp(emoji_regex(),\"\"),zo={emoji:yl,ja:/\\p{scx=Hira}|\\p{scx=Kana}|[，；：]/u,ko:/\\p{scx=Hangul}/u,zh:/\\p{scx=Han}/u,th:/\\p{scx=Thai}/u,bn:/\\p{scx=Bengali}/u,ar:/\\p{scx=Arabic}/u,ta:/\\p{scx=Tamil}/u,ml:/\\p{scx=Malayalam}/u,he:/\\p{scx=Hebrew}/u,te:/\\p{scx=Telugu}/u,devanagari:/\\p{scx=Devanagari}/u,symbol:/\\p{Symbol}/u,math:/\\p{Math}/u};function Go(e){for(let t in zo)if(zo[t].test(e))return t;return\"unknown\"}c();c();var Su=Cu(eu());c();c();c();c();var s0=[\"ios\",\"android\",\"windows\",\"macos\",\"web\"];function ru(e){return s0.includes(e)}var a0=[\"portrait\",\"landscape\"];function nu(e){return a0.includes(e)}var tu;(function(e){e.fontSize=\"fontSize\",e.lineHeight=\"lineHeight\"})(tu||(tu={}));var B;(function(e){e.rem=\"rem\",e.em=\"em\",e.px=\"px\",e.percent=\"%\",e.vw=\"vw\",e.vh=\"vh\",e.none=\"<no-css-unit>\"})(B||(B={}));function Bi(e){return typeof e==\"string\"}function Ui(e){return typeof e==\"object\"}var zi;function v(e){return{kind:\"complete\",style:e}}function ne(e,t={}){let{fractions:n}=t;if(n&&e.includes(\"/\")){let[s=\"\",o=\"\"]=e.split(\"/\",2),a=ne(s),u=ne(o);return!a||!u?null:[a[0]/u[0],u[1]]}let r=parseFloat(e);if(Number.isNaN(r))return null;let i=e.match(/(([a-z]{2,}|%))$/);if(!i)return[r,B.none];switch(i==null?void 0:i[1]){case\"rem\":return[r,B.rem];case\"px\":return[r,B.px];case\"em\":return[r,B.em];case\"%\":return[r,B.percent];case\"vw\":return[r,B.vw];case\"vh\":return[r,B.vh];default:return null}}function De(e,t,n={}){let r=Ee(t,n);return r===null?null:v({[e]:r})}function Dr(e,t,n){let r=Ee(t);return r!==null&&(n[e]=r),n}function ou(e,t){let n=Ee(t);return n===null?null:{[e]:n}}function Ee(e,t={}){if(e===void 0)return null;let n=ne(String(e),t);return n?Ge(...n,t):null}function Ge(e,t,n={}){let{isNegative:r,device:i}=n;switch(t){case B.rem:return e*16*(r?-1:1);case B.px:return e*(r?-1:1);case B.percent:return`${r?\"-\":\"\"}${e}%`;case B.none:return e*(r?-1:1);case B.vw:return i!=null&&i.windowDimensions?i.windowDimensions.width*(e/100):(he(\"`vw` CSS unit requires configuration with `useDeviceContext()`\"),null);case B.vh:return i!=null&&i.windowDimensions?i.windowDimensions.height*(e/100):(he(\"`vh` CSS unit requires configuration with `useDeviceContext()`\"),null);default:return null}}function Gi(e){let t=ne(e);if(!t)return null;let[n,r]=t;switch(r){case B.rem:return n*16;case B.px:return n;default:return null}}var u0={t:\"Top\",tr:\"TopRight\",tl:\"TopLeft\",b:\"Bottom\",br:\"BottomRight\",bl:\"BottomLeft\",l:\"Left\",r:\"Right\",x:\"Horizontal\",y:\"Vertical\"};function Vi(e){return u0[e!=null?e:\"\"]||\"All\"}function Hi(e){let t=\"All\";return[e.replace(/^-(t|b|r|l|tr|tl|br|bl)(-|$)/,(r,i)=>(t=Vi(i),\"\")),t]}function Ze(e,t={}){if(e.includes(\"/\")){let n=iu(e,{...t,fractions:!0});if(n)return n}return e[0]===\"[\"&&(e=e.slice(1,-1)),iu(e,t)}function Se(e,t,n={}){let r=Ze(t,n);return r===null?null:v({[e]:r})}function iu(e,t={}){if(e===\"px\")return 1;let n=ne(e,t);if(!n)return null;let[r,i]=n;return t.fractions&&(i=B.percent,r*=100),i===B.none&&(r=r/4,i=B.rem),Ge(r,i,t)}function l0(...e){console.warn(...e)}function f0(...e){}var he=typeof process>\"u\"||((zi=process==null?void 0:process.env)===null||zi===void 0?void 0:zi.JEST_WORKER_ID)===void 0?l0:f0;var c0=[[\"aspect-square\",v({aspectRatio:1})],[\"aspect-video\",v({aspectRatio:16/9})],[\"items-center\",v({alignItems:\"center\"})],[\"items-start\",v({alignItems:\"flex-start\"})],[\"items-end\",v({alignItems:\"flex-end\"})],[\"items-baseline\",v({alignItems:\"baseline\"})],[\"items-stretch\",v({alignItems:\"stretch\"})],[\"justify-start\",v({justifyContent:\"flex-start\"})],[\"justify-end\",v({justifyContent:\"flex-end\"})],[\"justify-center\",v({justifyContent:\"center\"})],[\"justify-between\",v({justifyContent:\"space-between\"})],[\"justify-around\",v({justifyContent:\"space-around\"})],[\"justify-evenly\",v({justifyContent:\"space-evenly\"})],[\"content-start\",v({alignContent:\"flex-start\"})],[\"content-end\",v({alignContent:\"flex-end\"})],[\"content-between\",v({alignContent:\"space-between\"})],[\"content-around\",v({alignContent:\"space-around\"})],[\"content-stretch\",v({alignContent:\"stretch\"})],[\"content-center\",v({alignContent:\"center\"})],[\"self-auto\",v({alignSelf:\"auto\"})],[\"self-start\",v({alignSelf:\"flex-start\"})],[\"self-end\",v({alignSelf:\"flex-end\"})],[\"self-center\",v({alignSelf:\"center\"})],[\"self-stretch\",v({alignSelf:\"stretch\"})],[\"self-baseline\",v({alignSelf:\"baseline\"})],[\"direction-inherit\",v({direction:\"inherit\"})],[\"direction-ltr\",v({direction:\"ltr\"})],[\"direction-rtl\",v({direction:\"rtl\"})],[\"hidden\",v({display:\"none\"})],[\"flex\",v({display:\"flex\"})],[\"flex-row\",v({flexDirection:\"row\"})],[\"flex-row-reverse\",v({flexDirection:\"row-reverse\"})],[\"flex-col\",v({flexDirection:\"column\"})],[\"flex-col-reverse\",v({flexDirection:\"column-reverse\"})],[\"flex-wrap\",v({flexWrap:\"wrap\"})],[\"flex-wrap-reverse\",v({flexWrap:\"wrap-reverse\"})],[\"flex-nowrap\",v({flexWrap:\"nowrap\"})],[\"flex-auto\",v({flexGrow:1,flexShrink:1,flexBasis:\"auto\"})],[\"flex-initial\",v({flexGrow:0,flexShrink:1,flexBasis:\"auto\"})],[\"flex-none\",v({flexGrow:0,flexShrink:0,flexBasis:\"auto\"})],[\"overflow-hidden\",v({overflow:\"hidden\"})],[\"overflow-visible\",v({overflow:\"visible\"})],[\"overflow-scroll\",v({overflow:\"scroll\"})],[\"absolute\",v({position:\"absolute\"})],[\"relative\",v({position:\"relative\"})],[\"italic\",v({fontStyle:\"italic\"})],[\"not-italic\",v({fontStyle:\"normal\"})],[\"oldstyle-nums\",Jt(\"oldstyle-nums\")],[\"small-caps\",Jt(\"small-caps\")],[\"lining-nums\",Jt(\"lining-nums\")],[\"tabular-nums\",Jt(\"tabular-nums\")],[\"proportional-nums\",Jt(\"proportional-nums\")],[\"font-thin\",v({fontWeight:\"100\"})],[\"font-100\",v({fontWeight:\"100\"})],[\"font-extralight\",v({fontWeight:\"200\"})],[\"font-200\",v({fontWeight:\"200\"})],[\"font-light\",v({fontWeight:\"300\"})],[\"font-300\",v({fontWeight:\"300\"})],[\"font-normal\",v({fontWeight:\"normal\"})],[\"font-400\",v({fontWeight:\"400\"})],[\"font-medium\",v({fontWeight:\"500\"})],[\"font-500\",v({fontWeight:\"500\"})],[\"font-semibold\",v({fontWeight:\"600\"})],[\"font-600\",v({fontWeight:\"600\"})],[\"font-bold\",v({fontWeight:\"bold\"})],[\"font-700\",v({fontWeight:\"700\"})],[\"font-extrabold\",v({fontWeight:\"800\"})],[\"font-800\",v({fontWeight:\"800\"})],[\"font-black\",v({fontWeight:\"900\"})],[\"font-900\",v({fontWeight:\"900\"})],[\"include-font-padding\",v({includeFontPadding:!0})],[\"remove-font-padding\",v({includeFontPadding:!1})],[\"max-w-none\",v({maxWidth:\"99999%\"})],[\"text-left\",v({textAlign:\"left\"})],[\"text-center\",v({textAlign:\"center\"})],[\"text-right\",v({textAlign:\"right\"})],[\"text-justify\",v({textAlign:\"justify\"})],[\"text-auto\",v({textAlign:\"auto\"})],[\"underline\",v({textDecorationLine:\"underline\"})],[\"line-through\",v({textDecorationLine:\"line-through\"})],[\"no-underline\",v({textDecorationLine:\"none\"})],[\"uppercase\",v({textTransform:\"uppercase\"})],[\"lowercase\",v({textTransform:\"lowercase\"})],[\"capitalize\",v({textTransform:\"capitalize\"})],[\"normal-case\",v({textTransform:\"none\"})],[\"w-auto\",v({width:\"auto\"})],[\"h-auto\",v({height:\"auto\"})],[\"shadow-sm\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:1,shadowOpacity:.025,elevation:1})],[\"shadow\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:1,shadowOpacity:.075,elevation:2})],[\"shadow-md\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowRadius:3,shadowOpacity:.125,elevation:3})],[\"shadow-lg\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.15,shadowRadius:8,elevation:8})],[\"shadow-xl\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.19,shadowRadius:20,elevation:12})],[\"shadow-2xl\",v({shadowOffset:{width:1,height:1},shadowColor:\"#000\",shadowOpacity:.25,shadowRadius:30,elevation:16})],[\"shadow-none\",v({shadowOffset:{width:0,height:0},shadowColor:\"#000\",shadowRadius:0,shadowOpacity:0,elevation:0})]],ji=c0;function Jt(e){return{kind:\"dependent\",complete(t){(!t.fontVariant||!Array.isArray(t.fontVariant))&&(t.fontVariant=[]),t.fontVariant.push(e)}}}var Kt=class{constructor(t){this.ir=new Map(ji),this.styles=new Map,this.prefixes=new Map,this.ir=new Map([...ji,...t!=null?t:[]])}getStyle(t){return this.styles.get(t)}setStyle(t,n){this.styles.set(t,n)}getIr(t){return this.ir.get(t)}setIr(t,n){this.ir.set(t,n)}getPrefixMatch(t){return this.prefixes.get(t)}setPrefixMatch(t,n){this.prefixes.set(t,n)}};c();c();function Yi(e,t,n={}){let r=t==null?void 0:t[e];if(!r)return Se(\"fontSize\",e,n);if(typeof r==\"string\")return De(\"fontSize\",r);let i={},[s,o]=r,a=ou(\"fontSize\",s);if(a&&(i=a),typeof o==\"string\")return v(Dr(\"lineHeight\",su(o,i),i));let{lineHeight:u,letterSpacing:f}=o;return u&&Dr(\"lineHeight\",su(u,i),i),f&&Dr(\"letterSpacing\",f,i),v(i)}function su(e,t){let n=ne(e);if(n){let[r,i]=n;if((i===B.none||i===B.em)&&typeof t.fontSize==\"number\")return t.fontSize*r}return e}c();function Xi(e,t){var n;let r=(n=t==null?void 0:t[e])!==null&&n!==void 0?n:e.startsWith(\"[\")?e.slice(1,-1):e,i=ne(r);if(!i)return null;let[s,o]=i;if(o===B.none)return{kind:\"dependent\",complete(u){if(typeof u.fontSize!=\"number\")return\"relative line-height utilities require that font-size be set\";u.lineHeight=u.fontSize*s}};let a=Ge(s,o);return a!==null?v({lineHeight:a}):null}c();function Qi(e,t,n,r,i){let s=\"\";if(r[0]===\"[\")s=r.slice(1,-1);else{let f=i==null?void 0:i[r];if(f)s=f;else{let l=Ze(r);return l&&typeof l==\"number\"?au(l,B.px,t,e):null}}if(s===\"auto\")return uu(t,e,\"auto\");let o=ne(s);if(!o)return null;let[a,u]=o;return n&&(a=-a),au(a,u,t,e)}function au(e,t,n,r){let i=Ge(e,t);return i===null?null:uu(n,r,i)}function uu(e,t,n){switch(e){case\"All\":return{kind:\"complete\",style:{[`${t}Top`]:n,[`${t}Right`]:n,[`${t}Bottom`]:n,[`${t}Left`]:n}};case\"Bottom\":case\"Top\":case\"Left\":case\"Right\":return{kind:\"complete\",style:{[`${t}${e}`]:n}};case\"Vertical\":return{kind:\"complete\",style:{[`${t}Top`]:n,[`${t}Bottom`]:n}};case\"Horizontal\":return{kind:\"complete\",style:{[`${t}Left`]:n,[`${t}Right`]:n}};default:return null}}c();function Ji(e){if(!e)return{};let t=Object.entries(e).reduce((i,[s,o])=>{let a=[0,1/0,0],u=typeof o==\"string\"?{min:o}:o,f=u.min?Gi(u.min):0;f===null?he(`invalid screen config value: ${s}->min: ${u.min}`):a[0]=f;let l=u.max?Gi(u.max):1/0;return l===null?he(`invalid screen config value: ${s}->max: ${u.max}`):a[1]=l,i[s]=a,i},{}),n=Object.values(t);n.sort((i,s)=>{let[o,a]=i,[u,f]=s;return a===1/0||f===1/0?o-u:a-f});let r=0;return n.forEach(i=>i[2]=r++),t}c();function Ki(e,t){let n=t==null?void 0:t[e];if(!n)return null;if(typeof n==\"string\")return v({fontFamily:n});let r=n[0];return r?v({fontFamily:r}):null}c();function index_wasm_et(e,t,n){if(!n)return null;let r;t.includes(\"/\")&&([t=\"\",r]=t.split(\"/\",2));let i=\"\";if(t.startsWith(\"[#\")||t.startsWith(\"[rgb\")?i=t.slice(1,-1):i=cu(t,n),!i)return null;if(r){let s=Number(r);if(!Number.isNaN(s))return i=lu(i,s/100),v({[Mr[e].color]:i})}return{kind:\"dependent\",complete(s){let o=Mr[e].opacity,a=s[o];typeof a==\"number\"&&(i=lu(i,a)),s[Mr[e].color]=i}}}function Zt(e,t){let n=parseInt(t,10);if(Number.isNaN(n))return null;let r=n/100,i={[Mr[e].opacity]:r};return{kind:\"complete\",style:i}}function lu(e,t){return e.startsWith(\"#\")?e=d0(e):e.startsWith(\"rgb(\")&&(e=e.replace(/^rgb\\(/,\"rgba(\").replace(/\\)$/,\", 1)\")),e.replace(/, ?\\d*\\.?(\\d+)\\)$/,`, ${t})`)}function fu(e){for(let t in e)t.startsWith(\"__opacity_\")&&delete e[t]}var Mr={bg:{opacity:\"__opacity_bg\",color:\"backgroundColor\"},text:{opacity:\"__opacity_text\",color:\"color\"},border:{opacity:\"__opacity_border\",color:\"borderColor\"},borderTop:{opacity:\"__opacity_border\",color:\"borderTopColor\"},borderBottom:{opacity:\"__opacity_border\",color:\"borderBottomColor\"},borderLeft:{opacity:\"__opacity_border\",color:\"borderLeftColor\"},borderRight:{opacity:\"__opacity_border\",color:\"borderRightColor\"},shadow:{opacity:\"__opacity_shadow\",color:\"shadowColor\"},tint:{opacity:\"__opacity_tint\",color:\"tintColor\"}};function d0(e){let t=e;e=e.replace(p0,(o,a,u,f)=>a+a+u+u+f+f);let n=h0.exec(e);if(!n)return he(`invalid config hex color value: ${t}`),\"rgba(0, 0, 0, 1)\";let r=parseInt(n[1],16),i=parseInt(n[2],16),s=parseInt(n[3],16);return`rgba(${r}, ${i}, ${s}, 1)`}function cu(e,t){let n=t[e];if(Bi(n))return n;if(Ui(n)&&Bi(n.DEFAULT))return n.DEFAULT;let[r=\"\",...i]=e.split(\"-\");for(;r!==e;){let s=t[r];if(Ui(s))return cu(i.join(\"-\"),s);if(i.length===0)return\"\";r=`${r}-${i.shift()}`}return\"\"}var p0=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,h0=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;c();function pu(e,t){let[n,r]=Hi(e);if(n.match(/^(-?(\\d)+)?$/))return m0(n,r,t==null?void 0:t.borderWidth);if(n=n.replace(/^-/,\"\"),[\"dashed\",\"solid\",\"dotted\"].includes(n))return v({borderStyle:n});let s=\"border\";switch(r){case\"Bottom\":s=\"borderBottom\";break;case\"Top\":s=\"borderTop\";break;case\"Left\":s=\"borderLeft\";break;case\"Right\":s=\"borderRight\";break}let o=index_wasm_et(s,n,t==null?void 0:t.borderColor);if(o)return o;let a=`border${r===\"All\"?\"\":r}Width`;n=n.replace(/^-/,\"\");let u=n.slice(1,-1),f=Se(a,u);return typeof(f==null?void 0:f.style[a])!=\"number\"?null:f}function m0(e,t,n){if(!n)return null;e=e.replace(/^-/,\"\");let i=n[e===\"\"?\"DEFAULT\":e];if(i===void 0)return null;let s=`border${t===\"All\"?\"\":t}Width`;return De(s,i)}function hu(e,t){if(!t)return null;let[n,r]=Hi(e);n=n.replace(/^-/,\"\"),n===\"\"&&(n=\"DEFAULT\");let i=`border${r===\"All\"?\"\":r}Radius`,s=t[n];if(s)return du(De(i,s));let o=Se(i,n);return typeof(o==null?void 0:o.style[i])!=\"number\"?null:du(o)}function du(e){if((e==null?void 0:e.kind)!==\"complete\")return e;let t=e.style.borderTopRadius;t!==void 0&&(e.style.borderTopLeftRadius=t,e.style.borderTopRightRadius=t,delete e.style.borderTopRadius);let n=e.style.borderBottomRadius;n!==void 0&&(e.style.borderBottomLeftRadius=n,e.style.borderBottomRightRadius=n,delete e.style.borderBottomRadius);let r=e.style.borderLeftRadius;r!==void 0&&(e.style.borderBottomLeftRadius=r,e.style.borderTopLeftRadius=r,delete e.style.borderLeftRadius);let i=e.style.borderRightRadius;return i!==void 0&&(e.style.borderBottomRightRadius=i,e.style.borderTopRightRadius=i,delete e.style.borderRightRadius),e}c();function ut(e,t,n,r){let i=null;e===\"inset\"&&(t=t.replace(/^(x|y)-/,(a,u)=>(i=u===\"x\"?\"x\":\"y\",\"\")));let s=r==null?void 0:r[t];if(s){let a=Ee(s,{isNegative:n});if(a!==null)return mu(e,i,a)}let o=Ze(t,{isNegative:n});return o!==null?mu(e,i,o):null}function mu(e,t,n){if(e!==\"inset\")return v({[e]:n});switch(t){case null:return v({top:n,left:n,right:n,bottom:n});case\"y\":return v({top:n,bottom:n});case\"x\":return v({left:n,right:n})}}c();function er(e,t,n){var r;t=t.replace(/^-/,\"\");let i=t===\"\"?\"DEFAULT\":t,s=Number((r=n==null?void 0:n[i])!==null&&r!==void 0?r:t);return Number.isNaN(s)?null:v({[`flex${e}`]:s})}function gu(e,t){var n,r;if(e=(t==null?void 0:t[e])||e,[\"min-content\",\"revert\",\"unset\"].includes(e))return null;if(e.match(/^\\d+(\\.\\d+)?$/))return v({flexGrow:Number(e),flexBasis:\"0%\"});let i=e.match(/^(\\d+)\\s+(\\d+)$/);if(i)return v({flexGrow:Number(i[1]),flexShrink:Number(i[2])});if(i=e.match(/^(\\d+)\\s+([^ ]+)$/),i){let s=Ee((n=i[2])!==null&&n!==void 0?n:\"\");return s?v({flexGrow:Number(i[1]),flexBasis:s}):null}if(i=e.match(/^(\\d+)\\s+(\\d+)\\s+(.+)$/),i){let s=Ee((r=i[3])!==null&&r!==void 0?r:\"\");return s?v({flexGrow:Number(i[1]),flexShrink:Number(i[2]),flexBasis:s}):null}return null}c();function Zi(e,t,n={},r){let i=r==null?void 0:r[t];return i!==void 0?De(e,i,n):Se(e,t,n)}function tr(e,t,n={},r){let i=Ee(r==null?void 0:r[t],n);return i?v({[e]:i}):(t===\"screen\"&&(t=e.includes(\"Width\")?\"100vw\":\"100vh\"),Se(e,t,n))}c();function vu(e,t,n){let r=n==null?void 0:n[e];if(r){let i=ne(r,{isNegative:t});if(!i)return null;let[s,o]=i;if(o===B.em)return g0(s);if(o===B.percent)return he(\"percentage-based letter-spacing configuration currently unsupported, switch to `em`s, or open an issue if you'd like to see support added.\"),null;let a=Ge(s,o,{isNegative:t});return a!==null?v({letterSpacing:a}):null}return Se(\"letterSpacing\",e,{isNegative:t})}function g0(e){return{kind:\"dependent\",complete(t){let n=t.fontSize;if(typeof n!=\"number\"||Number.isNaN(n))return\"tracking-X relative letter spacing classes require font-size to be set\";t.letterSpacing=Math.round((e*n+Number.EPSILON)*100)/100}}}c();function bu(e,t){let n=t==null?void 0:t[e];if(n){let i=ne(String(n));if(i)return v({opacity:i[0]})}let r=ne(e);return r?v({opacity:r[0]/100}):null}c();function yu(e){let t=parseInt(e,10);return Number.isNaN(t)?null:{kind:\"complete\",style:{shadowOpacity:t/100}}}function xu(e){if(e.includes(\"/\")){let[n=\"\",r=\"\"]=e.split(\"/\",2),i=eo(n),s=eo(r);return i===null||s===null?null:{kind:\"complete\",style:{shadowOffset:{width:i,height:s}}}}let t=eo(e);return t===null?null:{kind:\"complete\",style:{shadowOffset:{width:t,height:t}}}}function eo(e){let t=Ze(e);return typeof t==\"number\"?t:null}var lt=class{constructor(t,n={},r,i,s){var o,a,u,f,l,p;this.config=n,this.cache=r,this.position=0,this.isNull=!1,this.isNegative=!1,this.context={},this.context.device=i;let y=t.trim().split(\":\"),h=[];y.length===1?this.string=t:(this.string=(o=y.pop())!==null&&o!==void 0?o:\"\",h=y),this.char=this.string[0];let d=Ji((a=this.config.theme)===null||a===void 0?void 0:a.screens);for(let m of h)if(d[m]){let b=(u=d[m])===null||u===void 0?void 0:u[2];b!==void 0&&(this.order=((f=this.order)!==null&&f!==void 0?f:0)+b);let g=(l=i.windowDimensions)===null||l===void 0?void 0:l.width;if(g){let[_,O]=(p=d[m])!==null&&p!==void 0?p:[0,0];(g<=_||g>O)&&(this.isNull=!0)}else this.isNull=!0}else ru(m)?this.isNull=m!==s:nu(m)?i.windowDimensions?(i.windowDimensions.width>i.windowDimensions.height?\"landscape\":\"portrait\")!==m?this.isNull=!0:this.incrementOrder():this.isNull=!0:m===\"retina\"?i.pixelDensity===2?this.incrementOrder():this.isNull=!0:m===\"dark\"?i.colorScheme!==\"dark\"?this.isNull=!0:this.incrementOrder():this.handlePossibleArbitraryBreakpointPrefix(m)||(this.isNull=!0)}parse(){if(this.isNull)return{kind:\"null\"};let t=this.cache.getIr(this.rest);if(t)return t;this.parseIsNegative();let n=this.parseUtility();return n?this.order!==void 0?{kind:\"ordered\",order:this.order,styleIr:n}:n:{kind:\"null\"}}parseUtility(){var t,n,r,i,s;let o=this.config.theme,a=null;switch(this.char){case\"m\":case\"p\":{let u=this.peekSlice(1,3).match(/^(t|b|r|l|x|y)?-/);if(u){let f=this.char===\"m\"?\"margin\":\"padding\";this.advance(((n=(t=u[0])===null||t===void 0?void 0:t.length)!==null&&n!==void 0?n:0)+1);let l=Vi(u[1]),p=Qi(f,l,this.isNegative,this.rest,(r=this.config.theme)===null||r===void 0?void 0:r[f]);if(p)return p}}}if(this.consumePeeked(\"h-\")&&(a=Zi(\"height\",this.rest,this.context,o==null?void 0:o.height),a)||this.consumePeeked(\"w-\")&&(a=Zi(\"width\",this.rest,this.context,o==null?void 0:o.width),a)||this.consumePeeked(\"min-w-\")&&(a=tr(\"minWidth\",this.rest,this.context,o==null?void 0:o.minWidth),a)||this.consumePeeked(\"min-h-\")&&(a=tr(\"minHeight\",this.rest,this.context,o==null?void 0:o.minHeight),a)||this.consumePeeked(\"max-w-\")&&(a=tr(\"maxWidth\",this.rest,this.context,o==null?void 0:o.maxWidth),a)||this.consumePeeked(\"max-h-\")&&(a=tr(\"maxHeight\",this.rest,this.context,o==null?void 0:o.maxHeight),a)||this.consumePeeked(\"leading-\")&&(a=Xi(this.rest,o==null?void 0:o.lineHeight),a)||this.consumePeeked(\"text-\")&&(a=Yi(this.rest,o==null?void 0:o.fontSize,this.context),a||(a=index_wasm_et(\"text\",this.rest,o==null?void 0:o.textColor),a)||this.consumePeeked(\"opacity-\")&&(a=Zt(\"text\",this.rest),a))||this.consumePeeked(\"font-\")&&(a=Ki(this.rest,o==null?void 0:o.fontFamily),a)||this.consumePeeked(\"aspect-\")&&(this.consumePeeked(\"ratio-\")&&he(\"`aspect-ratio-{ratio}` is deprecated, use `aspect-{ratio}` instead\"),a=De(\"aspectRatio\",this.rest,{fractions:!0}),a)||this.consumePeeked(\"tint-\")&&(a=index_wasm_et(\"tint\",this.rest,o==null?void 0:o.colors),a)||this.consumePeeked(\"bg-\")&&(a=index_wasm_et(\"bg\",this.rest,o==null?void 0:o.backgroundColor),a||this.consumePeeked(\"opacity-\")&&(a=Zt(\"bg\",this.rest),a))||this.consumePeeked(\"border\")&&(a=pu(this.rest,o),a||this.consumePeeked(\"-opacity-\")&&(a=Zt(\"border\",this.rest),a))||this.consumePeeked(\"rounded\")&&(a=hu(this.rest,o==null?void 0:o.borderRadius),a)||this.consumePeeked(\"bottom-\")&&(a=ut(\"bottom\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"top-\")&&(a=ut(\"top\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"left-\")&&(a=ut(\"left\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"right-\")&&(a=ut(\"right\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"inset-\")&&(a=ut(\"inset\",this.rest,this.isNegative,o==null?void 0:o.inset),a)||this.consumePeeked(\"flex-\")&&(this.consumePeeked(\"grow\")?a=er(\"Grow\",this.rest,o==null?void 0:o.flexGrow):this.consumePeeked(\"shrink\")?a=er(\"Shrink\",this.rest,o==null?void 0:o.flexShrink):a=gu(this.rest,o==null?void 0:o.flex),a)||this.consumePeeked(\"grow\")&&(a=er(\"Grow\",this.rest,o==null?void 0:o.flexGrow),a)||this.consumePeeked(\"shrink\")&&(a=er(\"Shrink\",this.rest,o==null?void 0:o.flexShrink),a)||this.consumePeeked(\"shadow-color-opacity-\")&&(a=Zt(\"shadow\",this.rest),a)||this.consumePeeked(\"shadow-opacity-\")&&(a=yu(this.rest),a)||this.consumePeeked(\"shadow-offset-\")&&(a=xu(this.rest),a)||this.consumePeeked(\"shadow-radius-\")&&(a=Se(\"shadowRadius\",this.rest),a)||this.consumePeeked(\"shadow-\")&&(a=index_wasm_et(\"shadow\",this.rest,o==null?void 0:o.colors),a))return a;if(this.consumePeeked(\"elevation-\")){let u=parseInt(this.rest,10);if(!Number.isNaN(u))return v({elevation:u})}if(this.consumePeeked(\"opacity-\")&&(a=bu(this.rest,o==null?void 0:o.opacity),a)||this.consumePeeked(\"tracking-\")&&(a=vu(this.rest,this.isNegative,o==null?void 0:o.letterSpacing),a))return a;if(this.consumePeeked(\"z-\")){let u=Number((s=(i=o==null?void 0:o.zIndex)===null||i===void 0?void 0:i[this.rest])!==null&&s!==void 0?s:this.rest);if(!Number.isNaN(u))return v({zIndex:u})}return he(`\\`${this.rest}\\` unknown or invalid utility`),null}handlePossibleArbitraryBreakpointPrefix(t){var n;if(t[0]!==\"m\")return!1;let r=t.match(/^(min|max)-(w|h)-\\[([^\\]]+)\\]$/);if(!r)return!1;if(!(!((n=this.context.device)===null||n===void 0)&&n.windowDimensions))return this.isNull=!0,!0;let i=this.context.device.windowDimensions,[,s=\"\",o=\"\",a=\"\"]=r,u=o===\"w\"?i.width:i.height,f=ne(a,this.context);if(f===null)return this.isNull=!0,!0;let[l,p]=f;return p!==\"px\"&&(this.isNull=!0),(s===\"min\"?u>=l:u<=l)?this.incrementOrder():this.isNull=!0,!0}advance(t=1){this.position+=t,this.char=this.string[this.position]}get rest(){return this.peekSlice(0,this.string.length)}peekSlice(t,n){return this.string.slice(this.position+t,this.position+n)}consumePeeked(t){return this.peekSlice(0,t.length)===t?(this.advance(t.length),!0):!1}parseIsNegative(){this.char===\"-\"&&(this.advance(),this.isNegative=!0,this.context.isNegative=!0)}incrementOrder(){var t;this.order=((t=this.order)!==null&&t!==void 0?t:0)+1}};c();function wu(e){let t=[],n=null;return e.forEach(r=>{if(typeof r==\"string\")t=[...t,...to(r)];else if(Array.isArray(r))t=[...t,...r.flatMap(to)];else if(typeof r==\"object\"&&r!==null)for(let[i,s]of Object.entries(r))typeof s==\"boolean\"?t=[...t,...s?to(i):[]]:n?n[i]=s:n={[i]:s}}),[t.filter(Boolean).filter(v0),n]}function to(e){return e.trim().split(/\\s+/)}function v0(e,t,n){return n.indexOf(e)===t}c();function _u(e){var t;return(t=e==null?void 0:e.reduce((n,r)=>({...n,...b0(r.handler)}),{}))!==null&&t!==void 0?t:{}}function b0(e){let t={};return e({addUtilities:n=>{t=n},...y0}),t}function Pe(e){throw new Error(`tailwindcss plugin function argument object prop \"${e}\" not implemented`)}var y0={addComponents:Pe,addBase:Pe,addVariant:Pe,e:Pe,prefix:Pe,theme:Pe,variants:Pe,config:Pe,corePlugins:Pe,matchUtilities:Pe,postcss:null};function ku(e,t){let n=(0,Su.default)(x0(e)),r={},i=_u(n.plugins),s={},o=Object.entries(i).map(([d,m])=>typeof m==\"string\"?(s[d]=m,[d,{kind:\"null\"}]):[d,v(m)]).filter(([,d])=>d.kind!==\"null\");function a(){return[r.windowDimensions?`w${r.windowDimensions.width}`:!1,r.windowDimensions?`h${r.windowDimensions.height}`:!1,r.fontScale?`fs${r.fontScale}`:!1,r.colorScheme===\"dark\"?\"dark\":!1,r.pixelDensity===2?\"retina\":!1].filter(Boolean).join(\"--\")||\"default\"}let u=a(),f={};function l(){let d=f[u];if(d)return d;let m=new Kt(o);return f[u]=m,m}function p(...d){let m=l(),b={},g=[],_=[],[O,A]=wu(d),L=O.join(\" \"),N=m.getStyle(L);if(N)return{...N,...A||{}};for(let C of O){let D=m.getIr(C);if(!D&&C in s){let z=p(s[C]);m.setIr(C,v(z)),b={...b,...z};continue}switch(D=new lt(C,n,m,r,t).parse(),D.kind){case\"complete\":b={...b,...D.style},m.setIr(C,D);break;case\"dependent\":g.push(D);break;case\"ordered\":_.push(D);break;case\"null\":m.setIr(C,D);break}}if(_.length>0){_.sort((C,D)=>C.order-D.order);for(let C of _)switch(C.styleIr.kind){case\"complete\":b={...b,...C.styleIr.style};break;case\"dependent\":g.push(C.styleIr);break}}if(g.length>0){for(let C of g){let D=C.complete(b);D&&he(D)}fu(b)}return L!==\"\"&&m.setStyle(L,b),A&&(b={...b,...A}),b}function y(d){let m=p(d.split(/\\s+/g).map(b=>b.replace(/^(bg|text|border)-/,\"\")).map(b=>`bg-${b}`).join(\" \"));return typeof m.backgroundColor==\"string\"?m.backgroundColor:void 0}let h=(d,...m)=>{let b=\"\";return d.forEach((g,_)=>{var O;b+=g+((O=m[_])!==null&&O!==void 0?O:\"\")}),p(b)};return h.style=p,h.color=y,h.prefixMatch=(...d)=>{let m=d.sort().join(\":\"),b=l(),g=b.getPrefixMatch(m);if(g!==void 0)return g;let A=new lt(`${m}:flex`,n,b,r,t).parse().kind!==\"null\";return b.setPrefixMatch(m,A),A},h.setWindowDimensions=d=>{r.windowDimensions=d,u=a()},h.setFontScale=d=>{r.fontScale=d,u=a()},h.setPixelDensity=d=>{r.pixelDensity=d,u=a()},h.setColorScheme=d=>{r.colorScheme=d,u=a()},h}function x0(e){return{...e,content:[\"_no_warnings_please\"]}}var _0={plugins:[{handler:({addUtilities:e})=>{e({\"shadow-sm\":{boxShadow:\"0 1px 2px 0 rgb(0 0 0 / 0.05)\"},shadow:{boxShadow:\"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\"},\"shadow-md\":{boxShadow:\"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\"},\"shadow-lg\":{boxShadow:\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\"},\"shadow-xl\":{boxShadow:\"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\"},\"shadow-2xl\":{boxShadow:\"0 25px 50px -12px rgb(0 0 0 / 0.25)\"},\"shadow-inner\":{boxShadow:\"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\"},\"shadow-none\":{boxShadow:\"0 0 #0000\"}})}}]};function S0(){return ku(_0,\"web\")}var Fr;function ro({width:e,height:t}){return Fr||(Fr=S0()),Fr.setWindowDimensions({width:+e,height:+t}),Fr}var no=new WeakMap;async function Tu(e,t){let n=Ie();if(!n||!n.Node)throw new Error(\"Satori is not initialized: expect `yoga` to be loaded, got \"+n);t.fonts=t.fonts||[];let r;no.has(t.fonts)?r=no.get(t.fonts):no.set(t.fonts,r=new xt(t.fonts));let i=\"width\"in t?t.width:void 0,s=\"height\"in t?t.height:void 0,o=n.Node.create();i&&o.setWidth(i),s&&o.setHeight(s),o.setFlexDirection(n.FLEX_DIRECTION_ROW),o.setFlexWrap(n.WRAP_WRAP),o.setAlignContent(n.ALIGN_AUTO),o.setAlignItems(n.ALIGN_FLEX_START),o.setJustifyContent(n.JUSTIFY_FLEX_START),o.setOverflow(n.OVERFLOW_HIDDEN);let a={...t.graphemeImages},u=yt(e,{id:\"id\",parentStyle:{},inheritedStyle:{fontSize:16,fontWeight:\"normal\",fontFamily:\"serif\",fontStyle:\"normal\",lineHeight:1.2,color:\"black\",opacity:1,whiteSpace:\"normal\",_viewportWidth:i,_viewportHeight:s},parent:o,font:r,embedFont:t.embedFont,debug:t.debug,graphemeImages:a,canLoadAdditionalAssets:!!t.loadAdditionalAsset,getTwStyles:(h,d)=>{let b={...ro({width:i,height:s})([h])};return typeof b.lineHeight==\"number\"&&(b.lineHeight=b.lineHeight/(+b.fontSize||d.fontSize||16)),b.shadowColor&&b.boxShadow&&(b.boxShadow=b.boxShadow.replace(/rgba?\\([^)]+\\)/,b.shadowColor)),b}}),f=(await u.next()).value;if(t.loadAdditionalAsset&&f.length){f=Array.from(new Set(je(f.join(\"\"),\"grapheme\")));let h={};f.forEach(b=>{let g=Go(b);h[g]=h[g]||[],g===\"emoji\"?h[g].push(b):h[g][0]=(h[g][0]||\"\")+b});let d=[],m={};await Promise.all(Object.entries(h).flatMap(([b,g])=>g.map(_=>t.loadAdditionalAsset(b,_).then(O=>{typeof O==\"string\"?m[_]=O:O&&d.push(O)})))),r.addFonts(d),Object.assign(a,m)}await u.next(),o.calculateLayout(i,s,n.DIRECTION_LTR);let l=(await u.next([0,0])).value,p=o.getComputedWidth(),y=o.getComputedHeight();return o.freeRecursive(),mn({width:p,height:y,content:l})}\n//# sourceMappingURL=index.wasm.js.map\n;// CONCATENATED MODULE: ./node_modules/yoga-wasm-web/dist/entry.js\nvar L=(T,t)=>()=>(t||T((t={exports:{}}).exports,t),t.exports);var entry_R=L((D,u)=>{var S={ALIGN_COUNT:8,ALIGN_AUTO:0,ALIGN_FLEX_START:1,ALIGN_CENTER:2,ALIGN_FLEX_END:3,ALIGN_STRETCH:4,ALIGN_BASELINE:5,ALIGN_SPACE_BETWEEN:6,ALIGN_SPACE_AROUND:7,DIMENSION_COUNT:2,DIMENSION_WIDTH:0,DIMENSION_HEIGHT:1,DIRECTION_COUNT:3,DIRECTION_INHERIT:0,DIRECTION_LTR:1,DIRECTION_RTL:2,DISPLAY_COUNT:2,DISPLAY_FLEX:0,DISPLAY_NONE:1,EDGE_COUNT:9,EDGE_LEFT:0,EDGE_TOP:1,EDGE_RIGHT:2,EDGE_BOTTOM:3,EDGE_START:4,EDGE_END:5,EDGE_HORIZONTAL:6,EDGE_VERTICAL:7,EDGE_ALL:8,EXPERIMENTAL_FEATURE_COUNT:1,EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS:0,FLEX_DIRECTION_COUNT:4,FLEX_DIRECTION_COLUMN:0,FLEX_DIRECTION_COLUMN_REVERSE:1,FLEX_DIRECTION_ROW:2,FLEX_DIRECTION_ROW_REVERSE:3,JUSTIFY_COUNT:6,JUSTIFY_FLEX_START:0,JUSTIFY_CENTER:1,JUSTIFY_FLEX_END:2,JUSTIFY_SPACE_BETWEEN:3,JUSTIFY_SPACE_AROUND:4,JUSTIFY_SPACE_EVENLY:5,LOG_LEVEL_COUNT:6,LOG_LEVEL_ERROR:0,LOG_LEVEL_WARN:1,LOG_LEVEL_INFO:2,LOG_LEVEL_DEBUG:3,LOG_LEVEL_VERBOSE:4,LOG_LEVEL_FATAL:5,MEASURE_MODE_COUNT:3,MEASURE_MODE_UNDEFINED:0,MEASURE_MODE_EXACTLY:1,MEASURE_MODE_AT_MOST:2,NODE_TYPE_COUNT:2,NODE_TYPE_DEFAULT:0,NODE_TYPE_TEXT:1,OVERFLOW_COUNT:3,OVERFLOW_VISIBLE:0,OVERFLOW_HIDDEN:1,OVERFLOW_SCROLL:2,POSITION_TYPE_COUNT:2,POSITION_TYPE_RELATIVE:0,POSITION_TYPE_ABSOLUTE:1,PRINT_OPTIONS_COUNT:3,PRINT_OPTIONS_LAYOUT:1,PRINT_OPTIONS_STYLE:2,PRINT_OPTIONS_CHILDREN:4,UNIT_COUNT:4,UNIT_UNDEFINED:0,UNIT_POINT:1,UNIT_PERCENT:2,UNIT_AUTO:3,WRAP_COUNT:3,WRAP_NO_WRAP:0,WRAP_WRAP:1,WRAP_WRAP_REVERSE:2};u.exports=S});var U=L((P,A)=>{var _=entry_R(),a=class{left;right;top;bottom;width;height;constructor(t,N,E,e,s,o){this.left=t,this.right=N,this.top=E,this.bottom=e,this.width=s,this.height=o}fromJS(t){t(this.left,this.right,this.top,this.bottom,this.width,this.height)}toString(){return`<Layout#${this.left}:${this.right};${this.top}:${this.bottom};${this.width}:${this.height}>`}},h=class{static fromJS({width:t,height:N}){return new h(t,N)}width;height;constructor(t,N){this.width=t,this.height=N}fromJS(t){t(this.width,this.height)}toString(){return`<Size#${this.width}x${this.height}>`}},n=class{unit;value;constructor(t,N){this.unit=t,this.value=N}fromJS(t){t(this.unit,this.value)}toString(){switch(this.unit){case _.UNIT_POINT:return String(this.value);case _.UNIT_PERCENT:return`${this.value}%`;case _.UNIT_AUTO:return\"auto\";default:return`${this.value}?`}}valueOf(){return this.value}};function O(T,t,N){let E=T[t];T[t]=function(...e){return N.call(this,E,...e)}}A.exports=(T,t)=>{for(let E of[\"setPosition\",\"setMargin\",\"setFlexBasis\",\"setWidth\",\"setHeight\",\"setMinWidth\",\"setMinHeight\",\"setMaxWidth\",\"setMaxHeight\",\"setPadding\"]){let e={[_.UNIT_POINT]:t.Node.prototype[E],[_.UNIT_PERCENT]:t.Node.prototype[`${E}Percent`],[_.UNIT_AUTO]:t.Node.prototype[`${E}Auto`]};O(t.Node.prototype,E,function(s,...o){let i=o.pop(),I,r;if(i===\"auto\")I=_.UNIT_AUTO,r=void 0;else if(i instanceof n)I=i.unit,r=i.valueOf();else if(I=typeof i==\"string\"&&i.endsWith(\"%\")?_.UNIT_PERCENT:_.UNIT_POINT,r=parseFloat(i),!Number.isNaN(i)&&Number.isNaN(r))throw new Error(`Invalid value ${i} for ${E}`);if(!e[I])throw new Error(`Failed to execute \"${E}\": Unsupported unit '${i}'`);return r!==void 0?e[I].call(this,...o,r):e[I].call(this,...o)})}O(t.Config.prototype,\"free\",function(){t.Config.destroy(this)}),O(t.Node,\"create\",function(E,e){return e?t.Node.createWithConfig(e):t.Node.createDefault()}),O(t.Node.prototype,\"free\",function(){t.Node.destroy(this)}),O(t.Node.prototype,\"freeRecursive\",function(){for(let E=0,e=this.getChildCount();E<e;++E)this.getChild(0).freeRecursive();this.free()});function N(E){return t.MeasureCallback.implement({measure:E})}return O(t.Node.prototype,\"setMeasureFunc\",function(E,e){E.call(this,N(e))}),O(t.Node.prototype,\"calculateLayout\",function(E,e=NaN,s=NaN,o=_.DIRECTION_LTR){return E.call(this,e,s,o)}),{Config:t.Config,Node:t.Node,Layout:T(\"Layout\",a),Size:T(\"Size\",h),Value:T(\"Value\",n),..._}}});/* harmony default export */ const entry = (U());\n\n;// CONCATENATED MODULE: ./node_modules/yoga-wasm-web/dist/yoga.mjs\n\nvar yoga = (() => {\n  var _scriptDir = \"file:///C:/Users/Devilking6105/Desktop/nft-pfp/node_modules/yoga-wasm-web/dist/yoga.mjs\";\n  \n  return (\nfunction(yoga) {\n  yoga = yoga || {};\n\n\nvar l;l||(l=typeof yoga !== 'undefined' ? yoga : {});var aa,ba;l.ready=new Promise(function(b,a){aa=b;ba=a});var da=Object.assign({},l),q=\"\";\"undefined\"!=typeof document&&document.currentScript&&(q=document.currentScript.src);_scriptDir&&(q=_scriptDir);0!==q.indexOf(\"blob:\")?q=q.substr(0,q.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):q=\"\";var ea=console.log.bind(console),v=console.warn.bind(console);Object.assign(l,da);da=null;\"object\"!=typeof WebAssembly&&w(\"no native wasm support detected\");\nvar fa,ha=!1;function ia(b,a,c,d){var e={string:function(h){var n=0;if(null!==h&&void 0!==h&&0!==h){var p=(h.length<<2)+1;n=ja(p);ka(h,n,p)}return n},array:function(h){var n=ja(h.length);x.set(h,n);return n}};b=l[\"_\"+b];var f=[],k=0;if(d)for(var g=0;g<d.length;g++){var m=e[c[g]];m?(0===k&&(k=la()),f[g]=m(d[g])):f[g]=d[g]}c=b.apply(null,f);return c=function(h){0!==k&&ma(k);return\"string\"===a?h?na(y,h):\"\":\"boolean\"===a?!!h:h}(c)}\nfunction na(b,a,c){c=a+c;for(var d=\"\";!(a>=c);){var e=b[a++];if(!e)break;if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var k=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|k:(e&7)<<18|f<<12|k<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}\nfunction ka(b,a,c){var d=y;if(0<c){c=a+c-1;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var k=b.charCodeAt(++e);f=65536+((f&1023)<<10)|k&1023}if(127>=f){if(a>=c)break;d[a++]=f}else{if(2047>=f){if(a+1>=c)break;d[a++]=192|f>>6}else{if(65535>=f){if(a+2>=c)break;d[a++]=224|f>>12}else{if(a+3>=c)break;d[a++]=240|f>>18;d[a++]=128|f>>12&63}d[a++]=128|f>>6&63}d[a++]=128|f&63}}d[a]=0}}\nfunction oa(b,a){for(var c=\"\",d=0;!(d>=a/2);++d){var e=A[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}function pa(b,a,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)A[a>>1]=b.charCodeAt(e),a+=2;A[a>>1]=0;return a-d}function qa(b){return 2*b.length}\nfunction ra(b,a){for(var c=0,d=\"\";!(c>=a/4);){var e=B[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}function sa(b,a,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var k=b.charCodeAt(++e);f=65536+((f&1023)<<10)|k&1023}B[a>>2]=f;a+=4;if(a+4>c)break}B[a>>2]=0;return a-d}\nfunction ta(b){for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a}var ua,x,y,A,va,B,D,wa,xa;function ya(){var b=fa.buffer;ua=b;l.HEAP8=x=new Int8Array(b);l.HEAP16=A=new Int16Array(b);l.HEAP32=B=new Int32Array(b);l.HEAPU8=y=new Uint8Array(b);l.HEAPU16=va=new Uint16Array(b);l.HEAPU32=D=new Uint32Array(b);l.HEAPF32=wa=new Float32Array(b);l.HEAPF64=xa=new Float64Array(b)}var E,za=[],Aa=[],Ba=[],F=0,Ca=null,G=null;\nfunction w(b){b=\"Aborted(\"+b+\")\";v(b);ha=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ba(b);throw b;}function Da(){return H.startsWith(\"data:application/octet-stream;base64,\")}var H;if(l.locateFile){if(H=\"yoga.wasm\",!Da()){var Ea=H;H=l.locateFile?l.locateFile(Ea,q):q+Ea}}else H=(\"\").toString();function Fa(){try{throw\"both async and sync fetching of the wasm failed\";}catch(b){w(b)}}\nfunction Ga(){return\"function\"==typeof fetch?fetch(H,{credentials:\"same-origin\"}).then(function(b){if(!b.ok)throw\"failed to load wasm binary file at '\"+H+\"'\";return b.arrayBuffer()}).catch(function(){return Fa()}):Promise.resolve().then(function(){return Fa()})}var I,Ha;function Ia(b){for(;0<b.length;){var a=b.shift();if(\"function\"==typeof a)a(l);else{var c=a.Qa;\"number\"==typeof c?void 0===a.ka?E.get(c)():E.get(c)(a.ka):c(void 0===a.ka?null:a.ka)}}}\nfunction Ja(b){this.U=b-24;this.ya=function(a){D[this.U+4>>2]=a};this.va=function(a){D[this.U+8>>2]=a};this.wa=function(){B[this.U>>2]=0};this.ua=function(){x[this.U+12>>0]=0};this.xa=function(){x[this.U+13>>0]=0};this.sa=function(a,c){this.ta();this.ya(a);this.va(c);this.wa();this.ua();this.xa()};this.ta=function(){D[this.U+16>>2]=0}}var Ka=0;function La(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?\"_\"+b:b}\nfunction Ma(b,a){b=La(b);return function(){null;return a.apply(this,arguments)}}var K=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Na=[];function Oa(b){var a=Error,c=Ma(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var L=void 0;\nfunction M(b){throw new L(b);}var N=b=>{b||M(\"Cannot use deleted val. handle = \"+b);return K[b].value},Pa=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var a=Na.length?Na.pop():K.length;K[a]={na:1,value:b};return a}},Qa=void 0,Ra=void 0;function O(b){for(var a=\"\";y[b];)a+=Ra[y[b++]];return a}var P=[];function Sa(){for(;P.length;){var b=P.pop();b.T.fa=!1;b[\"delete\"]()}}var Ta=void 0,Q={};\nfunction Ua(b,a){for(void 0===a&&M(\"ptr should not be undefined\");b.X;)a=b.ha(a),b=b.X;return a}var R={};function Va(b){b=Wa(b);var a=O(b);S(b);return a}function Xa(b,a){var c=R[b];void 0===c&&M(a+\" has unknown type \"+Va(b));return c}function Ya(){}var Za=!1;function $a(b){--b.count.value;0===b.count.value&&(b.Z?b.aa.ba(b.Z):b.W.V.ba(b.U))}function ab(b,a,c){if(a===c)return b;if(void 0===c.X)return null;b=ab(b,a,c.X);return null===b?null:c.Ba(b)}var bb={};function cb(b,a){a=Ua(b,a);return Q[a]}\nvar db=void 0;function eb(b){throw new db(b);}function fb(b,a){a.W&&a.U||eb(\"makeClassHandle requires ptr and ptrType\");!!a.aa!==!!a.Z&&eb(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return T(Object.create(b,{T:{value:a}}))}function T(b){if(\"undefined\"===typeof FinalizationRegistry)return T=a=>a,b;Za=new FinalizationRegistry(a=>{$a(a.T)});T=a=>{var c=a.T;c.Z&&Za.register(a,{T:c},a);return a};Ya=a=>{Za.unregister(a)};return T(b)}var gb={};\nfunction hb(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function ib(b){return this.fromWireType(D[b>>2])}var U={},jb={};function V(b,a,c){function d(g){g=c(g);g.length!==b.length&&eb(\"Mismatched type converter count\");for(var m=0;m<b.length;++m)W(b[m],g[m])}b.forEach(function(g){jb[g]=a});var e=Array(a.length),f=[],k=0;a.forEach((g,m)=>{R.hasOwnProperty(g)?e[m]=R[g]:(f.push(g),U.hasOwnProperty(g)||(U[g]=[]),U[g].push(()=>{e[m]=R[g];++k;k===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction kb(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+b);}}\nfunction W(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=a.name;b||M('type \"'+d+'\" must have a positive integer typeid pointer');if(R.hasOwnProperty(b)){if(c.Ia)return;M(\"Cannot register type '\"+d+\"' twice\")}R[b]=a;delete jb[b];U.hasOwnProperty(b)&&(a=U[b],delete U[b],a.forEach(e=>e()))}function lb(b){M(b.T.W.V.name+\" instance already deleted\")}function X(){}\nfunction mb(b,a,c){if(void 0===b[a].Y){var d=b[a];b[a]=function(){b[a].Y.hasOwnProperty(arguments.length)||M(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+b[a].Y+\")!\");return b[a].Y[arguments.length].apply(this,arguments)};b[a].Y=[];b[a].Y[d.ea]=d}}\nfunction nb(b,a){l.hasOwnProperty(b)?(M(\"Cannot register public name '\"+b+\"' twice\"),mb(l,b,b),l.hasOwnProperty(void 0)&&M(\"Cannot register multiple overloads of a function with the same number of arguments (undefined)!\"),l[b].Y[void 0]=a):l[b]=a}function qb(b,a,c,d,e,f,k,g){this.name=b;this.constructor=a;this.ca=c;this.ba=d;this.X=e;this.Da=f;this.ha=k;this.Ba=g;this.qa=[]}\nfunction rb(b,a,c){for(;a!==c;)a.ha||M(\"Expected null or instance of \"+c.name+\", got an instance of \"+a.name),b=a.ha(b),a=a.X;return b}function sb(b,a){if(null===a)return this.la&&M(\"null is not a valid \"+this.name),0;a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);return rb(a.T.U,a.T.W.V,this.V)}\nfunction ub(b,a){if(null===a){this.la&&M(\"null is not a valid \"+this.name);if(this.ja){var c=this.ma();null!==b&&b.push(this.ba,c);return c}return 0}a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.ia&&a.T.W.ia&&M(\"Cannot convert argument of type \"+(a.T.aa?a.T.aa.name:a.T.W.name)+\" to parameter type \"+this.name);c=rb(a.T.U,a.T.W.V,this.V);if(this.ja)switch(void 0===a.T.Z&&M(\"Passing raw pointer to smart pointer is illegal\"),\nthis.Pa){case 0:a.T.aa===this?c=a.T.Z:M(\"Cannot convert argument of type \"+(a.T.aa?a.T.aa.name:a.T.W.name)+\" to parameter type \"+this.name);break;case 1:c=a.T.Z;break;case 2:if(a.T.aa===this)c=a.T.Z;else{var d=a.clone();c=this.La(c,Pa(function(){d[\"delete\"]()}));null!==b&&b.push(this.ba,c)}break;default:M(\"Unsupporting sharing policy\")}return c}\nfunction vb(b,a){if(null===a)return this.la&&M(\"null is not a valid \"+this.name),0;a.T||M('Cannot pass \"'+tb(a)+'\" as a '+this.name);a.T.U||M(\"Cannot pass deleted object as a pointer of type \"+this.name);a.T.W.ia&&M(\"Cannot convert argument of type \"+a.T.W.name+\" to parameter type \"+this.name);return rb(a.T.U,a.T.W.V,this.V)}\nfunction Y(b,a,c,d){this.name=b;this.V=a;this.la=c;this.ia=d;this.ja=!1;this.ba=this.La=this.ma=this.ra=this.Pa=this.Ka=void 0;void 0!==a.X?this.toWireType=ub:(this.toWireType=d?sb:vb,this.$=null)}function wb(b,a){l.hasOwnProperty(b)||eb(\"Replacing nonexistant public symbol\");l[b]=a;l[b].ea=void 0}\nfunction xb(b,a){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=l[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=E.get(a).apply(null,c);return d}}function Z(b,a){b=O(b);var c=b.includes(\"j\")?xb(b,a):E.get(a);\"function\"!=typeof c&&M(\"unknown function pointer with signature \"+b+\": \"+a);return c}var yb=void 0;\nfunction zb(b,a){function c(f){e[f]||R[f]||(jb[f]?jb[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new yb(b+\": \"+d.map(Va).join([\", \"]));}\nfunction Ab(b,a,c,d,e){var f=a.length;2>f&&M(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var k=null!==a[1]&&null!==c,g=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].$){g=!0;break}var m=\"void\"!==a[0].name,h=f-2,n=Array(h),p=[],r=[];return function(){arguments.length!==h&&M(\"function \"+b+\" called with \"+arguments.length+\" arguments, expected \"+h+\" args!\");r.length=0;p.length=k?2:1;p[0]=e;if(k){var u=a[1].toWireType(r,this);p[1]=u}for(var t=0;t<h;++t)n[t]=\na[t+2].toWireType(r,arguments[t]),p.push(n[t]);t=d.apply(null,p);if(g)hb(r);else for(var z=k?1:2;z<a.length;z++){var C=1===z?u:n[z-2];null!==a[z].$&&a[z].$(C)}u=m?a[0].fromWireType(t):void 0;return u}}function Bb(b,a){for(var c=[],d=0;d<b;d++)c.push(B[(a>>2)+d]);return c}function Cb(b){4<b&&0===--K[b].na&&(K[b]=void 0,Na.push(b))}\nfunction Db(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?x:y)[d])};case 1:return function(d){return this.fromWireType((c?A:va)[d>>1])};case 2:return function(d){return this.fromWireType((c?B:D)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function tb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction Eb(b,a){switch(a){case 2:return function(c){return this.fromWireType(wa[c>>2])};case 3:return function(c){return this.fromWireType(xa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction Fb(b,a,c){switch(a){case 0:return c?function(d){return x[d]}:function(d){return y[d]};case 1:return c?function(d){return A[d>>1]}:function(d){return va[d>>1]};case 2:return c?function(d){return B[d>>2]}:function(d){return D[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}var Gb={};function Hb(b){var a=Gb[b];return void 0===a?O(b):a}var Ib=[];function Jb(b){var a=Ib.length;Ib.push(b);return a}\nfunction Kb(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=Xa(D[a+4*d>>2],\"parameter \"+d);return c}var Lb=[],Mb=[null,[],[]];L=l.BindingError=Oa(\"BindingError\");l.count_emval_handles=function(){for(var b=0,a=5;a<K.length;++a)void 0!==K[a]&&++b;return b};l.get_first_emval=function(){for(var b=5;b<K.length;++b)if(void 0!==K[b])return K[b];return null};Qa=l.PureVirtualError=Oa(\"PureVirtualError\");for(var Nb=Array(256),Ob=0;256>Ob;++Ob)Nb[Ob]=String.fromCharCode(Ob);Ra=Nb;l.getInheritedInstanceCount=function(){return Object.keys(Q).length};\nl.getLiveInheritedInstances=function(){var b=[],a;for(a in Q)Q.hasOwnProperty(a)&&b.push(Q[a]);return b};l.flushPendingDeletes=Sa;l.setDelayFunction=function(b){Ta=b;P.length&&Ta&&Ta(Sa)};db=l.InternalError=Oa(\"InternalError\");X.prototype.isAliasOf=function(b){if(!(this instanceof X&&b instanceof X))return!1;var a=this.T.W.V,c=this.T.U,d=b.T.W.V;for(b=b.T.U;a.X;)c=a.ha(c),a=a.X;for(;d.X;)b=d.ha(b),d=d.X;return a===d&&c===b};\nX.prototype.clone=function(){this.T.U||lb(this);if(this.T.ga)return this.T.count.value+=1,this;var b=T,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.T;b=b(c.call(a,d,{T:{value:{count:e.count,fa:e.fa,ga:e.ga,U:e.U,W:e.W,Z:e.Z,aa:e.aa}}}));b.T.count.value+=1;b.T.fa=!1;return b};X.prototype[\"delete\"]=function(){this.T.U||lb(this);this.T.fa&&!this.T.ga&&M(\"Object already scheduled for deletion\");Ya(this);$a(this.T);this.T.ga||(this.T.Z=void 0,this.T.U=void 0)};X.prototype.isDeleted=function(){return!this.T.U};\nX.prototype.deleteLater=function(){this.T.U||lb(this);this.T.fa&&!this.T.ga&&M(\"Object already scheduled for deletion\");P.push(this);1===P.length&&Ta&&Ta(Sa);this.T.fa=!0;return this};Y.prototype.Ea=function(b){this.ra&&(b=this.ra(b));return b};Y.prototype.oa=function(b){this.ba&&this.ba(b)};Y.prototype.argPackAdvance=8;Y.prototype.readValueFromPointer=ib;Y.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nY.prototype.fromWireType=function(b){function a(){return this.ja?fb(this.V.ca,{W:this.Ka,U:c,aa:this,Z:b}):fb(this.V.ca,{W:this,U:b})}var c=this.Ea(b);if(!c)return this.oa(b),null;var d=cb(this.V,c);if(void 0!==d){if(0===d.T.count.value)return d.T.U=c,d.T.Z=b,d.clone();d=d.clone();this.oa(b);return d}d=this.V.Da(c);d=bb[d];if(!d)return a.call(this);d=this.ia?d.za:d.pointerType;var e=ab(c,this.V,d.V);return null===e?a.call(this):this.ja?fb(d.V.ca,{W:d,U:e,aa:this,Z:b}):fb(d.V.ca,{W:d,U:e})};\nyb=l.UnboundTypeError=Oa(\"UnboundTypeError\");\nvar Qb={l:function(b){return Pb(b+24)+24},k:function(b,a,c){(new Ja(b)).sa(a,c);Ka++;throw b;},r:function(b,a,c){b=O(b);a=Xa(a,\"wrapper\");c=N(c);var d=[].slice,e=a.V,f=e.ca,k=e.X.ca,g=e.X.constructor;b=Ma(b,function(){e.X.qa.forEach(function(h){if(this[h]===k[h])throw new Qa(\"Pure virtual function \"+h+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&M(\"Pass correct 'this' to __construct\");\nvar h=g.implement.apply(void 0,[this].concat(d.call(arguments)));Ya(h);var n=h.T;h.notifyOnDestruction();n.ga=!0;Object.defineProperties(this,{T:{value:n}});T(this);h=n.U;h=Ua(e,h);Q.hasOwnProperty(h)?M(\"Tried to register registered instance: \"+h):Q[h]=this};f.__destruct=function(){this===f&&M(\"Pass correct 'this' to __destruct\");Ya(this);var h=this.T.U;h=Ua(e,h);Q.hasOwnProperty(h)?delete Q[h]:M(\"Tried to unregister unregistered instance: \"+h)};b.prototype=Object.create(f);for(var m in c)b.prototype[m]=\nc[m];return Pa(b)},j:function(b){var a=gb[b];delete gb[b];var c=a.ma,d=a.ba,e=a.pa,f=e.map(k=>k.Ha).concat(e.map(k=>k.Na));V([b],f,k=>{var g={};e.forEach((m,h)=>{var n=k[h],p=m.Fa,r=m.Ga,u=k[h+e.length],t=m.Ma,z=m.Oa;g[m.Ca]={read:C=>n.fromWireType(p(r,C)),write:(C,ca)=>{var J=[];t(z,C,u.toWireType(J,ca));hb(J)}}});return[{name:a.name,fromWireType:function(m){var h={},n;for(n in g)h[n]=g[n].read(m);d(m);return h},toWireType:function(m,h){for(var n in g)if(!(n in h))throw new TypeError('Missing field:  \"'+\nn+'\"');var p=c();for(n in g)g[n].write(p,h[n]);null!==m&&m.push(d,p);return p},argPackAdvance:8,readValueFromPointer:ib,$:d}]})},u:function(){},B:function(b,a,c,d,e){var f=kb(c);a=O(a);W(b,{name:a,fromWireType:function(k){return!!k},toWireType:function(k,g){return g?d:e},argPackAdvance:8,readValueFromPointer:function(k){if(1===c)var g=x;else if(2===c)g=A;else if(4===c)g=B;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(g[k>>f])},$:null})},e:function(b,a,c,d,e,f,\nk,g,m,h,n,p,r){n=O(n);f=Z(e,f);g&&(g=Z(k,g));h&&(h=Z(m,h));r=Z(p,r);var u=La(n);nb(u,function(){zb(\"Cannot construct \"+n+\" due to unbound types\",[d])});V([b,a,c],d?[d]:[],function(t){t=t[0];if(d){var z=t.V;var C=z.ca}else C=X.prototype;t=Ma(u,function(){if(Object.getPrototypeOf(this)!==ca)throw new L(\"Use 'new' to construct \"+n);if(void 0===J.da)throw new L(n+\" has no accessible constructor\");var ob=J.da[arguments.length];if(void 0===ob)throw new L(\"Tried to invoke ctor of \"+n+\" with invalid number of parameters (\"+\narguments.length+\") - expected (\"+Object.keys(J.da).toString()+\") parameters instead!\");return ob.apply(this,arguments)});var ca=Object.create(C,{constructor:{value:t}});t.prototype=ca;var J=new qb(n,t,ca,r,z,f,g,h);z=new Y(n,J,!0,!1);C=new Y(n+\"*\",J,!1,!1);var pb=new Y(n+\" const*\",J,!1,!0);bb[b]={pointerType:C,za:pb};wb(u,t);return[z,C,pb]})},d:function(b,a,c,d,e,f,k){var g=Bb(c,d);a=O(a);f=Z(e,f);V([],[b],function(m){function h(){zb(\"Cannot call \"+n+\" due to unbound types\",g)}m=m[0];var n=m.name+\n\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);var p=m.V.constructor;void 0===p[a]?(h.ea=c-1,p[a]=h):(mb(p,a,n),p[a].Y[c-1]=h);V([],g,function(r){r=Ab(n,[r[0],null].concat(r.slice(1)),null,f,k);void 0===p[a].Y?(r.ea=c-1,p[a]=r):p[a].Y[c-1]=r;return[]});return[]})},m:function(b,a,c,d,e,f){0<a||w();var k=Bb(a,c);e=Z(d,e);V([],[b],function(g){g=g[0];var m=\"constructor \"+g.name;void 0===g.V.da&&(g.V.da=[]);if(void 0!==g.V.da[a-1])throw new L(\"Cannot register multiple constructors with identical number of parameters (\"+\n(a-1)+\") for class '\"+g.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");g.V.da[a-1]=()=>{zb(\"Cannot construct \"+g.name+\" due to unbound types\",k)};V([],k,function(h){h.splice(1,0,null);g.V.da[a-1]=Ab(m,h,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,k,g){var m=Bb(c,d);a=O(a);f=Z(e,f);V([],[b],function(h){function n(){zb(\"Cannot call \"+p+\" due to unbound types\",m)}h=h[0];var p=h.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\ng&&h.V.qa.push(a);var r=h.V.ca,u=r[a];void 0===u||void 0===u.Y&&u.className!==h.name&&u.ea===c-2?(n.ea=c-2,n.className=h.name,r[a]=n):(mb(r,a,p),r[a].Y[c-2]=n);V([],m,function(t){t=Ab(p,t,h,f,k);void 0===r[a].Y?(t.ea=c-2,r[a]=t):r[a].Y[c-2]=t;return[]});return[]})},A:function(b,a){a=O(a);W(b,{name:a,fromWireType:function(c){var d=N(c);Cb(c);return d},toWireType:function(c,d){return Pa(d)},argPackAdvance:8,readValueFromPointer:ib,$:null})},o:function(b,a,c,d){function e(){}c=kb(c);a=O(a);e.values=\n{};W(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,k){return k.value},argPackAdvance:8,readValueFromPointer:Db(a,c,d),$:null});nb(a,e)},n:function(b,a,c){var d=Xa(b,\"enum\");a=O(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Ma(d.name+\"_\"+a,function(){})}});b.values[c]=d;b[a]=d},p:function(b,a,c){c=kb(c);a=O(a);W(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},\nargPackAdvance:8,readValueFromPointer:Eb(a,c),$:null})},c:function(b,a,c,d,e){a=O(a);-1===e&&(e=4294967295);e=kb(c);var f=g=>g;if(0===d){var k=32-8*c;f=g=>g<<k>>>k}c=a.includes(\"unsigned\")?function(g,m){return m>>>0}:function(g,m){return m};W(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:Fb(a,e,0!==d),$:null})},b:function(b,a,c){function d(f){f>>=2;var k=D;return new e(ua,k[f+1],k[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,\nFloat64Array][a];c=O(c);W(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{Ia:!0})},q:function(b,a){a=O(a);var c=\"std::string\"===a;W(b,{name:a,fromWireType:function(d){var e=D[d>>2];if(c)for(var f=d+4,k=0;k<=e;++k){var g=d+4+k;if(k==e||0==y[g]){f=f?na(y,f,g-f):\"\";if(void 0===m)var m=f;else m+=String.fromCharCode(0),m+=f;f=g+1}}else{m=Array(e);for(k=0;k<e;++k)m[k]=String.fromCharCode(y[d+4+k]);m=m.join(\"\")}S(d);return m},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));\nvar f=\"string\"==typeof e;f||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||M(\"Cannot pass non-string to std::string\");var k=(c&&f?()=>{for(var h=0,n=0;n<e.length;++n){var p=e.charCodeAt(n);55296<=p&&57343>=p&&(p=65536+((p&1023)<<10)|e.charCodeAt(++n)&1023);127>=p?++h:h=2047>=p?h+2:65535>=p?h+3:h+4}return h}:()=>e.length)(),g=Pb(4+k+1);D[g>>2]=k;if(c&&f)ka(e,g+4,k+1);else if(f)for(f=0;f<k;++f){var m=e.charCodeAt(f);255<m&&(S(g),M(\"String has UTF-16 code units that do not fit in 8 bits\"));\ny[g+4+f]=m}else for(f=0;f<k;++f)y[g+4+f]=e[f];null!==d&&d.push(S,g);return g},argPackAdvance:8,readValueFromPointer:ib,$:function(d){S(d)}})},i:function(b,a,c){c=O(c);if(2===a){var d=oa;var e=pa;var f=qa;var k=()=>va;var g=1}else 4===a&&(d=ra,e=sa,f=ta,k=()=>D,g=2);W(b,{name:c,fromWireType:function(m){for(var h=D[m>>2],n=k(),p,r=m+4,u=0;u<=h;++u){var t=m+4+u*a;if(u==h||0==n[t>>g])r=d(r,t-r),void 0===p?p=r:(p+=String.fromCharCode(0),p+=r),r=t+a}S(m);return p},toWireType:function(m,h){\"string\"!=typeof h&&\nM(\"Cannot pass non-string to C++ string type \"+c);var n=f(h),p=Pb(4+n+a);D[p>>2]=n>>g;e(h,p+4,n+a);null!==m&&m.push(S,p);return p},argPackAdvance:8,readValueFromPointer:ib,$:function(m){S(m)}})},h:function(b,a,c,d,e,f){gb[b]={name:O(a),ma:Z(c,d),ba:Z(e,f),pa:[]}},g:function(b,a,c,d,e,f,k,g,m,h){gb[b].pa.push({Ca:O(a),Ha:c,Fa:Z(d,e),Ga:f,Na:k,Ma:Z(g,m),Oa:h})},C:function(b,a){a=O(a);W(b,{Ja:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},F:function(b,a,c,d,e){b=Ib[b];\na=N(a);c=Hb(c);var f=[];B[d>>2]=Pa(f);return b(a,c,f,e)},H:function(b,a,c,d){b=Ib[b];a=N(a);c=Hb(c);b(a,c,null,d)},G:Cb,s:function(b,a){var c=Kb(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(k){return k.name}).join(\"_\")+\"$\";var e=Lb[a];if(void 0!==e)return e;var f=Array(b-1);e=Jb((k,g,m,h)=>{for(var n=0,p=0;p<b-1;++p)f[p]=c[p+1].readValueFromPointer(h+n),n+=c[p+1].argPackAdvance;k=k[g].apply(k,f);for(p=0;p<b-1;++p)c[p+1].Aa&&c[p+1].Aa(f[p]);if(!d.Ja)return d.toWireType(m,k)});return Lb[a]=e},\nD:function(b){4<b&&(K[b].na+=1)},E:function(b){var a=N(b);hb(a);Cb(b)},f:function(){w(\"\")},x:function(b,a,c){y.copyWithin(b,a,a+c)},w:function(b){var a=y.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{fa.grow(e-ua.byteLength+65535>>>16);ya();var f=1;break a}catch(k){}f=void 0}if(f)return!0}return!1},z:function(){return 52},t:function(){return 70},y:function(b,\na,c,d){for(var e=0,f=0;f<c;f++){var k=D[a>>2],g=D[a+4>>2];a+=8;for(var m=0;m<g;m++){var h=y[k+m],n=Mb[b];0===h||10===h?((1===b?ea:v)(na(n,0)),n.length=0):n.push(h)}e+=g}D[d>>2]=e;return 0},v:function(){}};\n(function(){function b(e){l.asm=e.exports;fa=l.asm.I;ya();E=l.asm.O;Aa.unshift(l.asm.J);F--;0==F&&(null!==Ca&&(clearInterval(Ca),Ca=null),G&&(e=G,G=null,e()))}function a(e){b(e.instance)}function c(e){return Ga().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){v(\"failed to asynchronously prepare wasm: \"+f);w(f)})}var d={a:Qb};F++;if(l.instantiateWasm)try{return l.instantiateWasm(d,b)}catch(e){return v(\"Module.instantiateWasm callback failed with error: \"+\ne),!1}(function(){return\"function\"!=typeof WebAssembly.instantiateStreaming||Da()||\"function\"!=typeof fetch?c(a):fetch(H,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(a,function(f){v(\"wasm streaming compile failed: \"+f);v(\"falling back to ArrayBuffer instantiation\");return c(a)})})})().catch(ba);return{}})();l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.J).apply(null,arguments)};\nvar Pb=l._malloc=function(){return(Pb=l._malloc=l.asm.K).apply(null,arguments)},S=l._free=function(){return(S=l._free=l.asm.L).apply(null,arguments)},Wa=l.___getTypeName=function(){return(Wa=l.___getTypeName=l.asm.M).apply(null,arguments)};l.___embind_register_native_and_builtin_types=function(){return(l.___embind_register_native_and_builtin_types=l.asm.N).apply(null,arguments)};\nvar la=l.stackSave=function(){return(la=l.stackSave=l.asm.P).apply(null,arguments)},ma,ja=l.stackAlloc=function(){return(ja=l.stackAlloc=l.asm.Q).apply(null,arguments)};l.___cxa_is_pointer_type=function(){return(l.___cxa_is_pointer_type=l.asm.R).apply(null,arguments)};l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.S).apply(null,arguments)};l.cwrap=function(b,a,c,d){c=c||[];var e=c.every(function(f){return\"number\"===f});return\"string\"!==a&&e&&!d?l[\"_\"+b]:function(){return ia(b,a,c,arguments)}};\nl.setValue=function(b,a,c=\"i8\"){c.endsWith(\"*\")&&(c=\"i32\");switch(c){case \"i1\":x[b>>0]=a;break;case \"i8\":x[b>>0]=a;break;case \"i16\":A[b>>1]=a;break;case \"i32\":B[b>>2]=a;break;case \"i64\":Ha=[a>>>0,(I=a,1<=+Math.abs(I)?0<I?(Math.min(+Math.floor(I/4294967296),4294967295)|0)>>>0:~~+Math.ceil((I-+(~~I>>>0))/4294967296)>>>0:0)];B[b>>2]=Ha[0];B[b+4>>2]=Ha[1];break;case \"float\":wa[b>>2]=a;break;case \"double\":xa[b>>3]=a;break;default:w(\"invalid type for setValue: \"+c)}};var Rb;\nG=function Sb(){Rb||Tb();Rb||(G=Sb)};function Tb(){0<F||(Ia(za),0<F||Rb||(Rb=!0,l.calledRun=!0,ha||(Ia(Aa),aa(l),Ia(Ba))))}l.run=Tb;Tb();\n\n\n  return yoga.ready\n}\n);\n})();\n/* harmony default export */ const dist_yoga = (yoga);\n;// CONCATENATED MODULE: ./node_modules/yoga-wasm-web/dist/index.js\nfunction s(e,t){return t}async function dist_c(e){let t=await dist_yoga({instantiateWasm(r,a){return WebAssembly.instantiate(e,r).then(n=>{a(n.instance||n)}),{}},locateFile(){return\"\"}});return entry(s,t)}async function l(e){let t=await o({instantiateWasm(r,a){return WebAssembly.instantiateStreaming(e,r).then(n=>{a(n.instance||n)}),{}},locateFile(){return\"\"}});return i(s,t)}\n\n;// CONCATENATED MODULE: ./node_modules/@resvg/resvg-wasm/index.mjs\n// wasm/dist/index.js\nvar wasm;\nvar heap = new Array(32).fill(void 0);\nheap.push(void 0, null, true, false);\nfunction getObject(idx) {\n  return heap[idx];\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\nvar cachedTextEncoder = new TextEncoder(\"utf-8\");\nvar encodeString = typeof cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === void 0) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr2 = malloc(buf.length);\n    getUint8Memory0().subarray(ptr2, ptr2 + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr2;\n  }\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 127)\n      break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nfunction isLikeNone(x) {\n  return x === void 0 || x === null;\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachegetInt32Memory0;\n}\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length)\n    heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction dropObject(idx) {\n  if (idx < 36)\n    return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nvar cachedTextDecoder = new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar Resvg = class {\n  static __wrap(ptr) {\n    const obj = Object.create(Resvg.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_resvg_free(ptr);\n  }\n  get width() {\n    var ret = wasm.resvg_width(this.ptr);\n    return ret;\n  }\n  get height() {\n    var ret = wasm.resvg_height(this.ptr);\n    return ret;\n  }\n  toString() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_toString(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(r0, r1);\n    }\n  }\n  constructor(svg, options) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      var ptr0 = isLikeNone(options) ? 0 : passStringToWasm0(options, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.resvg_new(retptr, addHeapObject(svg), ptr0, len0);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return Resvg.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  render() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_render(retptr, this.ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n};\nasync function resvg_wasm_load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\nasync function init(input) {\n  if (typeof input === \"undefined\") {\n    input = new URL(\"index_bg.wasm\", void 0);\n  }\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbg_new_f2ab1043dfd47875 = function(arg0, arg1) {\n    var ret = new TypeError(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_instanceof_Uint8Array_8a8537f46e056474 = function(arg0) {\n    var ret = getObject(arg0) instanceof Uint8Array;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof obj === \"string\" ? obj : void 0;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_length_30803400a8f15c59 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_5e74a88a1424a2e0 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_e3b800e570795b3c = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_set_5b8081e9d002f0df = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbg_newwithbyteoffsetandlength_278ec7532799393a = function(arg0, arg1, arg2) {\n    var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  if (typeof input === \"string\" || typeof Request === \"function\" && input instanceof Request || typeof URL === \"function\" && input instanceof URL) {\n    input = fetch(input);\n  }\n  const { instance, module } = await resvg_wasm_load(await input, imports);\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  return wasm;\n}\nvar dist_default = init;\n\n// wasm-binding.ts\nvar initialized = false;\nvar initWasm = async (module_or_path) => {\n  if (initialized) {\n    throw new Error(\"Already initialized. The `initWasm()` function can be used only once.\");\n  }\n  await dist_default(await module_or_path);\n  initialized = true;\n};\nvar Resvg2 = class extends Resvg {\n  constructor(svg, options) {\n    if (!initialized)\n      throw new Error(\"WASM has not been initialized. Call `initWasm()` function.\");\n    super(svg, JSON.stringify(options));\n  }\n};\n\n\n// EXTERNAL MODULE: ./node_modules/@vercel/og/vendor/resvg.simd.wasm?module\nvar resvg_simdmodule = __webpack_require__(966);\n// EXTERNAL MODULE: ./node_modules/@vercel/og/vendor/yoga.wasm?module\nvar yogamodule = __webpack_require__(744);\n;// CONCATENATED MODULE: ./node_modules/@vercel/og/dist/index.js\nvar dist_v=String.fromCharCode(8205),j=/\\uFE0F/g;function og_dist_c(t){return y(t.indexOf(dist_v)<0?t.replace(j,\"\"):t)}function y(t){for(var n=[],e=0,o=0,s=0;s<t.length;)e=t.charCodeAt(s++),o?(n.push((65536+(o-55296<<10)+(e-56320)).toString(16)),o=0):55296<=e&&e<=56319?o=e:n.push(e.toString(16));return n.join(\"-\")}var r={twemoji:t=>\"https://twemoji.maxcdn.com/v/latest/svg/\"+t.toLowerCase()+\".svg\",openmoji:\"https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg/\",blobmoji:\"https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg/\",noto:\"https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg/\",fluent:t=>\"https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/\"+t.toLowerCase()+\"_color.svg\",fluentFlat:t=>\"https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/\"+t.toLowerCase()+\"_flat.svg\"};function m(t,n){(!n||!r[n])&&(n=\"twemoji\");let e=r[n];return fetch(typeof e==\"function\"?e(t):`${e}${t.toUpperCase()}.svg`)}var C=initWasm(resvg_simdmodule),dist_x=dist_c(yogamodule).then(t=>Du(t)),_=fetch(/* asset import */ new __webpack_require__.U(__webpack_require__(742))).then(t=>t.arrayBuffer()),f,u,dist_R=((u=(f=globalThis==null?void 0:globalThis.process)==null?void 0:f.env)==null?void 0:u.NODE_ENV)===\"development\",dist_l={zh:\"Noto+Sans+SC\",ja:\"Noto+Sans+JP\",ko:\"Noto+Sans+KR\",th:\"Noto+Sans+Thai\",he:\"Noto+Sans+Hebrew\",ar:\"Noto+Sans+Arabic\",bn:\"Noto+Sans+Bengali\",ta:\"Noto+Sans+Tamil\",te:\"Noto+Sans+Telugu\",ml:\"Noto+Sans+Malayalam\",devanagari:\"Noto+Sans+Devanagari\",unknown:\"Noto+Sans\"};async function k(t,n){if(!t||!n)return;let e=`https://fonts.googleapis.com/css2?family=${t}&text=${encodeURIComponent(n)}`,s=(await(await fetch(e,{headers:{\"User-Agent\":\"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; de-at) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1\"}})).text()).match(/src: url\\((.+)\\) format\\('(opentype|truetype)'\\)/);if(!s)throw new Error(\"Failed to load font\");return fetch(s[1]).then(a=>a.arrayBuffer())}var g=new Map,F=({emoji:t})=>{let n=async(e,o)=>{if(e===\"emoji\")return\"data:image/svg+xml;base64,\"+btoa(await(await m(og_dist_c(o),t)).text());dist_l[e]||(e=\"unknown\");try{let s=await k(dist_l[e],o);if(s)return{name:`satori_${e}_fallback_${o}`,data:s,weight:400,style:\"normal\"}}catch(s){console.error(\"Failed to load dynamic font for\",o,\". Error:\",s)}};return async(...e)=>{let o=JSON.stringify(e),s=g.get(o);if(s)return s;let a=await n(...e);return g.set(o,a),a}},p=class{constructor(n,e={}){let o=Object.assign({width:1200,height:630,debug:!1},e),s=new ReadableStream({async start(a){await dist_x,await C;let d=await _,h=await Tu(n,{width:o.width,height:o.height,debug:o.debug,fonts:o.fonts||[{name:\"sans serif\",data:d,weight:700,style:\"normal\"}],loadAdditionalAsset:F({emoji:o.emoji})}),w=new Resvg2(h,{fitTo:{mode:\"width\",value:o.width}});a.enqueue(w.render()),a.close()}});return new Response(s,{headers:{\"content-type\":\"image/png\",\"cache-control\":dist_R?\"no-cache, no-store\":\"public, immutable, no-transform, max-age=31536000\",...o.headers},status:o.status,statusText:o.statusText})}};\n/*! Copyright Twitter Inc. and other contributors. Licensed under MIT */\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(425);\n;// CONCATENATED MODULE: ./src/pages/api/ens-avatar.tsx\n\n\n\nconst config = {\n  runtime: 'experimental-edge'\n};\nconst font = fetch(/* asset import */ new __webpack_require__.U(__webpack_require__(353))).then(res => res.arrayBuffer());\nasync function handler(req) {\n  const fontData = await font;\n\n  try {\n    const {\n      searchParams\n    } = new URL(req.url);\n    const name = searchParams.get('name');\n    const src = searchParams.get('src');\n\n    if (!name || !src) {\n      return new Response('Missing name or src', {\n        status: 400\n      });\n    }\n\n    return new p( /*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n      style: {\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        backgroundColor: '#fff',\n        fontSize: 32,\n        fontWeight: 600\n      },\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(\"img\", {\n        src: src,\n        alt: \"NFT Photo\",\n        width: 600,\n        height: 600,\n        style: {\n          objectFit: 'cover'\n        }\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"div\", {\n        style: {\n          position: 'absolute',\n          width: '600px',\n          height: '600px',\n          backgroundColor: 'rgba(0, 0, 0, 0.1)'\n        }\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(\"svg\", {\n        width: \"200\",\n        height: \"200\",\n        viewBox: \"0 0 90 90\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          filter: 'drop-shadow(2px 4px 8px rgba(0, 0, 0, 0.35))'\n        },\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(\"path\", {\n          d: \"M38.0397 51.0875C38.5012 52.0841 39.6435 54.0541 39.6435 54.0541L52.8484 32L39.9608 41.0921C39.1928 41.6096 38.5628 42.3102 38.1263 43.1319C37.5393 44.3716 37.2274 45.7259 37.2125 47.1C37.1975 48.4742 37.4799 49.8351 38.0397 51.0875Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"path\", {\n          d: \"M32.152 59.1672C32.3024 61.2771 32.9122 63.3312 33.9405 65.1919C34.9689 67.0527 36.3921 68.6772 38.1147 69.9567L52.8487 80C52.8487 80 43.6303 67.013 35.8549 54.0902C35.0677 52.7249 34.5385 51.2322 34.2926 49.6835C34.1838 48.9822 34.1838 48.2689 34.2926 47.5676C34.0899 47.9348 33.6964 48.6867 33.6964 48.6867C32.908 50.2586 32.371 51.9394 32.1043 53.6705C31.9508 55.5004 31.9668 57.3401 32.152 59.1672Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"path\", {\n          d: \"M70.1927 60.9125C69.6928 59.9159 68.4555 57.946 68.4555 57.946L54.1514 80L68.1118 70.9138C68.9436 70.3962 69.6261 69.6956 70.099 68.8739C70.7358 67.6334 71.0741 66.2781 71.0903 64.9029C71.1065 63.5277 70.8001 62.1657 70.1927 60.9125Z\",\n          fill: \"white\"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"path\", {\n          d: \"M74.8512 52.8328C74.7008 50.7229 74.0909 48.6688 73.0624 46.8081C72.0339 44.9473 70.6105 43.3228 68.8876 42.0433L54.1514 32C54.1514 32 63.3652 44.987 71.1478 57.9098C71.933 59.2755 72.4603 60.7682 72.7043 62.3165C72.8132 63.0178 72.8132 63.7311 72.7043 64.4324C72.9071 64.0652 73.3007 63.3133 73.3007 63.3133C74.0892 61.7414 74.6262 60.0606 74.893 58.3295C75.0485 56.4998 75.0345 54.66 74.8512 52.8328Z\",\n          fill: \"white\"\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(\"p\", {\n        style: {\n          position: 'absolute',\n          bottom: '40px',\n          left: '67px',\n          color: '#fff',\n          fontSize: `${calcFontSize(name)}px`,\n          textShadow: '2px 4px 8px rgba(0, 0, 0, 0.35)'\n        },\n        children: name\n      })]\n    }), {\n      width: 600,\n      height: 600,\n      fonts: [{\n        name: 'Jakarta',\n        data: fontData,\n        style: 'normal'\n      }]\n    });\n  } catch (err) {\n    return new Response(`Failed to generate the image`, {\n      status: 500\n    });\n  }\n}\n\nfunction calcFontSize(name) {\n  // yoooooo.eth\n  if (name.length > 13) {\n    return 54;\n  }\n\n  return 68;\n}\n\n/***/ }),\n\n/***/ 559:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ next_edge_function_loaderabsolutePagePath_private_next_pages_2Fapi_2Fens_avatar_tsx_page_2Fapi_2Fens_avatar_rootDir_C_3A_5CUsers_5CDevilking6105_5CDesktop_5Cnft_pfp_)\n});\n\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/error.js\nclass PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/utils.js\nfunction fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nfunction toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  let domainItem;\n\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase();\n    }\n\n    for (const item of domainItems) {\n      var ref, ref1; // remove port if present\n\n      const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n\n      if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some(locale => locale.toLowerCase() === detectedLocale))) {\n        domainItem = item;\n        break;\n      }\n    }\n  }\n\n  return domainItem;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nfunction removeTrailingSlash(route) {\n  return route.replace(/\\/$/, '') || '/';\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nfunction parsePath(path) {\n  const hashIndex = path.indexOf('#');\n  const queryIndex = path.indexOf('?');\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n    };\n  }\n\n  return {\n    pathname: path,\n    query: '',\n    hash: ''\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\n\nfunction addPathPrefix(path, prefix) {\n  if (!path.startsWith('/') || !prefix) {\n    return path;\n  }\n\n  const {\n    pathname,\n    query,\n    hash\n  } = parsePath(path);\n  return `${prefix}${pathname}${query}${hash}`;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\n\nfunction addPathSuffix(path, suffix) {\n  if (!path.startsWith('/') || !suffix) {\n    return path;\n  }\n\n  const {\n    pathname,\n    query,\n    hash\n  } = parsePath(path);\n  return `${pathname}${suffix}${query}${hash}`;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\n\nfunction pathHasPrefix(path, prefix) {\n  if (typeof path !== 'string') {\n    return false;\n  }\n\n  const {\n    pathname\n  } = parsePath(path);\n  return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\n\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n  if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n    return addPathPrefix(path, `/${locale}`);\n  }\n\n  return path;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n  let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname);\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath);\n  return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/get-hostname.js\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nfunction getHostname(parsed, headers) {\n  var ref;\n  return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nfunction normalizeLocalePath(pathname, locales) {\n  let detectedLocale; // first item will be empty string from splitting at first char\n\n  const pathnameParts = pathname.split('/');\n  (locales || []).some(locale => {\n    if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n      detectedLocale = locale;\n      pathnameParts.splice(1, 1);\n      pathname = pathnameParts.join('/') || '/';\n      return true;\n    }\n\n    return false;\n  });\n  return {\n    pathname,\n    detectedLocale\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\n\nfunction removePathPrefix(path, prefix) {\n  if (pathHasPrefix(path, prefix)) {\n    const withoutPrefix = path.slice(prefix.length);\n    return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n  }\n\n  return path;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n  var _nextConfig;\n\n  const {\n    basePath,\n    i18n,\n    trailingSlash\n  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n  const info = {\n    pathname: pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n  };\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath);\n    info.basePath = basePath;\n  }\n\n  if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n    const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n    const buildId = paths[0];\n    info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n    info.buildId = buildId;\n  }\n\n  if (i18n) {\n    const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n    info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n    info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n  }\n\n  return info;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/next-url.js\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js\nconst SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nfunction serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const [key, value] = pair.split(\"=\", 2);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js\n\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js\n\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js\n\n\n\n//# sourceMappingURL=index.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/request.js\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/spec-extension/response.js\n\n\n\nconst response_INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[response_INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[response_INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nfunction relativizeURL(url, base) {\n  const baseURL = typeof base === 'string' ? new URL(base) : base;\n  const relative = new URL(url, base);\n  const origin = `${baseURL.protocol}//${baseURL.host}`;\n  return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/internal-utils.js\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n// remove (name) from pathname as it's not considered for routing\nfunction normalizeAppPath(pathname) {\n  return pathname.split('/').reduce((acc, segment, index, segments) => {\n    // Empty segments are ignored.\n    if (!segment) {\n      return acc;\n    }\n\n    if (segment.startsWith('(') && segment.endsWith(')')) {\n      return acc;\n    }\n\n    if (segment.startsWith('@')) {\n      return acc;\n    }\n\n    if (segment === 'page' && index === segments.length - 1) {\n      return acc;\n    }\n\n    return acc + `/${segment}`;\n  }, '');\n}\nfunction normalizeRscPath(pathname, enabled) {\n  return enabled ? pathname.replace(/\\.rsc($|\\?)/, '') : pathname;\n}\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/client/components/app-router-headers.js\nconst RSC = 'RSC';\nconst NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nconst NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nconst RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nconst FLIGHT_PARAMETERS = [[RSC], [NEXT_ROUTER_STATE_TREE], [NEXT_ROUTER_PREFETCH]];\n;// CONCATENATED MODULE: ./node_modules/next/dist/esm/server/web/adapter.js\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst adapter_FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\nasync function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of adapter_FLIGHT_PARAMETERS){\n            requestHeaders.delete(param.toString().toLowerCase());\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction blockUnallowedResponse(promise) {\n    if (false) {}\n    return promise.then((result)=>{\n        var ref;\n        if ((ref = result.response) == null ? void 0 : ref.body) {\n            console.error(new Error(`A middleware can not alter response's body. Learn more: https://nextjs.org/docs/messages/returning-response-body-in-middleware`));\n            return {\n                ...result,\n                response: new Response(\"Internal Server Error\", {\n                    status: 500,\n                    statusText: \"Internal Server Error\"\n                })\n            };\n        }\n        return result;\n    });\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map\n;// CONCATENATED MODULE: ./node_modules/next/dist/build/webpack/loaders/next-edge-function-loader.js?absolutePagePath=private-next-pages%2Fapi%2Fens-avatar.tsx&page=%2Fapi%2Fens-avatar&rootDir=C%3A%5CUsers%5CDevilking6105%5CDesktop%5Cnft-pfp!\n\n        \n\n        enhanceGlobals()\n\n        var mod = __webpack_require__(72)\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/ens-avatar\" must export a `default` function');\n        }\n\n        /* harmony default export */ function next_edge_function_loaderabsolutePagePath_private_next_pages_2Fapi_2Fens_avatar_tsx_page_2Fapi_2Fens_avatar_rootDir_C_3A_5CUsers_5CDevilking6105_5CDesktop_5Cnft_pfp_(opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/ens-avatar\",\n              handler,\n          })\n        }\n    \n\n/***/ }),\n\n/***/ 742:\n/***/ ((module) => {\n\nmodule.exports = \"blob:noto-sans-v27-latin-regular.5dda3fca77107598.ttf\"\n\n/***/ }),\n\n/***/ 353:\n/***/ ((module) => {\n\nmodule.exports = \"blob:PlusJakartaSans-Bold.7f5884e8a1d931f2.ttf\"\n\n/***/ }),\n\n/***/ 966:\n/***/ ((module) => {\n\nmodule.exports = wasm_53adb396180a95eb122a0218c93e3d6474b1a27e;\n\n/***/ }),\n\n/***/ 744:\n/***/ ((module) => {\n\nmodule.exports = wasm_5b50c798761dc0131e9ebe945031077e8a02633b;\n\n/***/ }),\n\n/***/ 627:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\nvar parse = __webpack_require__(899);\nvar walk = __webpack_require__(861);\nvar stringify = __webpack_require__(414);\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = __webpack_require__(172);\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n\n\n/***/ }),\n\n/***/ 899:\n/***/ ((module) => {\n\nvar openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n\n\n/***/ }),\n\n/***/ 414:\n/***/ ((module) => {\n\nfunction stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n\n\n/***/ }),\n\n/***/ 172:\n/***/ ((module) => {\n\nvar minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n\n\n/***/ }),\n\n/***/ 861:\n/***/ ((module) => {\n\nmodule.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n\n\n/***/ }),\n\n/***/ 914:\n/***/ ((__unused_webpack_module, exports, __webpack_require__) => {\n\n\"use strict\";\nvar __webpack_unused_export__;\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar f=__webpack_require__(618),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}__webpack_unused_export__=l;exports.jsx=q;exports.jsxs=q;\n\n\n/***/ }),\n\n/***/ 280:\n/***/ ((__unused_webpack_module, exports) => {\n\n\"use strict\";\n/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n\n\n/***/ }),\n\n/***/ 618:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(280);\n} else {}\n\n\n/***/ }),\n\n/***/ 425:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(914);\n} else {}\n\n\n/***/ }),\n\n/***/ 814:\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = JSON.parse('{\"black\":\"#000000\",\"silver\":\"#c0c0c0\",\"gray\":\"#808080\",\"white\":\"#ffffff\",\"maroon\":\"#800000\",\"red\":\"#ff0000\",\"purple\":\"#800080\",\"fuchsia\":\"#ff00ff\",\"green\":\"#008000\",\"lime\":\"#00ff00\",\"olive\":\"#808000\",\"yellow\":\"#ffff00\",\"navy\":\"#000080\",\"blue\":\"#0000ff\",\"teal\":\"#008080\",\"aqua\":\"#00ffff\",\"orange\":\"#ffa500\",\"aliceblue\":\"#f0f8ff\",\"antiquewhite\":\"#faebd7\",\"aquamarine\":\"#7fffd4\",\"azure\":\"#f0ffff\",\"beige\":\"#f5f5dc\",\"bisque\":\"#ffe4c4\",\"blanchedalmond\":\"#ffebcd\",\"blueviolet\":\"#8a2be2\",\"brown\":\"#a52a2a\",\"burlywood\":\"#deb887\",\"cadetblue\":\"#5f9ea0\",\"chartreuse\":\"#7fff00\",\"chocolate\":\"#d2691e\",\"coral\":\"#ff7f50\",\"cornflowerblue\":\"#6495ed\",\"cornsilk\":\"#fff8dc\",\"crimson\":\"#dc143c\",\"darkblue\":\"#00008b\",\"darkcyan\":\"#008b8b\",\"darkgoldenrod\":\"#b8860b\",\"darkgray\":\"#a9a9a9\",\"darkgreen\":\"#006400\",\"darkgrey\":\"#a9a9a9\",\"darkkhaki\":\"#bdb76b\",\"darkmagenta\":\"#8b008b\",\"darkolivegreen\":\"#556b2f\",\"darkorange\":\"#ff8c00\",\"darkorchid\":\"#9932cc\",\"darkred\":\"#8b0000\",\"darksalmon\":\"#e9967a\",\"darkseagreen\":\"#8fbc8f\",\"darkslateblue\":\"#483d8b\",\"darkslategray\":\"#2f4f4f\",\"darkslategrey\":\"#2f4f4f\",\"darkturquoise\":\"#00ced1\",\"darkviolet\":\"#9400d3\",\"deeppink\":\"#ff1493\",\"deepskyblue\":\"#00bfff\",\"dimgray\":\"#696969\",\"dimgrey\":\"#696969\",\"dodgerblue\":\"#1e90ff\",\"firebrick\":\"#b22222\",\"floralwhite\":\"#fffaf0\",\"forestgreen\":\"#228b22\",\"gainsboro\":\"#dcdcdc\",\"ghostwhite\":\"#f8f8ff\",\"gold\":\"#ffd700\",\"goldenrod\":\"#daa520\",\"greenyellow\":\"#adff2f\",\"grey\":\"#808080\",\"honeydew\":\"#f0fff0\",\"hotpink\":\"#ff69b4\",\"indianred\":\"#cd5c5c\",\"indigo\":\"#4b0082\",\"ivory\":\"#fffff0\",\"khaki\":\"#f0e68c\",\"lavender\":\"#e6e6fa\",\"lavenderblush\":\"#fff0f5\",\"lawngreen\":\"#7cfc00\",\"lemonchiffon\":\"#fffacd\",\"lightblue\":\"#add8e6\",\"lightcoral\":\"#f08080\",\"lightcyan\":\"#e0ffff\",\"lightgoldenrodyellow\":\"#fafad2\",\"lightgray\":\"#d3d3d3\",\"lightgreen\":\"#90ee90\",\"lightgrey\":\"#d3d3d3\",\"lightpink\":\"#ffb6c1\",\"lightsalmon\":\"#ffa07a\",\"lightseagreen\":\"#20b2aa\",\"lightskyblue\":\"#87cefa\",\"lightslategray\":\"#778899\",\"lightslategrey\":\"#778899\",\"lightsteelblue\":\"#b0c4de\",\"lightyellow\":\"#ffffe0\",\"limegreen\":\"#32cd32\",\"linen\":\"#faf0e6\",\"mediumaquamarine\":\"#66cdaa\",\"mediumblue\":\"#0000cd\",\"mediumorchid\":\"#ba55d3\",\"mediumpurple\":\"#9370db\",\"mediumseagreen\":\"#3cb371\",\"mediumslateblue\":\"#7b68ee\",\"mediumspringgreen\":\"#00fa9a\",\"mediumturquoise\":\"#48d1cc\",\"mediumvioletred\":\"#c71585\",\"midnightblue\":\"#191970\",\"mintcream\":\"#f5fffa\",\"mistyrose\":\"#ffe4e1\",\"moccasin\":\"#ffe4b5\",\"navajowhite\":\"#ffdead\",\"oldlace\":\"#fdf5e6\",\"olivedrab\":\"#6b8e23\",\"orangered\":\"#ff4500\",\"orchid\":\"#da70d6\",\"palegoldenrod\":\"#eee8aa\",\"palegreen\":\"#98fb98\",\"paleturquoise\":\"#afeeee\",\"palevioletred\":\"#db7093\",\"papayawhip\":\"#ffefd5\",\"peachpuff\":\"#ffdab9\",\"peru\":\"#cd853f\",\"pink\":\"#ffc0cb\",\"plum\":\"#dda0dd\",\"powderblue\":\"#b0e0e6\",\"rosybrown\":\"#bc8f8f\",\"royalblue\":\"#4169e1\",\"saddlebrown\":\"#8b4513\",\"salmon\":\"#fa8072\",\"sandybrown\":\"#f4a460\",\"seagreen\":\"#2e8b57\",\"seashell\":\"#fff5ee\",\"sienna\":\"#a0522d\",\"skyblue\":\"#87ceeb\",\"slateblue\":\"#6a5acd\",\"slategray\":\"#708090\",\"slategrey\":\"#708090\",\"snow\":\"#fffafa\",\"springgreen\":\"#00ff7f\",\"steelblue\":\"#4682b4\",\"tan\":\"#d2b48c\",\"thistle\":\"#d8bfd8\",\"tomato\":\"#ff6347\",\"turquoise\":\"#40e0d0\",\"violet\":\"#ee82ee\",\"wheat\":\"#f5deb3\",\"whitesmoke\":\"#f5f5f5\",\"yellowgreen\":\"#9acd32\",\"rebeccapurple\":\"#663399\"}');\n\n/***/ })\n\n},\n/******/ __webpack_require__ => { // webpackRuntimeModules\n/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))\n/******/ var __webpack_exports__ = (__webpack_exec__(559));\n/******/ (_ENTRIES = typeof _ENTRIES === \"undefined\" ? {} : _ENTRIES)[\"middleware_pages/api/ens-avatar\"] = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","module","camelCase","str","replace","_","x","toUpperCase","exports","obj","walk","isDate","isRegex","isArray","map","xs","f","res","i","length","reduce","acc","objectKeys","key","Array","Object","prototype","toString","call","has","hasOwnProperty","keys","root","BackgroundList","backgrounds","Background","props","bg","defprop","name","defaultValue","trim","parseSimpleList","cssText","split","join","list","image","repeat","attachment","position","size","origin","clip","color","unshift","parseElementStyle","styleObject","background","bgImage","parseImages","images","tokens","parens","buffer","match","exec","char","ignoreChar","index","slice","backgroundImage","bgColor","backgroundColor","bgAttachment","backgroundAttachment","bgClip","backgroundClip","bgOrigin","backgroundOrigin","bgPosition","backgroundPosition","bgRepeat","backgroundRepeat","bgSize","backgroundSize","ii","undefined","cssBgParser","VALUES_REG","PARTS_REG","LENGTH_REG","parseValue","parts","inset","includes","last","nums","filter","n","toNum","offsetX","offsetY","blurRadius","spreadRadius","stringifyValue","v","toPx","s","isLength","test","parseFloat","parse","stringify","arr","__unused_webpack_exports","__webpack_require__","__unused_webpack_module","_interopDefault","ex","propertiesWithoutUnits","parse__default","camelizeStyleName","cssColorKeywords","hexColorRe","cssFunctionNameRe","noopToken","predicate","node","regExpToken","regExp","transform","String","type","value","SPACE","SLASH","COMMA","WORD","NONE","AUTO","NUMBER","Number","LENGTH","UNSUPPORTED_LENGTH_UNIT","ANGLE","angle","toLowerCase","PERCENT","IDENT","STRING","charCode","fromCharCode","parseInt","COLOR","LINE","BORDER_STYLE","directionFactory","_ref","_ref$types","types","_ref$directions","directions","_ref$prefix","prefix","_ref$suffix","suffix","tokenStream","_ref2","values","expect","apply","hasTokens","expectEmpty","top","_values$","right","_values$2","_values$3","keyFor","parseShadowOffset","width","height","matches","parseShadow","offset","radius","didParseFirst","lastValue","saveRewindPoint","rewind","FLEX_WRAP","FLEX_DIRECTION","fontFamily","NORMAL","STYLE","WEIGHT","VARIANT","defaultFontVariant","ALIGN_CONTENT","JUSTIFY_CONTENT","STYLE$1","oneOfType","tokenType","functionStream","singleNumber","singleLength","singleAngle","xyTransformFactory","valueIfOmitted","_ref3","_ref4","y","xyNumber","xyLength","xyAngle","partTransforms","perspective","scale","scaleX","scaleY","translate","translateX","translateY","rotate","rotateX","rotateY","rotateZ","skewX","skewY","skew","transforms","border","borderWidth","borderColor","borderStyle","partsParsed","borderRadius","boxShadow","_parseShadow","shadowOffset","shadowRadius","shadowColor","shadowOpacity","flex","flexGrow","flexShrink","flexBasis","flexFlow","flexWrap","flexDirection","font","fontStyle","fontWeight","fontVariant","lineHeight","numStyleWeightVariantMatched","fontSize","fontFamily$1","_fontFamily","out","margin","padding","placeContent","justifyContent","alignContent","textShadow","_parseShadow2","textShadowOffset","textShadowRadius","textShadowColor","textDecoration","line","style","lines","sort","reverse","textDecorationLine","textDecorationColor","textDecorationStyle","_ref5","expectFunction","functionName","transformedValues","concat","SYMBOL_MATCH","TokenStream","nodes","parent","rewindIndex","_proto","arguments","tokenDescriptor","matchesFunction","numberOrLengthRe","boolRe","nullRe","undefinedRe","transformRawValue","propName","numberMatch","boolMatch","nullMatch","undefinedMatch","transformShorthandValue","ast","Hp","HM","inputValue","allowShorthand","_ref6","isRawValue","__webpack_exports__","r","d","config","handler","css_to_react_native","css_background_parser","css_box_shadow","lib","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","j","_a","fl","revfl","fd","_b","rev","opentype_module_i","hMap","cd","mb","co","l","le","rvb","sv","r_1","m","flt","fdt","flrm","fdrm","max","a","bits","p","o","bits16","slc","e","BYTES_PER_ELEMENT","set","subarray","ec","err","ind","msg","nt","code","Error","captureStackTrace","inflt","dat","buf","st","sl","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","shft","t","lms","dms","lpos","sym","add","dsym","end","et","td","TextDecoder","decode","stream","Path","commands","fill","stroke","strokeWidth","moveTo","lineTo","curveTo","bezierCurveTo","x1","y1","x2","y2","quadTo","quadraticCurveTo","close","closePath","extend","pathOrCommands","toPathData","decimalPlaces","packValues","arguments$1","round","toFixed","cmd","cffStandardStrings","cffStandardEncoding","cffExpertEncoding","DefaultEncoding","CmapEncoding","cmap","CffEncoding","encoding","charset","fail","message","argument","charToGlyphIndex","codePointAt","glyphs","glyph","get","unicodes","glyphIndexMap","charName","indexOf","check","assert","Glyph","options","bindConstructorValues","defineDependentProperty","externalName","internalName","defineProperty","path","newValue","enumerable","configurable","GlyphSet","unitsPerEm","_path","unicode","xMin","yMin","xMax","yMax","advanceWidth","addUnicode","getPath","hPoints","xScale","yScale","hinting","getCommands","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","leftSideBearing","isFinite","rightSideBearing","_push","unicodeObj","_IndexToUnicodeMap","_hmtxTableData","loader","glyphset","glyphLoader","ttfGlyphLoader","parseGlyph","data","buildPath","cffGlyphLoader","parseCFFCharstring","charstring","searchTag","tag","imin","imax","imid","val","binSearch","searchRange","ranges","range","Layout","tableName","Position","Substitution","getSubstFormat","lookupTable","format","defaultSubtable","subtables","subtable","substFormat","checkArgument","expression","getByte","dataView","getUint8","getUShort","getUint16","getULong","getUint32","getFixed","decimal","getInt16","fraction","getTable","create","layout","tables","createDefaultTable","getDefaultScriptName","hasLatn","scripts","getScriptTable","script","scr","defaultLangSys","reserved","reqFeatureIndex","featureIndexes","langSysRecords","splice","getLangSysTable","language","scriptTable","langSys","langSysRecord","getFeatureTable","feature","langSysTable","featureRecord","featIndexes","allFeatures","features","params","lookupListIndexes","getLookupTables","lookupType","featureTable","allLookups","lookups","lookupFlag","markFilteringSet","getGlyphClass","classDefTable","glyphIndex","startGlyph","classes","classId","getCoverageIndex","coverageTable","expandCoverage","init","defaultKerningTables","getKerningTables","getKerningValue","kerningLookups","leftIndex","rightIndex","covIndex","coverage","posFormat","pairSet","pairSets","k","pair","secondGlyph","value1","xAdvance","class1","classDef1","class2","classDef2","pair$1","classRecords","gpos","version","getSingle","substitutions","lookupTables","idx","delta","deltaGlyphId","sub","by","substitute","getMultiple","replacements","sequences","getAlternates","alternates","alternateSets","getLigatures","ligatures","ligatureSets","ligSet","lig","components","ligGlyph","addSingle","substitution","coverageGlyph","addMultiple","addAlternate","addLigature","ligature","ligComponents","ligatureTable","ligatureSet","arraysEqual","ar1","ar2","getFeature","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","getInt8","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseOffset32","parseFixed","parseString","string","parseTag","parseLongDateTime","parseVersion","minorBase","major","minor","skip","amount","parseULongList","count","offsets","parseOffset16List","parseUShortList","parseShortList","parseByteList","parseList","itemCallback","parseList32","parseRecordList","recordDescription","records","fields","rec","fieldName","fieldType","parseRecordList32","parseStruct","description","struct","parseValueRecord","valueFormat","valueRecord","xPlacement","yPlacement","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice","parseValueRecordList","valueCount","parsePointer","structOffset","parsePointer32","parseListOfLists","subOffsets","subList","parseCoverage","startOffset","parseClassDef","list32","recordList","recordList32","pointer","pointer32","offset16","uShortList","offset32","uLongList","classDef","parseScriptList","parseFeatureList","featureParams","parseLookupList","lookupTableParsers","useMarkFilteringSet","parseFeatureVariationsList","majorVersion","minorVersion","conditionSetOffset","featureTableSubstitutionOffset","getCard8","getCard16","getShort","getTag","getOffset","offSize","getBytes","endOffset","bytes","bytesToString","parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","numberOfContours","_xMin","_yMin","_xMax","_yMax","endPointIndices","instructionLength","instructions","i$1","numberOfCoordinates","flags","i$2","repeatCount","point","i$3","onCurve","px","i$4","py","i$5","isComposite","moreComponents","component","scale01","scale10","dx","dy","matchedPoints","i$6","transformPoints","newPoints","newPt","contourIndex","contour","prev","curr","next","next2","componentGlyph","transformedPoints","firstPt","secondPt","glyf","loca","opt","lowMemory","parseGlyfTableAll","Hinting","_fpgmState","_prepState","_errorState","roundOff","roundToGrid","sign","abs","roundToDoubleGrid","roundToHalfGrid","roundUpToGrid","ceil","roundDownToGrid","floor","roundSuper","period","srPeriod","phase","srPhase","threshold","srThreshold","trunc","xUnitVector","axis","distance","p1","p2","o1","o2","xo","interpolate","rp1","rp2","pv","do1","do2","doa1","doa2","dm1","dm2","setRelative","normalSlope","NEGATIVE_INFINITY","rp","org","rpx","rpy","yo","rpdx","rpdy","slope","touch","xTouched","touched","untouch","yUnitVector","POSITIVE_INFINITY","yTouched","UnitVector","freeze","getUnitVector","sqrt","HPoint","prevPointOnContour","nextPointOnContour","preventExtensions","pvns","fvs","nextTouched","prevTouched","HPZero","defaultState","cvCutIn","deltaBase","deltaShift","loop","minDis","autoFlip","State","env","prog","stack","zp0","zp1","zp2","rp0","fv","dpv","initTZone","state","tZone","gZone","handleElse","ins","ip","nesting","SVTCA","DEBUG","console","log","step","SPVTCA","SFVTCA","SPVTL","p2i","pop","p1i","z2","z1","SFVTL","POP","MDAP","pi","z0","IUP","cp","pp","np","pLen","SHP","rpi","SHC","ci","sp","SHZ","z","MSIRP","MIAP","cv","cvt","GC","MD","pi2","pi1","DELTAP123","ppem","base","ds","arg","appem","mag","ROUND","DELTAC123","SDPVTL","PUSHB","PUSHW","w","MDRP_MIRP","indirect","setRp0","keepD","ro","od","cvte","rp0i","md","Token","activeState","ContextRange","startIndex","contextName","ContextChecker","checkStart","checkEnd","openRange","ContextParams","context","currentIndex","current","backtrack","lookahead","Event","eventId","subscribers","initializeCoreEvents","events","this$1","coreEvents","forEach","event","subscribe","requiresContextUpdate","updateContextsRanges","Tokenizer","registeredContexts","contextCheckers","registeredModifiers","isArabicChar","isIsolatedArabicChar","isTashkeelArabicChar","isLatinChar","FeatureQuery","SubstitutionAction","action","id","lookupCoverage","singleSubstitutionFormat1","singleSubstitutionFormat2","substituteIndex","lookupCoverageList","coverageList","contextParams","lookupList","lookupIndex","chainingSubstitutionFormat3","lookupsCount","inputCoverage","lookaheadCoverage","backtrackCoverage","inputLookups","lookaheadOffset","lookaheadContext","shift","lookaheadParams","lookaheadLookups","backtrackContext","backtrackParams","backtrackLookups","contextRulesMatch","lookupRecords","lookupListIndex","lookupRecord","getLookupByIndex","subtable$1","lookup","getLookupMethod","substitutionType","getSubstitutionType","ligatureSubstitutionFormat1","ligSetIndex","lookaheadItem","decompositionSubstitutionFormat1","prepState","fpgmState","fpgm","funcs","prep","oCvt","execGlyph","cg","execComponent","gz","cc","gLen","inhibitGridFit","instructionTable","bind","pa0i","pa1i","pb0i","pb1i","pa0","pa1","pb0","pb1","x3","y3","x4","y4","div","f1","f2","fn","cip","cprog","ipBegin","rp1i","rp2i","store","e2","e1","pow","n2","n1","sel","ignoreCvt","setState","getState","stateId","inboundIndex","composeRUD","RUDs","RUD","hasFAILObject","every","FAIL","report","dispatch","op","replaceRange","silent","isTokenType","token","isNaN","replaced","replaceToken","removeRange","removeToken","insertToken","registerModifier","modifierId","condition","modifier","newToken","newStateValue","eventHandler","unsubscribe","subsId","setCurrentIndex","rangeToText","getRangeTokens","getText","getContext","on","eventName","args","subscriber","registerContextChecker","contextStartCheck","contextEndCheck","endIndex","getContextRanges","resetContextsRanges","chars","runContextCheck","setEndOffset","rangeId","contextChecker","tokenize","text","from","getDefaultScriptFeaturesIndexes","gsub","getScriptFeaturesIndexes","scriptTag","mapTagsToFeatures","tags","getScriptFeatures","featuresIndexes","lookupFeature","query","names","fullName","en","getFeatureLookups","getLookupSubtables","substType","supports","supportedScript","supportedFeature","some","scriptFeatures","SUBSTITUTIONS","subst","compsCount","applySubstitution","arabicPresentationForms","featuresTags","tokenizer","charContextParams","CONNECT","willConnectPrev","prevChar","isolated","tashkeel","willConnectNext","info","getContextParams","arabicRequiredLigatures","getContextParams$1","latinLigature","Bidi","baseDir","checkId","contextChecks","startCheck","endCheck","tokenizeText","reverseArabicSentences","rangeTokens","checkGlyphIndexStatus","applyArabicPresentationForms","applyArabicRequireLigatures","applyLatinLigatures","Font","empty","familyName","styleName","ascender","descender","createdTimestamp","assign","os2","usWeightClass","weightClass","usWeightClasses","MEDIUM","usWidthClass","widthClass","usWidthClasses","fsSelection","fsSelectionValues","REGULAR","supported","_hinting","outlinesFormat","setText","latinWordCheck","nextChar","arabicWordCheck","arabicSentenceCheck","nextIsWhitespace","registerFeatures","supportedTags","applyFeatures","checkContextReady","contextId","applyFeaturesToContexts","processText","getBidiText","getTextGlyphs","indexes","deleted","hasChar","charToGlyph","updateFeatures","defaultRenderOptions","stringToGlyphs","bidi","notdef","leftGlyph","rightGlyph","gposKerning","kerningPairs","kerning","forEachGlyph","callback","fontScale","kerningValue","letterSpacing","tracking","fullPath","gX","gY","gFontSize","glyphPath","getPaths","glyphPaths","getAdvanceWidth","ITALIC","UNDERSCORE","NEGATIVE","OUTLINED","STRIKEOUT","BOLD","USER_TYPO_METRICS","WWS","OBLIQUE","ULTRA_CONDENSED","EXTRA_CONDENSED","CONDENSED","SEMI_CONDENSED","SEMI_EXPANDED","EXPANDED","EXTRA_EXPANDED","ULTRA_EXPANDED","THIN","EXTRA_LIGHT","LIGHT","SEMI_BOLD","EXTRA_BOLD","BLACK","numTables","platformId","encodingId","parseCmapTableFormat12","groupCount","startCharCode","endCharCode","startGlyphId","parseCmapTableFormat4","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","calcCFFSubroutineBias","subrs","parseCFFIndex","conversionFn","objectOffset","objects","offsetSize","parseCFFDict","parser","entries","operands","parseOperand","b0","b1","b2","b3","parseFloatOperand","entriesToObject","getCFFString","strings","interpretDict","dict","meta","newDict","TOP_DICT_META","PRIVATE_DICT_META","gatherCFFTopDicts","cffIndex","topDictArray","iTopDict","topDict","DataView","byteLength","_subrs","_subrsBias","_defaultWidthX","_nominalWidthX","privateSize","private","privateOffset","privateDict","defaultWidthX","nominalWidthX","subrOffset","subrIndex","_privateDict","c1x","c1y","c2x","c2y","subrsBias","nStems","haveWidth","open","isCIDFont","fdIndex","cff","_fdSelect","fdDict","_fdArray","newContour","parseStems","b4","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","gsubrsBias","gsubrs","header","charStringsIndex","formatMajor","formatMinor","nameIndex","topDictIndex","stringIndex","globalSubrIndex","ros","fdArrayOffset","fdArray","fdSelectOffset","fdSelect","fdArrayIndex","parseCFFFDSelect","nGlyphs","fdArrayCount","iGid","nRanges","first","iRange","numGlyphs","privateDictOffset","parseCFFIndexLowMemory","charStrings","parseCFFCharset","sid","cffEncoding","parseCFFEncoding","enc","nCodes","nLeft","charString","getCffIndexObject","fvar","tableVersion","offsetToData","axisCount","axisSize","instanceCount","instanceSize","axes","parseFvarAxis","minValue","maxValue","instances","instanceStart","parseFvarInstance","inst","coordinates","attachList","attachPoints","caretValue","coordinate","pointindex","ligCaretList","ligGlyphs","markGlyphSets","gdef","markAttachClassDef","subtableParsers","posformat","valueFormat1","valueFormat2","value2","class1Count","class2Count","error","variations","subtableParsers$1","lookupRecordDesc","sequenceIndex","ruleSets","glyphCount","substCount","input","classSets","coverages","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","extensionLookupType","extensionParser","extension","substitutes","head","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","hhea","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfHMetrics","hmtx","numMetrics","parseHmtxTableOnLowMemory","parseHmtxTableAll","kern","parseWindowsKernTable","pairs","subtableVersion","nPairs","parseMacKernTable","warn","ltag","numTags","shortVersion","parseFn","glyphOffsets","glyphOffset","maxp","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","xAvgCharWidth","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","post","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","UTF8","numBytes","codePoints","UTF16","numChars","eightBitMacEncodings","macintosh","MACSTRING","dataLength","table","result","numDataMaps","dataOffset","parseOpenTypeTableEntries","tableEntries","checksum","compression","uncompressTable","tableEntry","inBuffer","compressedLength","outBuffer","opentype","__proto__","_parse","cffTableEntry","fvarTableEntry","glyfTableEntry","gdefTableEntry","gposTableEntry","gsubTableEntry","hmtxTableEntry","kernTableEntry","locaTableEntry","metaTableEntry","signature","flavor","parseWOFFTableEntries","compLength","origLength","ltagTable","locaTable","locaOffsets","glyfTable","cffTable","hmtxTable","addGlyphNamesToUnicodeMap","charCodes","addGlyphNamesAll","kernTable","gdefTable","gposTable","gsubTable","fvarTable","metaTable","metas","load","loadSync","Pu","ur","Au","getOwnPropertyDescriptor","Ru","getOwnPropertyNames","Iu","getPrototypeOf","Lu","Wr","I","go","vo","lr","vn","gn","xl","Vo","bn","wl","Ho","yn","_l","Set","xn","eg","jo","content","presets","darkMode","theme","screens","sm","lg","colors","inherit","transparent","black","white","slate","gray","zinc","neutral","stone","red","orange","amber","yellow","lime","green","emerald","teal","cyan","sky","blue","indigo","violet","purple","fuchsia","pink","rose","columns","auto","spacing","animation","none","spin","ping","pulse","bounce","aspectRatio","square","video","backdropBlur","backdropBrightness","backdropContrast","backdropGrayscale","backdropHueRotate","backdropInvert","backdropOpacity","backdropSaturate","backdropSepia","backgroundOpacity","bottom","center","left","cover","contain","blur","DEFAULT","brightness","borderOpacity","full","borderSpacing","inner","boxShadowColor","caretColor","accentColor","contrast","container","cursor","default","wait","move","help","progress","cell","crosshair","alias","copy","grab","grabbing","divideColor","divideOpacity","divideWidth","dropShadow","grayscale","hueRotate","invert","initial","sans","serif","mono","thin","extralight","light","normal","medium","semibold","bold","extrabold","gap","gradientColorStops","gridAutoColumns","fr","gridAutoRows","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowStart","gridRowEnd","gridTemplateColumns","gridTemplateRows","screen","fit","keyframes","to","opacity","animationTimingFunction","tighter","tight","wide","wider","widest","snug","relaxed","loose","listStyleType","disc","maxHeight","maxWidth","breakpoints","prose","minHeight","minWidth","objectPosition","order","placeholderColor","placeholderOpacity","outlineColor","outlineOffset","outlineWidth","ringColor","ringOffsetColor","ringOffsetWidth","ringOpacity","ringWidth","saturate","scrollMargin","scrollPadding","sepia","space","textColor","textDecorationThickness","textUnderlineOffset","textIndent","textOpacity","transformOrigin","transitionDelay","transitionDuration","transitionProperty","all","shadow","transitionTimingFunction","linear","in","willChange","scroll","contents","zIndex","variantOrder","plugins","vr","Sl","br","risk","Yo","wn","Ol","kl","__esModule","wt","lightBlue","warmGray","trueGray","coolGray","blueGray","Xo","_n","El","getOwnPropertySymbols","Qo","Sn","Pl","Boolean","Ko","kn","Rl","_t","Al","Jo","WeakMap","u","purge","raw","files","extract","safelist","h","extractors","defaultExtractor","extensions","extractor","dim","Zo","Tn","Il","es","En","On","fromEntries","Pn","yr","ts","Cl","Ll","charCodeAt","fromCodePoint","ns","xr","rs","os","wr","is","as","_r","ss","St","Oe","stripComments","ensureObject","getProp","unesc","$l","Sr","ql","Wl","Bl","Le","kt","fs","us","ls","writable","zl","constructor","Gl","spaces","before","after","remove","removeChild","replaceWith","insertBefore","at","clone","appendToPropertyAndEscape","raws","setPropertyAndEscape","setPropertyWithoutEscape","isAtPosition","source","column","stringifyProperty","valueToString","rawSpaceBefore","rawSpaceAfter","oe","Y","UNIVERSAL","ATTRIBUTE","CLASS","COMBINATOR","COMMENT","ID","NESTING","PSEUDO","ROOT","SELECTOR","TAG","kr","Tt","hs","nf","Ce","of","ps","cs","An","setPrototypeOf","cf","append","prepend","removeAll","af","Symbol","iterator","uf","done","insertAfter","_findChildAtPosition","each","atPosition","_inferEndPosition","lastEach","walkAttributes","walkClasses","walkCombinators","walkComments","walkIds","walkNesting","walkPseudos","walkTags","walkUniversals","In","Ot","gs","df","pf","ms","Rn","vf","trailingComma","_error","Cn","Et","vs","bf","yf","Ln","_f","Tr","bs","kf","Sf","Tf","Of","Ef","Pf","Dn","quotes","isIdentifier","charAt","escapeEverything","wrap","Fn","Pt","ws","Af","Rf","If","Lf","ys","Mn","Mf","_constructed","_value","$n","At","_s","Ff","Nf","Nn","Wf","Wn","Rt","Ss","Bf","Uf","qn","Vf","Or","It","Os","Hf","Ts","jf","ks","Bn","Jf","qualifiedName","namespace","namespaceString","_namespace","Yf","zn","Lt","Es","Kf","Zf","Un","rc","Vn","Ct","Ps","nc","ic","Gn","ac","jn","Dt","As","uc","lc","Hn","dc","Is","fg","Rs","Zn","Nt","unescapeValue","Kn","Yn","Mt","Jn","pc","hc","mc","Ls","Qn","Ft","bc","yc","xc","wc","deprecatedUsage","unescaped","quoteMark","Er","_c","getQuotedValue","Xn","_determineQuoteMark","smart","smartQuoteMark","preferredQuoteMark","setValue","_quoteMark","_syncRawValue","DOUBLE_QUOTE","SINGLE_QUOTE","NO_QUOTE","preferCurrentQuoteMark","_handleEscapes","_spacesFor","_stringFor","Cs","offsetOf","insensitive","operator","quoted","attribute","_attribute","ti","$t","Ds","Sc","kc","ei","Ec","ni","qt","Ms","Pc","Ac","ri","Lc","oi","Wt","Fs","Cc","Dc","Nc","$s","Pr","Ns","si","P","combinator","word","comment","tab","newline","feed","cr","backslash","bang","slash","doubleQuote","singleQuote","greaterThan","pipe","equals","plus","caret","tilde","dollar","closeSquare","openSquare","closeParenthesis","openParenthesis","semicolon","colon","comma","asterisk","ampersand","Us","Bt","g","O","A","L","css","valueOf","N","C","D","safe","T","bd","vd","yd","gd","ai","FIELDS","Ar","it","Bs","Ws","TYPE","START_LINE","START_COL","END_LINE","END_COL","START_POS","END_POS","Qs","Ut","Xs","Xe","_d","ye","ui","Sd","zs","kd","Td","li","Od","Gs","Rr","Ed","fi","Pd","Ad","S","E","Rd","J","Ys","Vs","hi","Ld","Hs","js","Qe","ot","di","Dd","rule","lossy","selector","_errorGenerator","errorGenerator","currToken","expected","sourceIndex","insensitiveFlag","$","U","M","q","ee","newNode","parseWhitespaceEquivalentTokens","convertWhitespaceNodesToSpace","lossySpace","rawSpace","isNamedCombinator","namedCombinator","unexpected","locateNextMeaningfulToken","endsWith","startsWith","optionalSpace","missingBackslash","missingParenthesis","missingSquareBracket","prevToken","nextToken","universal","parentheses","parseParenthesisToken","pseudo","splitWord","lastIndexOf","requiredSpace","Cd","Ks","zt","Js","Md","Nd","func","funcRes","_shouldUpdateSelector","updateSelector","_isLossy","lossless","_root","_parseOptions","_run","Promise","resolve","then","_runSync","astSync","transformSync","process","processSync","Zs","X","className","$d","xe","qd","Wd","Bd","Ud","zd","Gd","Vd","Hd","jd","Yd","Xd","na","W","isNode","mi","isPseudoElement","ra","isPseudoClass","gi","isContainer","isNamespace","ea","ta","isUniversal","isTag","isString","isSelector","isRoot","isPseudo","isNesting","isComment","isCombinator","isClassName","isAttribute","de","K","up","we","lp","fp","dp","hp","mp","gp","vp","ia","Te","vi","bi","yi","aa","Gt","sa","wp","_p","Sp","oa","xi","ua","wi","Op","fa","la","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","plum","powderblue","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","thistle","tomato","turquoise","wheat","whitesmoke","yellowgreen","Si","_i","Ep","parseColor","Cp","formatColor","Dp","ca","Ap","Rp","Be","Ir","da","Ue","Ip","Lp","mode","alpha","Ti","ki","Mp","withAlphaValue","Fp","Np","Lr","opacityValue","property","variable","opacityVariable","va","Oi","$p","pattern","Wp","withoutCapturing","ha","any","ma","optional","Bp","zeroOrMore","Up","nestedBrackets","ga","Je","escape","pa","qp","RegExp","Vt","ya","Ei","Vp","zp","Gp","ba","matchAll","substring","wa","Pi","parseBoxShadowValue","Qp","formatBoxShadowValue","Jp","jp","Yp","Xp","xa","splitAtTopLevelOnly","lastIndex","keyword","spread","unknown","valid","Pa","Ri","Kp","normalize","ze","url","ka","number","th","percentage","Ta","Oa","lineWidth","ih","oh","sh","ah","gradient","Ea","fh","ch","genericName","ph","absoluteSize","mh","relativeSize","vh","Zp","eh","Ai","Sa","Cr","nh","uh","lh","dh","hh","gh","Fa","Ci","bh","updateAllClasses","wh","asValue","jt","parseColorFormat","Ii","asColor","Ca","asLookupValue","Da","coerceValue","Th","yh","Li","xh","Aa","pe","Ra","La","Ht","validate","supportsNegativeValues","_h","tailwindConfig","_e","Ma","Ia","Na","Di","Oh","Ua","Fi","Hh","Eh","Ke","Ph","Ah","Rh","Ih","Wa","$a","Lh","Ch","Dh","Mh","Fh","Nh","Yt","Xt","Mi","negative","qa","Ba","__isOptionsFunction","important","separator","normalizeConfig","defaults","Bh","$h","Uh","toPath","cloneDeep","corePlugins","reduceRight","za","jh","Ga","Ya","Ni","Yh","flagEnabled","Jh","issueFlagNotices","Kh","Zh","Xh","ja","Qh","Va","optimizeUniversalDefaults","Qt","future","experimental","Ha","JEST_WORKER_ID","Qa","$i","Xa","e0","flatMap","respectDefaultRingColorOpacity","t0","Ka","qi","o0","n0","Ja","i0","eu","Ig","Za","Wi","Br","bo","Mu","Fu","Nu","$u","qu","Wu","wo","_o","zr","Bu","Ur","unit","zu","Uu","Gu","substr","We","jr","ve","_viewportWidth","_viewportHeight","PI","ue","Gr","Vr","So","je","Intl","Segmenter","granularity","segment","R","Po","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontSizeAdjust","fontStretch","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","imageRendering","lightingColor","markerEnd","markerMid","markerStart","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","textAnchor","textRendering","unicodeBidi","unicodeRange","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","xmlnsXlink","Hu","ht","be","Ro","display","marginTop","marginBottom","blockquote","marginLeft","marginRight","textAlign","hr","h1","h2","h3","h4","h5","h6","strong","em","kbd","pre","whiteSpace","mark","big","small","ju","Xr","yRelative","xRelative","Xu","absolute","relative","Zu","el","mt","Io","Lo","dr","rl","toLocaleLowerCase","Width","Style","solid","dashed","Color","random","Qr","xAbsolute","Co","Zr","tn","Do","Jr","Eo","Map","delete","Kr","ul","pr","globalThis","fetch","headers","arrayBuffer","btoa","ol","ll","catch","rn","src","borderLeftWidth","borderRightWidth","paddingLeft","paddingRight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","setAspectRatio","__src","viewBox","viewbox","setDisplay","DISPLAY_FLEX","DISPLAY_NONE","setAlignContent","stretch","ALIGN_STRETCH","ALIGN_CENTER","ALIGN_FLEX_START","ALIGN_FLEX_END","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","baseline","ALIGN_BASELINE","ALIGN_AUTO","setAlignItems","alignItems","setAlignSelf","alignSelf","setJustifyContent","JUSTIFY_CENTER","JUSTIFY_FLEX_START","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","setFlexDirection","row","FLEX_DIRECTION_ROW","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","setFlexWrap","WRAP_WRAP","nowrap","WRAP_NO_WRAP","WRAP_WRAP_REVERSE","setFlexBasis","setFlexGrow","setFlexShrink","setMaxHeight","setMaxWidth","setMinHeight","setMinWidth","setOverflow","overflow","visible","OVERFLOW_VISIBLE","hidden","OVERFLOW_HIDDEN","setMargin","EDGE_TOP","EDGE_BOTTOM","EDGE_LEFT","EDGE_RIGHT","setBorder","setPadding","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","setPosition","setHeight","setHeightAuto","setWidth","setWidthAuto","Yr","Mo","gt","__resolved","cl","cos","sin","yAbsolute","__parent","sn","an","po","parentStyle","inheritedStyle","isInheritingTransform","debug","embedFont","graphemeImages","canLoadAdditionalAssets","textTransform","toLocaleUpperCase","V","Q","H","wordBreak","Node","justify","insertChild","getChildCount","textOverflow","_inheritedBackgroundClipTextPath","getEngine","measure","G","re","Me","getMinWidth","F","getMaxWidth","te","getWidth","ke","io","setMeasureFunc","me","fe","ce","Ve","Z","He","$e","se","Re","ge","ie","ae","qe","lineIndex","ft","Ou","Nr","rr","Fe","_inheritedClipPathId","oo","_inheritedMaskId","so","ao","nr","uo","getComputedLayout","$r","getComputedWidth","getComputedPadding","getComputedBorder","tt","rt","matrix","Ae","ir","Fo","or","No","ct","sr","lo","qr","fo","Eu","ar","Ne","ho","mo","getSVG","clipPathId","nn","shape","decorationShape","href","mask","un","qo","defaultX","defaultY","Wo","cn","ln","orientation","colorStops","patternUnits","ry","rx","cx","cy","patternContentUnits","preserveAspectRatio","mr","gr","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","gl","Bo","vt","asContentMask","maskBorderOnly","pn","currentClipPath","dn","borderOnly","Uo","currentClipPathId","borderPath","borderType","objectFit","$o","maskUnits","dl","stdDeviation","in2","yt","getTwStyles","children","tw","Oo","flat","Ao","xmlns","Hr","encodeURIComponent","linearGradient","repeatingLinearGradient","radialGradient","repeatingRadialGradient","sideOrCorner","extentKeywords","positionKeywords","pixelValue","percentageValue","emValue","angleValue","zeroValue","startCall","endCall","hexColor","literalColor","rgbColor","rgbaColor","xt","fonts","addFonts","weight","vl","opentype_module","byteOffset","_trackBrokenChars","defaultFont","find","patchFontFallbackResolver","zo","emoji","ko","zh","ml","he","devanagari","symbol","math","Su","s0","a0","Bi","Ui","kind","ne","fractions","B","rem","percent","vw","De","Ee","Dr","Ge","isNegative","device","windowDimensions","Gi","tu","u0","tr","Vi","Hi","Ze","iu","Se","zi","c0","direction","Jt","includeFontPadding","elevation","complete","Kt","styles","prefixes","getStyle","setStyle","getIr","setIr","getPrefixMatch","setPrefixMatch","su","au","uu","index_wasm_et","cu","lu","Mr","Zt","h0","p0","borderTop","borderBottom","borderLeft","borderRight","tint","du","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","ut","mu","er","Zi","eo","cache","isNull","Ji","ru","nu","incrementOrder","pixelDensity","colorScheme","handlePossibleArbitraryBreakpointPrefix","rest","parseIsNegative","parseUtility","styleIr","peekSlice","advance","Qi","consumePeeked","Xi","Yi","Ki","pu","m0","hu","gu","xu","bu","vu","EPSILON","v0","Pe","y0","addComponents","addBase","addVariant","variants","matchUtilities","postcss","_0","addUtilities","no","Tu","loadAdditionalAsset","Fr","ku","fu","prefixMatch","setWindowDimensions","setFontScale","setPixelDensity","setColorScheme","Go","calculateLayout","DIRECTION_LTR","getComputedHeight","freeRecursive","mn","entry_R","ALIGN_COUNT","DIMENSION_COUNT","DIMENSION_WIDTH","DIMENSION_HEIGHT","DIRECTION_COUNT","DIRECTION_INHERIT","DIRECTION_RTL","DISPLAY_COUNT","EDGE_COUNT","EDGE_START","EDGE_END","EDGE_HORIZONTAL","EDGE_VERTICAL","EDGE_ALL","EXPERIMENTAL_FEATURE_COUNT","EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS","FLEX_DIRECTION_COUNT","JUSTIFY_COUNT","JUSTIFY_SPACE_EVENLY","LOG_LEVEL_COUNT","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL_VERBOSE","LOG_LEVEL_FATAL","MEASURE_MODE_COUNT","MEASURE_MODE_UNDEFINED","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","NODE_TYPE_COUNT","NODE_TYPE_DEFAULT","NODE_TYPE_TEXT","OVERFLOW_COUNT","OVERFLOW_SCROLL","POSITION_TYPE_COUNT","PRINT_OPTIONS_COUNT","PRINT_OPTIONS_LAYOUT","PRINT_OPTIONS_STYLE","PRINT_OPTIONS_CHILDREN","UNIT_COUNT","UNIT_UNDEFINED","UNIT_POINT","UNIT_PERCENT","UNIT_AUTO","WRAP_COUNT","fromJS","Config","destroy","createWithConfig","createDefault","getChild","free","MeasureCallback","implement","NaN","Size","Value","entry","yoga","_scriptDir","ready","Rb","document","currentScript","WebAssembly","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","HEAPU32","HEAPF32","Float32Array","HEAPF64","Float64Array","RuntimeError","locateFile","bb","db","fb","FinalizationRegistry","register","unregister","gb","hb","ib","fromWireType","jb","kb","lb","nb","qb","rb","sb","tb","ub","vb","toWireType","yb","zb","Ab","Bb","Cb","Gb","Hb","Ib","Lb","Mb","BindingError","count_emval_handles","get_first_emval","PureVirtualError","Nb","Ob","getInheritedInstanceCount","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","InternalError","isAliasOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","pointerType","ab","UnboundTypeError","Qb","Pb","__construct","notifyOnDestruction","defineProperties","__destruct","read","write","ob","pb","Db","Eb","Fb","ArrayBuffer","Uint8ClampedArray","Kb","copyWithin","grow","asm","clearInterval","instance","credentials","ok","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_malloc","_free","___getTypeName","___embind_register_native_and_builtin_types","stackSave","stackAlloc","Tb","calledRun","___cxa_is_pointer_type","dynCall_jiji","cwrap","array","Sb","run","dist_c","dist_yoga","heap","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","wasm","memory","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","encode","written","passStringToWasm0","malloc","realloc","ptr2","len","ptr","mem","ret","cachegetInt32Memory0","getInt32Memory0","heap_next","addHeapObject","takeObject","cachedTextDecoder","ignoreBOM","fatal","getStringFromWasm0","Resvg","__wrap","__destroy_into_raw","__wbg_resvg_free","resvg_width","resvg_height","retptr","__wbindgen_add_to_stack_pointer","resvg_toString","r0","r1","__wbindgen_free","svg","ptr0","isLikeNone","__wbindgen_malloc","__wbindgen_realloc","len0","resvg_new","render","resvg_render","resvg_wasm_load","imports","Response","Instance","URL","wbg","__wbg_new_f2ab1043dfd47875","arg0","arg1","__wbg_instanceof_Uint8Array_8a8537f46e056474","getObject","__wbindgen_string_get","__wbg_length_30803400a8f15c59","__wbindgen_memory","__wbg_buffer_5e74a88a1424a2e0","__wbg_new_e3b800e570795b3c","__wbindgen_object_drop_ref","__wbg_set_5b8081e9d002f0df","arg2","__wbg_newwithbyteoffsetandlength_278ec7532799393a","__wbindgen_throw","Request","__wbindgen_wasm_module","initialized","initWasm","module_or_path","dist_default","Resvg2","JSON","resvg_simdmodule","yogamodule","dist_v","twemoji","openmoji","blobmoji","noto","fluent","fluentFlat","dist_x","dist_R","NODE_ENV","dist_l","ReadableStream","fitTo","enqueue","status","statusText","jsx_runtime","runtime","req","fontData","searchParams","jsxs","jsx","alt","next_edge_function_loaderabsolutePagePath_private_next_pages_2Fapi_2Fens_avatar_tsx_page_2Fapi_2Fens_avatar_rootDir_C_3A_5CUsers_5CDevilking6105_5CDesktop_5Cnft_pfp_","PageSignatureError","page","RemovedPageError","RemovedUAError","toNodeHeaders","splitCookiesString","cookiesString","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","skipWhitespace","validateURL","cause","responseSymbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","passThroughOnException","waitUntil","promise","NextFetchEvent","request","sourcePage","removeTrailingSlash","route","parsePath","hashIndex","queryIndex","hasQuery","pathname","hash","addPathPrefix","addPathSuffix","pathHasPrefix","REGEX_LOCALHOST_HOSTNAME","parseURL","Internal","NextURL","baseOrOpts","opts","basePath","analyzeUrl","ref","ref1","ref2","ref3","ref4","parsed","pathnameInfo","getNextPathnameInfo","_nextConfig","i18n","trailingSlash","nextConfig","removePathPrefix","withoutPrefix","parseData","paths","buildId","pathLocale","normalizeLocalePath","locales","detectedLocale","pathnameParts","locale","domainLocale","detectDomainLocale","domainItems","hostname","domainItem","item","domainHostname","domain","defaultLocale","domains","host","formatPathname","ignorePrefix","forceLocale","formatSearch","search","ref5","port","protocol","password","username","toJSON","for","SAME_SITE","serialize","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","parseCookieString","cookie","decodeURIComponent","RequestCookies","_parsed","requestHeaders","_headers","getAll","clear","ResponseCookies","responseHeaders","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","Date","compact","newT","normalizeCookie","now","bag","serialized","INTERNALS","NextRequest","cookies","geo","nextUrl","bodyUsed","destination","integrity","keepalive","method","redirect","referrer","referrerPolicy","signal","response_INTERNALS","REDIRECTS","handleMiddlewareField","Headers","NextResponse","body","redirected","json","initObj","rewrite","relativizeURL","baseURL","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","__BUILD_MANIFEST","requestUrl","isDataReq","fromNodeHeaders","object","param","stripInternalSearchParams","extended","rewriteUrl","redirectURL","getUnsupportedModuleErrorMessage","moduleName","proxy","Proxy","_obj","prop","construct","_target","_this","mod","middleware","wasm_53adb396180a95eb122a0218c93e3d6474b1a27e","wasm_5b50c798761dc0131e9ebe945031077e8a02633b","ValueParser","cb","bubble","isUnicodeRange","quote","escapePos","whitespacePos","parenthesesOpenPos","balanced","sourceEndIndex","unclosed","openParentheses","closeParentheses","uLower","uUpper","stringifyNode","custom","customResult","nextCode","nextNextCode","likeNumber","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","__self","__source","defaultProps","$$typeof","_owner","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","refs","updater","isReactComponent","forceUpdate","isPureReactComponent","_status","_result","transition","Children","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","ReactCurrentDispatcher","ReactCurrentBatchConfig","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","createRef","forwardRef","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","_ENTRIES"],"sourceRoot":""}